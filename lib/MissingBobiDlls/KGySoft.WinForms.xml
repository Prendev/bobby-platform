<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KGySoft.WinForms</name>
    </assembly>
    <members>
        <member name="T:KGySoft.ComponentModel.WinFormsPropertyCommandStateUpdater">
            <summary>
            Provides special handling for ToolTipText: tries to find the associated <see cref="T:System.Windows.Forms.ToolTip"/> component.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.AdvancedErrorProvider">
            <summary>
            Provides a <see cref="E:KGySoft.WinForms.Components.AdvancedErrorProvider.SetMessage"/> event, which is triggered if the <see cref="P:System.Windows.Forms.ErrorProvider.DataSource"/> property is set and the message
            of a bound property is about to be retrieved.
            </summary>
            <seealso cref="T:System.Windows.Forms.ErrorProvider" />
        </member>
        <member name="E:KGySoft.WinForms.Components.AdvancedErrorProvider.SetMessage">
            <summary>
            Occurs when the <see cref="P:System.Windows.Forms.ErrorProvider.DataSource"/> property is set and the message of a bound property is about to be retrieved.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedErrorProvider.ShowBindingErrors">
            <summary>
            Gets or sets whether binding errors should be shown by this <see cref="T:KGySoft.WinForms.Components.AdvancedErrorProvider"/>.
            <br/>Default value: <see langword="true"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KGySoft.WinForms.Components.AdvancedErrorProvider" /> class with the default settings.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.#ctor(System.Windows.Forms.ContainerControl)">
            <summary>
            Initializes a new instance of the <see cref="T:KGySoft.WinForms.Components.AdvancedErrorProvider" /> class attached to a container.
            </summary>
            <param name="parentControl">The parent control.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:KGySoft.WinForms.Components.AdvancedErrorProvider" /> class attached to an <see cref="T:System.ComponentModel.IContainer"/> implementation.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.UpdateBinding">
            <summary>
            Provides a method to update the bindings of the <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" />, <see cref="P:System.Windows.Forms.ErrorProvider.DataMember" />, and the error text.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.Dispose(System.Boolean)">
            <summary>
            Releases this <see cref="T:KGySoft.WinForms.Components.AdvancedErrorProvider" /> instance.
            </summary>
            <param name="disposing"><see langword="true"/>&#160;to release both managed and unmanaged resources; <see langword="false"/>&#160;to release only unmanaged resources.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.OnSetMessage(KGySoft.WinForms.Components.SetMessageEventArgs)">
            <summary>
            Raises the <see cref="E:KGySoft.WinForms.Components.AdvancedErrorProvider.SetMessage" /> event.
            </summary>
            <param name="e">The <see cref="T:KGySoft.WinForms.Components.SetMessageEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.InjectedCurrentChanged(System.Object,System.EventArgs)">
            <summary>
            This is the new target of the base.currentChanged delegate field. If this is invoked, we can sure that the base manager is not fixed yet.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.BindingManager_CurrentChanged(System.Object,System.EventArgs)">
            <summary>
            This is the fixed version of the base.ErrorManager_CurrentChanged method
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.CurrencyManager_BindingsCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            This is the fixed version of the base.ErrorManager_BindingsChanged method
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedErrorProvider.BindingManager_BindingComplete(System.Object,System.Windows.Forms.BindingCompleteEventArgs)">
            <summary>
            This is the fixed version of the base.ErrorManager_BindingComplete method
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.AdvancedSaveFileDialog">
            <summary>
            Windows save file dialog that can host a custom control and can raise events.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.FilterIndex">
            <summary>
            Gets or sets the index of the <see cref="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.Filter"/> currently selected in the file dialog box as
            a one-based index.
            The default value is 1.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.DefaultExt">
            <summary>
            Gets or sets default extension.
            The dialog appends this extension to the file name if the user fails to type an extension.
            The string should not contain a period (.). If this member is NULL and the user fails to type an extension, no extension is appended.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.Filter">
            <summary>
            Gets or sets file types filter.
            <example>
            Example: "C# files|*.cs|All files|*.*"
            </example>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.FileName">
            <summary>
            Gets or sets the selected file name
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.Title">
            <summary>
            Gets or sets the title of the dialog
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.CustomControl">
            <summary>
            A custom control that will be placed under the file type combo. It must be allocated and disposed by
            the user, <see cref="T:KGySoft.WinForms.Components.AdvancedSaveFileDialog"/> adjusts only its size if <see cref="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.CustomControlAutoSize"/> is true.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.CustomControlAutoSize">
            <summary>
            Gets or sets whether <see cref="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.CustomControl"/> should be resized when the file dialog is resized.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.CustomControlLabel">
            <summary>
            Gets or sets label of the custom control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.InitialDirectory">
            <summary>
            Gets or sets initial directory
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.PathMustExist">
            <summary>
            Gets or sets whether path of given file must exist. Default value is true.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.ForceShowHiddenFiles">
            <summary>
            Gets or sets forcing the showing of system and hidden files, thus overriding the user setting to show or not show hidden files.
            However, a file that is marked both system and hidden is not shown. Default is false.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.PromptOverride">
            <summary>
            Gets or sets whether Save As dialog box to generate a message box if the selected file already exists.
            The user must confirm whether to overwrite the file. Default is true;
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.AdvancedSaveFileDialog.FileTypeChanged">
            <summary>
            Occurs when user selects another value in file type combo box.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.AdvancedSaveFileDialog.SelectedFileChanged">
            <summary>
            Occurs when user selects a file in the browser.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedSaveFileDialog.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Components.AdvancedSaveFileDialog"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedSaveFileDialog.ShowDialog">
            <summary>
            Shows the file dialog
            </summary>
            <returns></returns>
        </member>
        <member name="M:KGySoft.WinForms.Components.AdvancedSaveFileDialog.BuildDialogTemplate">
            <summary>
            Builds a dummy in-memory Win32 dialog template just for enabling capture of dialog events.
            </summary>
            <returns>A pointer to an unmanaged memory buffer containing the dialog template</returns>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialog">
            <summary>
            Represents a task dialog window that is able display regular buttons, Vista-like command options,
            radio buttons and progress bar. Can work in compatibility mode so dialog can be use even with Windows XP.
            <note><see cref="T:KGySoft.WinForms.Components.TaskDialog"/> implements <see cref="T:System.IDisposable"/>. When task a dialog is disposed, it frees
            every event subscriptions so it is not needed to unsubscribe events explicitly.</note>
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialog.Created">
            <summary>
            Occurs when the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> has been created and is before displayed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialog.Tick">
            <summary>
            Occurs approximately every 200 milliseconds.
            Can be used to update progress information.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialog.HyperlinkClicked">
            <summary>
            Occurs when <see cref="F:KGySoft.WinForms.Components.TaskDialogOptions.HyperlinksEnabled"/> is set in <see cref="P:KGySoft.WinForms.Components.TaskDialog.Options"/>
            and user clicks a hyperlink. If this event is not subscribed or <see cref="P:System.ComponentModel.HandledEventArgs.Handled"/> is set to <see langword="false"/>&#160;in <see cref="T:KGySoft.WinForms.HyperlinkClickedEventArgs"/>,
            then system tries to resolve the hyperlink.
            <note>Resolving the link by the operating system might be blocked so usually the best way is to subscribe this event.</note>
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialog.CheckBoxCheckedChanged">
            <summary>
            Occurs when <see cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/> property changes.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialog.HelpRequested">
            <summary>
            Occurs when user presses F1 on the dialog.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialog.DetailsVisibleChanged">
            <summary>
            Occurs when visibility of the Show/Hide Details expando button changes.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialog.Closing">
            <summary>
            Occurs when the dialog about to be closed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.Message">
            <summary>
            Gets or sets the message text.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.MainInstruction">
            <summary>
            Gets or sets the main instruction text.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.Caption">
            <summary>
            Gets or sets the caption of the task dialog. If caption is <see langword="null"/>, the filename of the executable program is used.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.FooterText">
            <summary>
            Gets or sets the footer text.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxText">
            <summary>
            Gets or sets the verification text of the checkbox of the task dialog. The checkbox will be visible when this property is not empty when the dialog is shown.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked">
            <summary>
            Gets or sets whether the verification check box is checked. This property is ignored when <see cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxText"/> is empty.
            </summary>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxText"/>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.DetailsText">
            <summary>
            Gets or sets the details text. See/Hide details button will be visible only when this property is not empty.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.Options">
            <summary>
            Gest or sets options of the task dialog.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.ShowDetailsText">
            <summary>
            Gets or sets the text of the Show Details button. The Show Details button is visible only when <see cref="P:KGySoft.WinForms.Components.TaskDialog.DetailsText"/> is not empty.
            </summary>
            <remarks>
            When both <see cref="P:KGySoft.WinForms.Components.TaskDialog.ShowDetailsText"/> and <see cref="P:KGySoft.WinForms.Components.TaskDialog.HideDetailsText"/> properties are empty, a default text will be displayed. When one
            of these properties is empty while the other is set, the non-empty value will be displayed in both expanded and collapsed states.
            </remarks>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.HideDetailsText">
            <summary>
            Gets or sets the text of the Hide Details button. The Hide Details button is visible only when <see cref="P:KGySoft.WinForms.Components.TaskDialog.DetailsText"/> is not empty.
            </summary>
            <remarks>
            When both <see cref="P:KGySoft.WinForms.Components.TaskDialog.ShowDetailsText"/> and <see cref="P:KGySoft.WinForms.Components.TaskDialog.HideDetailsText"/> properties are empty, a default text will be displayed. When one
            of these properties is empty while the other is set, the non-empty value will be displayed in both expanded and collapsed states.
            </remarks>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.Icon">
            <summary>
            Gets or sets one of the standard icons as the main icon for the dialog.
            Setting this property clears <see cref="P:KGySoft.WinForms.Components.TaskDialog.CustomIcon"/> and vice-versa.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.CustomIcon">
            <summary>
            Gets or sets a custom <see cref="T:System.Drawing.Icon"/> as the main icon for the dialog.
            Setting this property clears <see cref="P:KGySoft.WinForms.Components.TaskDialog.Icon"/> and vice-versa.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.FooterIcon">
            <summary>
            Gets or sets one of the standard icons as the footer icon for the dialog.
            Setting this property clears <see cref="P:KGySoft.WinForms.Components.TaskDialog.CustomFooterIcon"/> and vice-versa.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.CustomFooterIcon">
            <summary>
            Gets or sets a custom <see cref="T:System.Drawing.Icon"/> as the footer icon for the dialog.
            Setting this property clears <see cref="P:KGySoft.WinForms.Components.TaskDialog.FooterIcon"/> and vice-versa.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons">
            <summary>
            Gets or sets standard buttons if the dialog. When <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> are not empty, this property is ignored.
            If neither standard nor custom buttons are specified, the task dialog will contain the OK button by default.
            By default, these buttons will use the current windows language, unless <see cref="F:KGySoft.WinForms.Components.TaskDialogOptions.TranslateStandardButtons"/> is set
            in <see cref="P:KGySoft.WinForms.Components.TaskDialog.Options"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.DefaultStandardButton">
            <summary>
            Gets or sets the default standard buttons. When <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> are not empty and one of them is specified as default button
            by <see cref="P:KGySoft.WinForms.Components.TaskDialogButton.IsDefault"/>, then this property is ignored.
            If neither standard nor custom buttons are specified as default, the first button will be the default one.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.Width">
            <summary>
            Gets or sets the width of the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> in dialog units.
            The dialog is always at least 100 DLU wide.
            Zero value means that size is auto-calculated.
            Re-assigning zero value adjusts the automatic width of the dialog on demand.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.Buttons">
            <summary>
            Gets a value that contains the TaskDialog controls.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.RadioButtons">
            <summary>
            Gets a value that contains the TaskDialog controls.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarStyle">
            <summary>
            Gets or sets the style of the progress bar.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarState">
            <summary>
            Gets or sets the state of the progress bar.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarMinimum">
            <summary>
            Gets or sets the minimum value of the progress bar.
            This property is used only when <see cref="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarStyle"/> is <see cref="F:KGySoft.WinForms.Components.TaskDialogProgressBarStyle.Regular"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarMaximum">
            <summary>
            Gets or sets the maximum value of the progress bar.
            This property is used only when <see cref="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarStyle"/> is <see cref="F:KGySoft.WinForms.Components.TaskDialogProgressBarStyle.Regular"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarValue">
            <summary>
            Gets or sets the current value of the progress bar.
            This property is used only when <see cref="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarStyle"/> is <see cref="F:KGySoft.WinForms.Components.TaskDialogProgressBarStyle.Regular"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarMarqueeAnimationSpeed">
            <summary>
            Gets or sets the current animation speed value of the progress bar.
            This property is used only when <see cref="P:KGySoft.WinForms.Components.TaskDialog.ProgressBarStyle"/> is <see cref="F:KGySoft.WinForms.Components.TaskDialogProgressBarStyle.Marquee"/>.
            Zero value stops the animation.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.ForceCompatibilityMode">
            <summary>
            Gest or sets whether the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> is to be forced to operate in compatibility mode
            even if current operating system supports native task dialogs.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.IsInCompatibilityMode">
            <summary>
            Gets whether <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> is displayed in compatibility mode.
            When dialog is not displayed, returns <see langword="false"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex">
            <summary>
            After the dialog is closed, gets the index of the clicked custom button defined in <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> collection; otherwise, returns <c>-1</c>.
            </summary>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex">
            <summary>
            After the dialog is closed, gets the index of the selected radio button defined in <see cref="P:KGySoft.WinForms.Components.TaskDialog.RadioButtons"/> collection; otherwise, returns <c>-1</c>.
            </summary>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.DialogResult">
            <summary>
            <para>When read, gets the last result of a closed <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> (if the dialog was closed by one of the <see cref="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons"/>).</para>
            <para>When set and there is an opened <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>, forces to close the dialog with the specified result.</para>
            </summary>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.EmulatedStandardMainIcon">
            <summary>
            When an <see cref="T:KGySoft.WinForms.ITaskDialog"/> implementation does not support one of the <see cref="T:KGySoft.WinForms.Components.TaskDialogStandardIcons"/>, it can set this property
            to handle a standard icon as a custom one.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.EmulatedStandardFooterIcon">
            <summary>
            When an <see cref="T:KGySoft.WinForms.ITaskDialog"/> implementation does not support one of the <see cref="T:KGySoft.WinForms.Components.TaskDialogStandardIcons"/>, it can set this property
            to handle a standard icon as a custom one.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.FormIcon">
            <summary>
            Gets the form icon. It is set by setting <see cref="P:KGySoft.WinForms.Components.TaskDialog.CustomIcon"/> or <see cref="P:KGySoft.WinForms.Components.TaskDialog.EmulatedStandardMainIcon"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> class.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.Show(System.IntPtr,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Shows the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> using the current configuration.
            </summary>
            <returns>A <see cref="T:KGySoft.WinForms.Components.TaskDialogResult"/> value that indicates one of the pressed standard buttons specified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons"/> property.
            If return value is <see cref="F:KGySoft.WinForms.Components.TaskDialogResult.None"/>, then the dialog might have been closed by a custom button, which can be identified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/> property.</para>
            </returns>
            <param name="owner">Handle of the parent window. Can be empty (<see cref="F:System.IntPtr.Zero"/>).</param>
            <param name="customButtonIndex">Returns the index of the clicked custom button specified in <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> collection if the button closed the dialog.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/> property.</para>
            </param>
            <param name="radioButtonIndex">Returns the index of the selected radio button specified in <see cref="P:KGySoft.WinForms.Components.TaskDialog.RadioButtons"/> collection.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/> property.</para>
            </param>
            <param name="verificationTextChecked">Returns whether verification checkbox was checked when the dialog was closed.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/> property.</para>
            </param>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.Show(System.Windows.Forms.IWin32Window,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Shows the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> using the current configuration.
            </summary>
            <returns>A <see cref="T:KGySoft.WinForms.Components.TaskDialogResult"/> value that indicates one of the pressed standard buttons specified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons"/> property.
            If return value is <see cref="F:KGySoft.WinForms.Components.TaskDialogResult.None"/>, then the dialog might have been closed by a custom button, which can be identified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/> property.</para>
            </returns>
            <param name="owner">Handle of the parent window. Can be <see langword="null"/>.</param>
            <param name="customButtonIndex">Returns the index of the clicked custom button specified in <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> collection if the button closed the dialog.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/> property.</para>
            </param>
            <param name="radioButtonIndex">Returns the index of the selected radio button specified in <see cref="P:KGySoft.WinForms.Components.TaskDialog.RadioButtons"/> collection.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/> property.</para>
            </param>
            <param name="verificationTextChecked">Returns whether verification checkbox was checked when the dialog was closed.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/> property.</para>
            </param>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.Show(System.IntPtr)">
            <summary>
            Shows the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> using the current configuration.
            </summary>
            <returns>A <see cref="T:KGySoft.WinForms.Components.TaskDialogResult"/> value that indicates one of the pressed standard buttons specified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons"/> property.
            If return value is <see cref="F:KGySoft.WinForms.Components.TaskDialogResult.None"/>, then the dialog might have been closed by a custom button, which can be identified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/> property.</para>
            </returns>
            <param name="owner">Handle of the parent window. Can be empty (<see cref="F:System.IntPtr.Zero"/>).</param>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Shows the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> using the current configuration.
            </summary>
            <returns>A <see cref="T:KGySoft.WinForms.Components.TaskDialogResult"/> value that indicates one of the pressed standard buttons specified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons"/> property.
            If return value is <see cref="F:KGySoft.WinForms.Components.TaskDialogResult.None"/>, then the dialog might have been closed by a custom button, which can be identified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/> property.</para>
            </returns>
            <param name="owner">Handle of the parent window. Can be <see langword="null"/>.</param>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.Show">
            <summary>
            Shows the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> using the current configuration.
            </summary>
            <returns>A <see cref="T:KGySoft.WinForms.Components.TaskDialogResult"/> value that indicates one of the pressed standard buttons specified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons"/> property.
            If return value is <see cref="F:KGySoft.WinForms.Components.TaskDialogResult.None"/>, then the dialog might have been closed by a custom button, which can be identified by <see cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>.
            <para>Result is stored also in <see cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/> property.</para>
            </returns>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.SelectedRadioButtonIndex"/>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.CheckBoxChecked"/>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.Close">
            <summary>
            Forces to close the dialog. This causes that <see cref="P:KGySoft.WinForms.Components.TaskDialog.DialogResult"/> will be <see cref="F:KGySoft.WinForms.Components.TaskDialogResult.Close"/>
            even if there was no Close button on the dialog.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.OnCheckBoxCheckedChanged(System.Boolean)">
            <summary>
            This is a callback notification of the dialog instance but also raises an event
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialog.IsNonNativeFeatureRequired">
            <summary>
            Gets whether compatibility mode is required because of the chosen settings.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialog.Handle">
            <summary>
            Gets the handle of the dialog.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogButton">
            <summary>
            Represents a custom button in a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> that can be added to <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> collection.
            The button can be either a reguler push button or a link command depending on <see cref="P:KGySoft.WinForms.Components.TaskDialog.Options"/> property flags.
            </summary>
            <seealso cref="T:KGySoft.WinForms.Components.TaskDialogControlCollection`1"/>
            <seealso cref="T:KGySoft.WinForms.Components.TaskDialogOptions"/>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogButton.PropertyIsElevated">
            <summary>
            Gets the name of the <see cref="P:KGySoft.WinForms.Components.TaskDialogButton.IsElevated"/> property.
            Can be used to identify the property in <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogButton.PropertyCustomIcon">
            <summary>
            Gets the name of the <see cref="P:KGySoft.WinForms.Components.TaskDialogButton.CustomIcon"/> property.
            Can be used to identify the property in <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogButton.PropertyIsDefault">
            <summary>
            Gets the name of the <see cref="P:KGySoft.WinForms.Components.TaskDialogButton.IsDefault"/> property.
            Can be used to identify the property in <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialogButton.Click">
            <summary>
            Occurs when the task dialog button is clicked.
            If not subscribed, <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> will be closed when the button is clicked.
            Otherwise, <see cref="P:System.ComponentModel.HandledEventArgs.Handled"/> property should be set to <see langword="false"/>&#160;to let the system close the window.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogButton.IsElevated">
            <summary>
            Gets or sets whether an elevation icon is displayed on the button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogButton.CustomIcon">
            <summary>
            Gets ot sets a custom icon of the button. Has effect only when <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> is used in compatibility mode.
            If <see cref="P:KGySoft.WinForms.Components.TaskDialogButton.IsElevated"/> is also set, the elevated icon is displayed.
            </summary>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.ForceCompatibilityMode"/>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogButton.IsDefault">
            <summary>
            Gets or sets whether this button is the default button.
            If there are more default buttons in a collection first one will be the default one when the dialog appears.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogButton.#ctor">
            <summary>
            Creates a new instance of a task dialog button.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogButton.#ctor(System.String)">
            <summary>
            Creates a new instance of a task dialog button with
            the specified text.
            </summary>
            <param name="text">The text of the button.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogButton.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of a task dialog button with
            the specified name and text.
            </summary>
            <param name="name">The name of the button.</param>
            <param name="text">The text of the button.</param>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogButtonBase">
            <summary>
            Base class of task dialog buttons property.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogButtonBase.PropertyText">
            <summary>
            Gets the name of the <see cref="P:KGySoft.WinForms.Components.TaskDialogButtonBase.Text"/> property.
            Can be used to identify the property in <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogButtonBase.PropertyDescription">
            <summary>
            Gets the name of the <see cref="P:KGySoft.WinForms.Components.TaskDialogButtonBase.Description"/> property.
            Can be used to identify the property in <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogButtonBase.PropertyEnabled">
            <summary>
            Gets the name of the <see cref="P:KGySoft.WinForms.Components.TaskDialogButtonBase.Enabled"/> property.
            Can be used to identify the property in <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogButtonBase.Text">
            <summary>
            Gets or sets the button text.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogButtonBase.Description">
            <summary>
            Gets or sets description of the button. If the button is displayed as a command link, description is displayed
            under the main text. Otherwise, the description might be displayed as a tooltip (only when <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> is used in compatibility mode).
            </summary>
            <seealso cref="P:KGySoft.WinForms.Components.TaskDialog.ForceCompatibilityMode"/>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogButtonBase.Enabled">
            <summary>
            Gets or sets a value that determines whether the button is enabled.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogButtonBase.#ctor">
            <summary>
            Creates a new instance of a task dialog button.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogButtonBase.#ctor(System.String)">
            <summary>
            Creates a new instance of a task dialog button with
            the specified text.
            </summary>
            <param name="text">The text of the button.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogButtonBase.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of a task dialog button with
            the specified name and text.
            </summary>
            <param name="name">The name of the button.</param>
            <param name="text">The text of the button.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogButtonBase.ToString">
            <summary>
            Returns the string representation of this button.
            </summary>
            <returns>A <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogControl">
            <summary>
            Represents a dialog control hosted by a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> instance.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogControl.Parent">
            <summary>
            Gets the parent dialog that is hosting the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogControl.Name">
            <summary>
            Gets or sets the name of this control. Name is not required to be set but it can be used
            to identify controls in a <see cref="T:KGySoft.WinForms.Components.TaskDialogControlCollection`1"/> by name.
            This property can be changed without restriction.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogControl.Tag">
            <summary>
            Gets or sets a tag to the <see cref="T:KGySoft.WinForms.Components.TaskDialogControl"/>.
            A tag can be any object for custom purposes.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogControl.#ctor">
            <summary>
            Creates a new instance of a dialog control without name
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogControl.#ctor(System.String)">
            <summary>
            Creates a new instance of a dialog control with the specified name.
            </summary>
            <param name="name">The name of the control.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogControl.Dispose">
            <summary>
            Disposes the <see cref="T:KGySoft.WinForms.Components.TaskDialogControl"/> instance.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogControl.Dispose(System.Boolean)">
            <summary>
            Releases the resources of the current <see cref="T:KGySoft.WinForms.Components.TaskDialogControl"/> instance.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogControl.ToString">
            <summary>
            Returns the string representation of this instance.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogControl.CheckDisposed">
            <summary>
            Checks whether the current <see cref="T:KGySoft.WinForms.Components.TaskDialogControl"/> instance is disposed and if so, throws an <see cref="T:System.ObjectDisposedException"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogControl.CheckChangePropertyValue">
            <summary>
             Checks whether property changing is allowed.
             If not, throws a <see cref="T:System.NotSupportedException"/>.
             </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogControl.OnPropertyChanged(System.String)">
            <summary>
             Invokes refreshing property in host as well as <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event.
             </summary>
             <param name="propName">The name of the property that is changing.</param>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogRadioButton">
            <summary>
            Represents a custom button in a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> that can be added to <see cref="P:KGySoft.WinForms.Components.TaskDialog.RadioButtons"/> collection.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogRadioButton.PropertyChecked">
            <summary>
            Gets the name of the <see cref="P:KGySoft.WinForms.Components.TaskDialogRadioButton.Checked"/> property.
            Can be used to identify the property in <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Components.TaskDialogRadioButton.Selected">
            <summary>
            Occurs when <see cref="T:KGySoft.WinForms.Components.TaskDialogRadioButton"/> is selected. That is, when <see cref="P:KGySoft.WinForms.Components.TaskDialogRadioButton.Checked"/> becomes <see langword="true"/>.
            If you need a notification even if <see cref="P:KGySoft.WinForms.Components.TaskDialogRadioButton.Checked"/> bacames <see langword="false"/>, use <see cref="E:KGySoft.WinForms.Components.TaskDialogControl.PropertyChanged"/> event instead.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogRadioButton.Checked">
            <summary>
            Gets or sets whether the radio button is checked.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogRadioButton.CheckedInternal">
            <summary>
            Sets checked internally without raising events.
            Can be used when correcting multiple checked buttons in the same collection.
            Can be accessed even in initializing state.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogRadioButton.#ctor">
            <summary>
            Creates a new instance of a task dialog radio button.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogRadioButton.#ctor(System.String)">
            <summary>
            Creates a new instance of a task dialog radio button with
            the specified text.
            </summary>
            <param name="text">The text of the button.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogRadioButton.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of a task dialog radio button with
            the specified name and text.
            </summary>
            <param name="name">The name of the button.</param>
            <param name="text">The text of the button.</param>
        </member>
        <member name="M:KGySoft.WinForms.Components.TaskDialogRadioButton.ToString">
            <summary>
            Returns the string representation of this button.
            </summary>
            <returns>A <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:KGySoft.WinForms.Components.NativeTaskDialog">
            <summary>
            A wrapper class around the in-built task dialog available from Vista
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.NativeTaskDialog.IsAvailable">
            <summary>
            Returns true if the current operating system and application supports native TaskDialog.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.NativeTaskDialog.AllocateButtons(System.Collections.IList,System.Int32,System.Boolean)">
            <summary>
            Building native buttons and returning the unamanged pointer to the result array
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.NativeTaskDialog.FreeButtons(System.IntPtr,System.UInt32)">
            <summary>
            Freeing allocated unmanaged memory for native buttons
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.NativeTaskDialog.ResetSettings">
            <summary>
            Can be called multiple times during the life of a native dialog
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.NativeTaskDialog.ProcessDialogMessages(System.IntPtr,KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            The callback that receives messages from the Task Dialog when various events occur.
            </summary>
            <param name="hwnd">The window handle of the dialog</param>
            <param name="uNotification">The message being passed.</param>
            <param name="wParam">wParam which is interpreted differently depending on the message.</param>
            <param name="lParam">wParam which is interpreted differently depending on the message.</param>
            <param name="refData">The refrence data that was set to TaskDialog.CallbackData.</param>
            <returns>A HRESULT value. The return value is specific to the message being processed. </returns>
        </member>
        <member name="M:KGySoft.WinForms.Components.NativeTaskDialog.InitializeCreatedDialog(System.Boolean)">
            <summary>
            Initializing things, which can be performed only once the dialog is created.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.NativeTaskDialog.KGySoft#WinForms#ITaskDialog#ShowState">
            <summary>
            Gets the state of the dialog. When it is <see cref="F:KGySoft.WinForms.Components.TaskDialogStatus.Initializing"/>, property changing is not allowed in host <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>.
            Changing notifications will be forwarded to the implementation in <see cref="F:KGySoft.WinForms.Components.TaskDialogStatus.Showing"/> and <see cref="F:KGySoft.WinForms.Components.TaskDialogStatus.Closing"/> states.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Components.NativeTaskDialog.KGySoft#WinForms#ITaskDialog#Execute(KGySoft.WinForms.Components.TaskDialog,System.IntPtr,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Executes the dialog (blocking call is expected).
            </summary>
            <param name="taskDialog">The host <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> instance.</param>
            <param name="owner">Owner window handle (if any)</param>
            <param name="selectedButtonIndex">Zero based index of the custom button that closed the dialog, or -1 if the dialog was not closed by a custom button.</param>
            <param name="selectedRadioButtonIndex">Zero based index of the selected radio button, or -1 if there was no selected radio button.</param>
            <param name="checkBoxChecked">A value that indicated whether the verification checkbox was checked when the dialog was closed.</param>
            <returns>A <see cref="T:KGySoft.WinForms.Components.TaskDialogResult"/> value that identifies the standard button that caused the closing of the dialog. If <see cref="F:KGySoft.WinForms.Components.TaskDialogResult.Custom"/>, then refer <paramref name="selectedButtonIndex"/>.</returns>
        </member>
        <member name="M:KGySoft.WinForms.Components.NativeTaskDialog.KGySoft#WinForms#ITaskDialog#PropertyChanged(System.String)">
            <summary>
            Indicates that a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> property has been changed.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogControlCollection`1">
            <summary>
            Represents a collection of <see cref="T:KGySoft.WinForms.Components.TaskDialogControl"/> instances.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogControlCollection`1.Item(System.String)">
            <summary>
            Gets an item of the <see cref="T:KGySoft.WinForms.Components.TaskDialogControlCollection`1"/> by name.
            </summary>
            <param name="name">Name of the control</param>
            <returns>A <see cref="T:KGySoft.WinForms.Components.TaskDialogControl"/> instance with the searched name or <see langword="null"/>&#160;if no control found with such name.</returns>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogOptions">
            <summary>
            Represents possible options of a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.None">
            <summary>
            Represents no options
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.HyperlinksEnabled">
            <summary>
            Indicates that the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> should resolve hyperlinks.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.AllowCancel">
            <summary>
            Indicates that the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> should be able to be closed using Alt-F4, Escape and the title bar’s
            close button even if no cancel button is specified in <see cref="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.UseCommandLinks">
            <summary>
            Indicates that the <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> should be displayed as command links
            (using a standard task dialog glyph) instead of simple push buttons.
            If both <see cref="F:KGySoft.WinForms.Components.TaskDialogOptions.UseCommandLinks"/> and <see cref="F:KGySoft.WinForms.Components.TaskDialogOptions.UseCommandLinksNoIcon"/> are set, glyphs will be visible.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.UseCommandLinksNoIcon">
            <summary>
            Determines whether the <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> should be displayed as command links
            (without a glyph) instead of simple push buttons.
            If both <see cref="F:KGySoft.WinForms.Components.TaskDialogOptions.UseCommandLinks"/> and <see cref="F:KGySoft.WinForms.Components.TaskDialogOptions.UseCommandLinksNoIcon"/> are set, glyphs will be visible.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.ExpandFooterArea">
            <summary>
            Indicates that the details text of a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> should be displayed at the footer area instead of
            immediately after the message. This flag is ignored when <see cref="P:KGySoft.WinForms.Components.TaskDialog.DetailsText"/> is empty
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.DetailsExpanded">
            <summary>
            Indicates that details should be expanded when the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> appears.
            This flag is ignored when <see cref="P:KGySoft.WinForms.Components.TaskDialog.DetailsText"/> is empty.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.PositionRelativeToWindow">
            <summary>
            Indicates that the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> should be centered to the owner window rather than the monitor.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.RightToLeftLayout">
            <summary>
            Indicates that the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> should appear in right-to-left layout.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.AllowMinimize">
            <summary>
            Indicates that the <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> can be minimized.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogOptions.TranslateStandardButtons">
            <summary>
            Indicates that texts of <see cref="P:KGySoft.WinForms.Components.TaskDialog.StandardButtons"/> are translated by <see cref="!:Language"/>
            class instead of using Windows' current language.
            <note>This flag causes to use <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> in compatibility mode.</note>
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogProgressBarStyle">
            <summary>
            Represents possible progress bar styles of a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogProgressBarStyle.None">
            <summary>
            Indicated that no progress bar should be displayed on the dialog.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogProgressBarStyle.Regular">
            <summary>
            Represents the continuous progress bar style.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogProgressBarStyle.Marquee">
            <summary>
            Represents a marquee progress bar style
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogResult">
            <summary>
            Represents possible dialog results of a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogResult.None">
            <summary>
            Indicates none of the possible results.
            Usually meand that the dialog is not closed yet.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogResult.OK">
            <summary>
            Indicates the "OK" dialog result.
            Usually means that the dialog was closed by clicking the "OK" button.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogResult.Cancel">
            <summary>
            Indicates the "Cancel" dialog result.
            Usually means that the dialog was closed by either clicking the "Cancel" button, or pressing Esc or Alt+F4 buttons.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogResult.Retry">
            Indicates the "Retry" dialog result.
            Usually means that the dialog was closed by clicking the "Retry" button.
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogResult.Yes">
            Indicates the "Yes" dialog result.
            Usually means that the dialog was closed by clicking the "Yes" button.
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogResult.No">
            <summary>
            Indicates the "No" dialog result.
            Usually means that the dialog was closed by clicking the "No" button.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogResult.Close">
            <summary>
            Indicates the "Close" dialog result.
            Usually means that the dialog was closed by clicking the "Close" button.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogResult.Custom">
            <summary>
            Indicates a custom dialog result.
            Usually means that the dialog was closed by clicking one of the custom buttons.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogStandardButtonFlags">
            <summary>
            Identifies the possible standard buttons that 
            can be displayed via <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtonFlags.None">
            <summary>
            Represents none of the standard buttons.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtonFlags.OK">
            <summary>
            The task dialog contains the push button: OK.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtonFlags.Yes">
            <summary>
            The task dialog contains the push button: Yes.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtonFlags.No">
            <summary>
            The task dialog contains the push button: No.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtonFlags.Cancel">
            <summary>
            The task dialog contains the push button: Cancel.
            If this button is specified, the task dialog will respond to typical cancel actions (Alt-F4 and Escape).
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtonFlags.Retry">
            <summary>
            The task dialog contains the push button: Retry.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtonFlags.Close">
            <summary>
            The task dialog contains the push button: Close.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogStandardButtons">
            <summary>
            Represents a single standard button in <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtons.None">
            <summary>
            Represents none of the buttons.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtons.OK">
            <summary>
            Identifies the OK button
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtons.Cancel">
            <summary>
            Identifies the Cancel button
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtons.Retry">
            <summary>
            Identifies the Retry button
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtons.Yes">
            <summary>
            Identifies the Yes button
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtons.No">
            <summary>
            Identifies the No button
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardButtons.Close">
            <summary>
            Identifies the Close button
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogStandardIcons">
            <summary>
            Represents possible standard icons for <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.None">
            <summary>
            Represents no icon.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.Information">
            <summary>
            Represents the system infomation icon
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.Warning">
            <summary>
            Represents the system warning icon
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.Error">
            <summary>
            Represents the system error icon
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.Question">
            <summary>
            Represents the system question icon
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.SecuritySuccess">
            <summary>
            Represents the system security success icon with green background
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.SecurityWarning">
            <summary>
            Represents the system security warning icon with yellow background
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.SecurityError">
            <summary>
            Represents the system security error icon with red background
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.SecurityShield">
            <summary>
            Represents the system security shield icon with white background
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.SecurityShieldBlue">
            <summary>
            Represents the system security shield icon with blue background
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.SecurityShieldGray">
            <summary>
            Represents the system security shield icon with gray background
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStandardIcons.SecurityQuestion">
            <summary>
            Represents the system security question icon with blue background
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStatus.Initializing">
            <summary>
            Initializing state
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStatus.Showing">
            <summary>
            Currently Showing
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStatus.Closing">
            <summary>
            Currently Closing
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Components.TaskDialogStatus.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.FileTypeChangedEventArgs">
            <summary>
            Contains arguments of <see cref="E:KGySoft.WinForms.Components.AdvancedSaveFileDialog.FileTypeChanged"/> event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.FileTypeChangedEventArgs.SelectedIndex">
            <summary>
            Gets selected index of the file type combo box in <see cref="T:KGySoft.WinForms.Components.AdvancedSaveFileDialog"/>.
            Unlike as <see cref="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.FilterIndex"/>, this is a zero-based index.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.FileTypeChangedEventArgs.Filter">
            <summary>
            Gets selected file type filter in <see cref="T:KGySoft.WinForms.Components.AdvancedSaveFileDialog"/> or null when
            <see cref="P:KGySoft.WinForms.Components.AdvancedSaveFileDialog.Filter"/> was not correctly defined.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.SelectedFileChangedEventArgs">
            <summary>
            Contains arguments of <see cref="E:KGySoft.WinForms.Components.AdvancedSaveFileDialog.SelectedFileChanged"/> event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.SelectedFileChangedEventArgs.FileName">
            <summary>
            Gets selected file name
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.SetMessageEventArgs">
            <summary>
            Provides arguments for the <see cref="E:KGySoft.WinForms.Components.AdvancedErrorProvider.SetMessage">AdvancedErrorProvider.SetMessage</see> event.
            </summary>
            <seealso cref="T:KGySoft.WinForms.Components.AdvancedErrorProvider" />
        </member>
        <member name="P:KGySoft.WinForms.Components.SetMessageEventArgs.Current">
            <summary>
            Gets the current item of the underlying data source.
            Can be <see langword="null"/>&#160;if the message is required for a binding error.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.SetMessageEventArgs.PropertyName">
            <summary>
            Gets the name of the property for which the message is requested.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.SetMessageEventArgs.Message">
            <summary>
            Gets or sets the message to be displayed. If the message is retrieved due to a binding error or the <see cref="P:KGySoft.WinForms.Components.SetMessageEventArgs.Current"/> item
            implements the <see cref="T:System.ComponentModel.IDataErrorInfo"/> interface, then this property may already contain a value.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogDetailsVisibleChangedEventArgs">
            <summary>
            Contains argurments of <see cref="E:KGySoft.WinForms.Components.TaskDialog.DetailsVisibleChanged"/> event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogDetailsVisibleChangedEventArgs.DetailsVisible">
            <summary>
            Gets whether details text is visible.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Components.TaskDialogTickEventArgs">
            <summary>
            Contain arguments of <see cref="E:KGySoft.WinForms.Components.TaskDialog.Tick"/> event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogTickEventArgs.Elapsed">
            <summary>
            Gets the elapsed time in milliseconds since the dialog is created, or reallocated due to a special property change, or the last reset.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Components.TaskDialogTickEventArgs.Reset">
            <summary>
            Gets or sets a value indicating that timer count should be reset.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedButton">
            <summary>
            Represents a pushbutton with full Windows Vista features support. Fully compatible with for Windows XP, too.
            </summary>
            <remarks>
            The <see cref="T:KGySoft.WinForms.Controls.AdvancedButton"/> class offers the following features in addition to <see cref="T:System.Windows.Forms.Button"/>:
            <list type="bullet">
            <item><description>Images are displayed also when <see cref="P:System.Windows.Forms.ButtonBase.FlatStyle"/> property is <see cref="F:System.Windows.Forms.FlatStyle.System"/>. On a pre-Vista Windows <c>FlatStyle</c> is automatically switched to <see cref="F:System.Windows.Forms.FlatStyle.Standard"/> at runtime.</description></item>
            <item><description>Elevated mode (see <see cref="P:KGySoft.WinForms.Controls.AdvancedButton.IsElevated"/> property). The shield icon is rendered also on a pre-Vista Windows.</description></item>
            <item><description>Different rendering qualities (see <see cref="!:RenderingQuality"/>) property.</description></item>
            <item><description>Adjustable colors in disabled state (see <see cref="P:KGySoft.WinForms.Controls.AdvancedButton.DisabledBackColor"/> and <see cref="P:KGySoft.WinForms.Controls.AdvancedButton.DisabledForeColor"/> properties).</description></item>
            <item><description>Fading animations (only with enabled theming, on Vista and above, see <see cref="P:KGySoft.WinForms.Controls.AdvancedButton.FadingAnimationsEnabled"/> and <see cref="P:KGySoft.WinForms.Controls.AdvancedButton.FadingAnimationOptions"/> properties).</description></item>
            </list>
            </remarks>
        </member>
        <member name="E:KGySoft.WinForms.Controls.AdvancedButton.PaintState">
            <summary>
            Occurs when the control is painted in a specific state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.IsElevated">
            <summary>
            Gets or sets whether an elevated shield icon should be displayed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.Text">
            <returns>
            The text associated with this control.
            </returns>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.AutoSizeMode">
            <summary>
            Gets or sets the mode by which the <see cref="T:KGySoft.WinForms.Controls.AdvancedButton"/> automatically resizes itself.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.TextImageRelation">
            <summary>
            Gets or sets the position of text and image relative to each other.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the button control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.Image">
            <summary>
            Gets or sets the image that is displayed on the button control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use compatible text rendering engine (GDI+) or not (GDI).
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.DisabledForeColor">
            <summary>
            Gets or sets disabled fore color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.DisabledBackColor">
            <summary>
            Gets or sets disabled back color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <returns>
            A <see cref="T:System.Drawing.Color"/> value representing the background color.
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedButton.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.AdvancedButton"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedButton.CheckImage">
            <summary>
            Checks image consistency. Returns true if image update has been performed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.FadingAnimationsEnabled">
            <summary>
            Gets or sets whether fading animations are enabled for the control.
            Animations work in Windows Vista and above, with non-classic themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.FadingAnimationOptions">
            <summary>
            Gets or sets fading options of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedButton.FadingAnimationDefaultSpeed">
            <summary>
            Gets or sets default fading animation speed for non-standard animations in milliseconds. Zero value means immediate change.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedCheckBox">
            <summary>
            Represents a checkbox with full Windows Vista features support. Fully compatible with for Windows XP, too.
            </summary>
            <remarks>
            The <see cref="T:KGySoft.WinForms.Controls.AdvancedCheckBox"/> class offers the following features in addition to <see cref="T:System.Windows.Forms.CheckBox"/>:
            <list type="bullet">
            <item><description><see cref="P:System.Windows.Forms.ButtonBase.AutoSize"/> property works as expected when check box is docked</description></item>
            <item><description>Different rendering qualities (see <see cref="!:RenderingQuality"/>) property.</description></item>
            <item><description>Adjustable colors in disabled state (see <see cref="P:KGySoft.WinForms.Controls.AdvancedCheckBox.DisabledBackColor"/> and <see cref="P:KGySoft.WinForms.Controls.AdvancedCheckBox.DisabledForeColor"/> properties).</description></item>
            <item><description>Fading animations (only with enabled theming, on Vista and above, see <see cref="P:KGySoft.WinForms.Controls.AdvancedCheckBox.FadingAnimationsEnabled"/> and <see cref="P:KGySoft.WinForms.Controls.AdvancedCheckBox.FadingAnimationOptions"/> properties).</description></item>
            </list>
            </remarks>
        </member>
        <member name="E:KGySoft.WinForms.Controls.AdvancedCheckBox.PaintState">
            <summary>
            Occurs when the control is painted in a specific state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedCheckBox.DisabledForeColor">
            <summary>
            Gets or sets disabled fore color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedCheckBox.DisabledBackColor">
            <summary>
            Gets or sets disabled back color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedCheckBox.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <returns>
            A <see cref="T:System.Drawing.Color"/> value representing the background color.
            </returns>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedCheckBox.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use compatible text rendering engine (GDI+) or not (GDI).
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedCheckBox.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the button control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedCheckBox.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.AdvancedCheckBox"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedCheckBox.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"/> representing the width and height of a rectangle.
            </returns>
            <param name="proposedSize">The custom-sized area for a control.</param>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedCheckBox.FadingAnimationsEnabled">
            <summary>
            Gets or sets whether fading animations are enabled for the control.
            Animations work in Windows Vista and above, with non-classic themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedCheckBox.FadingAnimationOptions">
            <summary>
            Gets or sets fading options of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedCheckBox.FadingAnimationDefaultSpeed">
            <summary>
            Gets or sets default fading animation speed for non-standard animations in milliseconds. Zero value means immediate change.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedComboBox">
            <summary>
            Advanced version of <see cref="T:System.Windows.Forms.ComboBox"/> control that supports read-only mode and customized coloring even in disabled state.
            Furthermore, supports numerous data-bound combo initializations and fixes an auto complete bug: in original combo box auto complete
            does not work in <see cref="F:System.Windows.Forms.ComboBoxStyle.Simple"/> mode.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedComboBox.InnerEditorWindow">
            <summary>
            Hooks WndProc of the inner editor window to deny WM_PASTE
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.AdvancedComboBox.ReadOnlyChanged">
            <summary>
            Occurs when <see cref="P:KGySoft.WinForms.Controls.AdvancedComboBox.ReadOnly"/> property has been changed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.AdvancedComboBox.TextChangedOnLeave">
            <summary>
            Occurs on leaving the control when content is different from the original one when the control was focused.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.BackColor">
            <summary>
            Gets or sets the background color of the control in current state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.ForeColor">
            <summary>
            Gets or sets the foreground color of the control in current state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.DrawMode">
            <summary>
            Do not set this property. DrawMode is automatically managed in <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.DropDownStyle">
            <summary>
            Gets or sets a value specifying the style of the combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.AutoCompleteMode">
            <summary>
            Gets or sets an option that controls how automatic completion works for the inner combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.AutoCompleteSource">
            <summary>
             Gets or sets a value specifying the source of complete strings used for automatic completion.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.EnabledForeColor">
            <summary>
            ForeColor when control is Enabled.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.EnabledBackColor">
            <summary>
            BackColor when control is Enabled and not ReadOnly.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.DisabledBackColor">
            <summary>
            BackColor when control is not Enabled or is ReadOnly.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.DisabledForeColor">
            <summary>
            ForeColor when control is not Enabled.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.SystemDrawDropDownListMode">
            <summary>
            Gets or sets whether the enabled combo box should be drawn by the system in <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList"/> mode.
            If this property is <see langword="false"/>, then drop-down list appearance will be the same as in case of <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown"/> mode
            even with Windows Vista/Windows 7 themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.ReadOnly">
            <summary>
            Gets or sets read-only state of the control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.Clear">
            <summary>
            Clears <see cref="P:KGySoft.WinForms.Controls.AdvancedComboBox.Text"/> property. If <see cref="P:KGySoft.WinForms.Controls.AdvancedComboBox.AutoCompleteMode"/> property is set on a simple mode combo box, then
            use this method to clear text instead of setting empty string to Text property.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:KGySoft.WinForms.Controls.AdvancedComboBox.ReadOnlyChanged"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.OnTextChangedOnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:KGySoft.WinForms.Controls.AdvancedComboBox.TextChangedOnLeave"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Draws an item in the dropdown area and also in the control area in dropdownlist mode.
            Works only if DrawMode is OwnerDrawFixed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Drawing appearance in disabled mode (works only in DropDownList mode)
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedComboBox.IsEmpty">
            <summary>
            Gets whether the there is no selected item in the combo box (<see cref="!:ComboBox.SelectedValue"/> is <see langword="null"/>, <see cref="T:System.DBNull"/> or equals with <see cref="F:KGySoft.WinForms.ControlExtensions.NotSelectedValue"/>)
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom(System.Data.DataTable,System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, the displayed column must contain string values.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom(System.Data.DataTable,System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom(System.Data.DataTable,System.String,System.String)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and translated.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom(System.Type,System.Type,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="translateNames">Indicates whether the displayed enum field names should be translated.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom(System.Type,System.Type,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom(System.Type,System.Type)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom(System.Type)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, <paramref name="displayMember"/> must be writable and should refer to a <see cref="T:System.String"/> property.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedComboBox.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>. Items will not be sorted and translated.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedDateTimePicker">
            <summary>
            Represents a date-time picker that supports coloring in disabled state.
            Its <see cref="P:KGySoft.WinForms.Controls.AdvancedDateTimePicker.Value"/> property is redefined so it returns <see cref="F:System.DateTime.MaxValue"/> if <see cref="P:System.Windows.Forms.DateTimePicker.Checked"/> is <see langword="false"/>&#160;and
            instead of throwing exception when invalid date is assigned to it, it simpy changes <see cref="P:System.Windows.Forms.DateTimePicker.Checked"/> false (if checkbox is visible), or just ignores the value.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedDateTimePicker.#ctor">
            <summary>
            Creates a new <see cref="T:KGySoft.WinForms.Controls.AdvancedDateTimePicker"/> instance.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedDateTimePicker.Value">
            <summary>
            Gets or sets the date/time value assigned to the control.
            </summary>
            <value>Returns <see cref="F:System.DateTime.MaxValue"/> if <see cref="P:System.Windows.Forms.DateTimePicker.ShowCheckBox"/> is <see langword="true"/>&#160;and <see cref="P:System.Windows.Forms.DateTimePicker.Checked"/> is false.</value>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedDateTimePicker.DisabledForeColor">
            <summary>
            Gets or sets disabled fore color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedDateTimePicker.DisabledBackColor">
            <summary>
            Gets or sets disabled back color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedDateTimePicker.BackColor">
            <summary>
            Gets or sets a value indicating the background color of the control.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedLabel">
            <summary>
            Represents a label that supports correct auto sizing, different rendering qualites, disabled coloring, advanced border styles, and
            is able to automatically resolve hyperlinks like the following example:
            <example>
            <c>This is a &lt;a href="http://kgysoft.try.hu"&gt;hyperlink&lt;/a&gt;</c>
            </example>
            </summary>
            <remarks>
            The <see cref="T:KGySoft.WinForms.Controls.AdvancedLabel"/> class offers the following features in addition to <see cref="T:System.Windows.Forms.LinkLabel"/>:
            <list type="bullet">
            <item><description><see cref="P:System.Windows.Forms.Label.AutoSize"/> property works as expected when label is docked</description></item>
            <item><description>Different rendering qualities (see <see cref="!:RenderingQuality"/>) property.</description></item>
            <item><description>Advanced border styles.</description></item>
            <item><description>Adjustable colors in disabled state (see <see cref="P:KGySoft.WinForms.Controls.AdvancedLabel.DisabledBackColor"/> and <see cref="P:KGySoft.WinForms.Controls.AdvancedLabel.DisabledForeColor"/> properties).</description></item>
            <item><description>Fading animations (only with enabled theming, on Vista and above, see <see cref="P:KGySoft.WinForms.Controls.AdvancedLabel.FadingAnimationsEnabled"/> and <see cref="P:KGySoft.WinForms.Controls.AdvancedLabel.FadingAnimationOptions"/> properties).</description></item>
            <item><description>Automatic resolving of hyperlinks.</description></item>
            </list>
            </remarks>
        </member>
        <member name="E:KGySoft.WinForms.Controls.AdvancedLabel.HyperlinkClicked">
            <summary>
            Occurs when a link is clicked.
            To handle clicked links automatically, set <see cref="P:KGySoft.WinForms.Controls.AdvancedLabel.AutoHandleUrls"/>&#160;<see langword="true"/>, and if this event is subsribed, set <see cref="!:HyperlinkClickedEventArgs.Handled"/>&#160;<see langword="false"/>&#160;in the event handler.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.AdvancedLabel.PaintState">
            <summary>
            Occurs when the control is painted in a specific state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.AutoHandleUrls">
            <summary>
            Gets or sets whether clicked links should be handled automatically or when <see cref="!:HyperlinkClickedEventArgs.Handled"/> is set to <see langword="false"/>.
            <note type="caution">Caution: Setting this property to <see langword="true"/>&#160;may cause security issues. Use only in secure circumstances!</note>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.ResolveHyperlinks">
            <summary>
            Gets or sets whether hyperlinks should be resolved.
            </summary>
            <remarks>
            <para>When value is <see cref="F:KGySoft.WinForms.HyperlinkResolveMode.ResolveHrefsOnly"/>, hyperlinks will be resolved only in the following form:
            <example><c>This is a &lt;a href="http://kgysoft.try.hu"&gt;hyperlink&lt;/a&gt;</c></example>
            </para>
            <para>When value is <see cref="F:KGySoft.WinForms.HyperlinkResolveMode.ResolveAll"/>, simple inline hyperlinks will be resolved, too.
            </para>
            </remarks>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.BorderStyle">
            <summary>
            Gets or sets the border style of the <see cref="T:KGySoft.WinForms.Controls.AdvancedLabel"/> panel.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.Text">
            <summary>
            Gets or sets text of the label. When <see cref="P:KGySoft.WinForms.Controls.AdvancedLabel.ResolveHyperlinks"/> is not <see cref="F:KGySoft.WinForms.HyperlinkResolveMode.None"/>,
            hyperlinks in text like the following will be converted to hyperlinks:
            <example><c>This is a &lt;a href="http://kgysoft.try.hu"&gt;hyperlink&lt;/a&gt;</c></example>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.RawText">
            <summary>
            Gets or sets raw text of the label. When <see cref="P:KGySoft.WinForms.Controls.AdvancedLabel.ResolveHyperlinks"/> is not <see cref="F:KGySoft.WinForms.HyperlinkResolveMode.None"/>,
            value of this property may differ from <see cref="P:KGySoft.WinForms.Controls.AdvancedLabel.Text"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
            <returns>
            The <see cref="T:System.Drawing.Font"/> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont"/> property.
            </returns>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.DisabledForeColor">
            <summary>
            Gets or sets disabled fore color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.DisabledBackColor">
            <summary>
            Gets or sets disabled back color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use compatible text rendering engine (GDI+) or not (GDI).
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the button control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedLabel.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.AdvancedLabel"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.FadingAnimationsEnabled">
            <summary>
            Gets or sets whether fading animations are enabled for the control.
            Animations work in Windows Vista and above, with non-classic themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.FadingAnimationOptions">
            <summary>
            Gets or sets fading options of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedLabel.FadingAnimationDefaultSpeed">
            <summary>
            Gets or sets default fading animation speed for non-standard animations in milliseconds. Zero value means immediate change.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedPanel">
            <summary>
            Represents an advanced panel with much more flexible <see cref="P:KGySoft.WinForms.Controls.AdvancedPanel.BorderStyle"/> than original <see cref="T:System.Windows.Forms.Panel"/>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedPanel.BorderStyle">
            <summary>
            Gets or sets the border style of the <see cref="T:KGySoft.WinForms.Controls.AdvancedPanel"/> panel.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedProgressBar">
            <summary>
            Represents a progress bar with advanced capabilities.
            <remarks>
            The <see cref="T:KGySoft.WinForms.Controls.AdvancedProgressBar"/> class offers the following features in addition to <see cref="T:System.Windows.Forms.ProgressBar"/>:
            <list type="bullet">
            <item><description>Paused/error state (see <see cref="P:KGySoft.WinForms.Controls.AdvancedProgressBar.State"/> property).</description></item>
            <item><description>New <see cref="P:KGySoft.WinForms.Controls.AdvancedProgressBar.Style"/> property that affect rendering mode.</description></item>
            <item><description>Custom colors (when <see cref="P:KGySoft.WinForms.Controls.AdvancedProgressBar.Style"/> is not <see cref="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.System"/>)</description></item>
            </list>
            </remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedProgressBar.State">
            <summary>
            Gets or sets the state of the progress bar. On pre-Vista Windows versions, or when <see cref="M:System.Windows.Forms.Application.EnableVisualStyles"/>
            was not called in the executing application, applicable only for non-System <see cref="P:KGySoft.WinForms.Controls.AdvancedProgressBar.Style"/>s.
            The progress bar stops any animation when state is not <see cref="F:KGySoft.WinForms.ProgressBarState.Normal"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedProgressBar.Style">
            <summary>
            Gets or sets the rendering style of the <see cref="T:KGySoft.WinForms.Controls.AdvancedProgressBar"/>.
            When visual styles are not available, <see cref="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.ThemedShiny"/> and <see cref="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.ThemedFlat"/> styles
            are defaulting to <see cref="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.Classic"/> style.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedProgressBar.IsMarquee">
            <summary>
            Gets or sets whether the progress bar should operate in marquee mode.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedProgressBar.MarqueeAnimationSpeed">
            <summary>
            Gets or sets the interval in milliseconds between two frames of the marquee animation.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedProgressBar.Value">
            <summary>
            Gets or sets the current position of the progress bar.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedProgressBar.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedProgressBar.PausedStateColor">
            <summary>
            Gets or sets the fore color of the paused <see cref="P:KGySoft.WinForms.Controls.AdvancedProgressBar.State"/>.
            Applicable only when <see cref="P:KGySoft.WinForms.Controls.AdvancedProgressBar.Style"/> is not <see cref="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.System"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedProgressBar.ErrorStateColor">
            <summary>
            Gets or sets the fore color of the error <see cref="P:KGySoft.WinForms.Controls.AdvancedProgressBar.State"/>.
            Applicable only when <see cref="P:KGySoft.WinForms.Controls.AdvancedProgressBar.Style"/> is not <see cref="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.System"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedProgressBar.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.AdvancedProgressBar"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedProgressBar.ResetSystemStyle">
            <summary>
            Resetting the underlying system style. Executed even in custom modes to reset
            internal params and timers.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedRadioButton">
            <summary>
            Represents a radio button with full Windows Vista features support. Fully compatible with for Windows XP, too.
            </summary>
            <remarks>
            The <see cref="T:KGySoft.WinForms.Controls.AdvancedRadioButton"/> class offers the following features in addition to <see cref="T:System.Windows.Forms.RadioButton"/>:
            <list type="bullet">
            <item><description><see cref="P:System.Windows.Forms.ButtonBase.AutoSize"/> property works as expected when radio button is docked</description></item>
            <item><description>Different rendering qualities (see <see cref="!:RenderingQuality"/>) property.</description></item>
            <item><description>Adjustable colors in disabled state (see <see cref="P:KGySoft.WinForms.Controls.AdvancedRadioButton.DisabledBackColor"/> and <see cref="P:KGySoft.WinForms.Controls.AdvancedRadioButton.DisabledForeColor"/> properties).</description></item>
            <item><description>Fading animations (only with enabled theming, on Vista and above, see <see cref="P:KGySoft.WinForms.Controls.AdvancedRadioButton.FadingAnimationsEnabled"/> and <see cref="P:KGySoft.WinForms.Controls.AdvancedRadioButton.FadingAnimationOptions"/> properties).</description></item>
            </list>
            </remarks>
        </member>
        <member name="E:KGySoft.WinForms.Controls.AdvancedRadioButton.PaintState">
            <summary>
            Occurs when the control is painted in a specific state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedRadioButton.DisabledForeColor">
            <summary>
            Gets or sets disabled fore color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedRadioButton.DisabledBackColor">
            <summary>
            Gets or sets disabled back color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedRadioButton.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <returns>
            A <see cref="T:System.Drawing.Color"/> value representing the background color.
            </returns>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedRadioButton.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use compatible text rendering engine (GDI+) or not (GDI).
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedRadioButton.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the button control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedRadioButton.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.AdvancedRadioButton"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedRadioButton.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"/> representing the width and height of a rectangle.
            </returns>
            <param name="proposedSize">The custom-sized area for a control.</param>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedRadioButton.FadingAnimationsEnabled">
            <summary>
            Gets or sets whether fading animations are enabled for the control.
            Animations work in Windows Vista and above, with non-classic themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedRadioButton.FadingAnimationOptions">
            <summary>
            Gets or sets fading options of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedRadioButton.FadingAnimationDefaultSpeed">
            <summary>
            Gets or sets default fading animation speed for non-standard animations in milliseconds. Zero value means immediate change.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedTextBox">
            <summary>
            Advanced version of <see cref="T:System.Windows.Forms.TextBox"/> control that supports customized coloring even in disabled state
            and has a <see cref="E:KGySoft.WinForms.Controls.AdvancedTextBox.TextChangedOnLeave"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedTextBox.#ctor">
            <summary>
             Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.AdvancedTextBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedTextBox.BackColor">
            <summary>
            Gets or sets the background color of the control in current state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedTextBox.ForeColor">
            <summary>
            Gets or sets the foreground color of the control in current state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedTextBox.EnabledForeColor">
            <summary>
            ForeColor when control is Enabled.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedTextBox.EnabledBackColor">
            <summary>
            BackColor when control is Enabled and not ReadOnly.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedTextBox.DisabledBackColor">
            <summary>
            BackColor when control is not Enabled or is ReadOnly.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AdvancedTextBox.DisabledForeColor">
            <summary>
            ForeColor when control is not Enabled.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.AdvancedTextBox.TextChangedOnLeave">
            <summary>
            Occurs on leaving the control when content is different from the original one when the control was focused.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedTextBox.OnTextChangedOnLeave(System.EventArgs)">
            <summary>
            Triggers TextChangedOnLeave event
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.AdvancedTextBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Prevents consuming Enter by the parent form/control if this.<see cref="P:System.Windows.Forms.TextBox.Multiline"/> is enabled.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.CommandLinkButton">
            <summary>
            Represents a command link button. Works also in compatibility mode in a pre-Vista Windows.
            To force system rendering set <see cref="P:KGySoft.WinForms.Controls.CommandLinkButton.FlatStyle"/> to <see cref="F:System.Windows.Forms.FlatStyle.System"/> (only in case of Windows Vista and above).
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.CommandLinkButton.PaintState">
            <summary>
            Occurs when the control is painted in a specific state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.IsElevated">
            <summary>
            Gets or sets whether an elevated shield icon should be displayed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.UseDefaultGlyph">
            <summary>
            Gets or sets whether the default arrow glyph should be displayed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.AutoEllipsis">
            <summary>
            Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.AutoSize">
            <summary>
            Gets or sets whether the command link button automatically resizes itself to its content.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.AutoSizeMode">
            <summary>
            Gets or sets the mode by which the <see cref="T:KGySoft.WinForms.Controls.CommandLinkButton"/> automatically resizes itself.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.Text">
            <summary>
            Gets or sets text of the command link button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.TextAlign">
            <summary>
            Gets or sets the alignment of the text on the command link button control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.ImageAlign">
            <summary>
            Gets or sets the alignment of the image on the command link button control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.Description">
            <summary>
            Gets or sets description text for the command link button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.DescriptionFont">
            <summary>
            Gets or sets the font of the description displayed by the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.ForeColor">
            <summary>
            Gets or sets the text color of the command link button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.DescriptionColor">
            <summary>
            Gets or sets the description color of the command link button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.HighlightTextColor">
            <summary>
            Gets or sets the highlighted text color of the command link button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.HighlightDescriptionColor">
            <summary>
            Gets or sets the highlighted description color of the command link button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.PressedTextColor">
            <summary>
            Gets or sets the pressed text color of the command link button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.PressedDescriptionColor">
            <summary>
            Gets or sets the pressed description color of the command link button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.DisabledForeColor">
            <summary>
            Gets or sets disabled fore color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.DisabledBackColor">
            <summary>
            Gets or sets disabled back color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use compatible text rendering engine (GDI+) or not (GDI).
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.FlatStyle">
            <summary>
            Gets or sets the flat style state of the button control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.Image">
            <summary>
            Gets or sets the image that is displayed on the button control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.CommandLinkButton.#ctor">
            <summary>
            Creates a new <see cref="T:KGySoft.WinForms.Controls.CommandLinkButton"/> instance.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.CommandLinkButton.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.CommandLinkButton.CheckImage">
            <summary>
            Checks image consistency. Returns true if image update has been performed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.FadingAnimationsEnabled">
            <summary>
            Gets or sets whether fading animations are enabled for the control.
            Animations work in Windows Vista and above, with non-classic themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.FadingAnimationOptions">
            <summary>
            Gets or sets fading options of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CommandLinkButton.FadingAnimationDefaultSpeed">
            <summary>
            Gets or sets default fading animation speed for non-standard animations in milliseconds. Zero value means immediate change.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ContentPanel">
            <summary>
            A panel that has no serializable properties and cannot be altered externally.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ContentPanel.#ctor(System.Windows.Forms.Panel)">
            <summary>
            Creates a new <see cref="T:KGySoft.WinForms.Controls.ContentPanel"/> instance that will replace the original
            <see cref="T:System.Windows.Forms.Panel"/> given in <paramref name="panelToClone"/> parameter. An original
            panel is required because that can be placed in designer while content panel does
            not saves its properties.
            </summary>
            <param name="panelToClone"></param>
        </member>
        <member name="T:KGySoft.WinForms.Controls.DecimalFormat">
            <summary>
            Possible formats of <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/> control.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalFormat.Fixed">
            <summary>
            Represents fixed size formatting.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalFormat.Number">
            <summary>
            Represents general number formatting.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.DecimalRange">
            <summary>
            Represents possible ranges of <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/> control.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalRange.Any">
            <summary>
            Any value is accepted.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalRange.Positive">
            <summary>
            Positive values are accepted, excluding zero value.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalRange.Negative">
            <summary>
            Negative values are accepted, excluding zero value.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalRange.PositiveNull">
            <summary>
            Positive values are accepted, including zero value.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalRange.NegativeNull">
            <summary>
            Negative values are accepted, including zero value.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalRange.MinMax">
            <summary>
            Accepted values are controlled by <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.RangeMinValue"/> and <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.RangeMaxValue"/> properties.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.DecimalValueOnBlank">
            <summary>
            Controls <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalValueOnBlank.Zero">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should return zero in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalValueOnBlank.Value">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should return the internally stored value in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalValueOnBlank.LowerLimitMinusOne">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should return lower limit minus one or <see cref="F:System.Decimal.MinValue"/> in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalValueOnBlank.UpperLimitPlusOne">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should return upper limit plus one or <see cref="F:System.Decimal.MaxValue"/> in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalValueOnBlank.MinInt">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should return <see cref="F:System.Int32.MinValue"/> in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalValueOnBlank.MaxInt">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should return <see cref="F:System.Int32.MaxValue"/> in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalValueOnBlank.MinDecimal">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should return <see cref="F:System.Decimal.MinValue"/> in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.DecimalValueOnBlank.MaxDecimal">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should return <see cref="F:System.Decimal.MaxValue"/> in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.DecimalTextBox">
            <summary>
            A text box to edit decimal values.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank">
            <summary>
            Gets or sets whether the <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/> is in blank state.
            Can be set on ly if <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.BlankEnabled"/> is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.BlankText">
            <summary>
            Gets or sets the caption in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.BlankEnabled">
            <summary>
            Gets or sets whether <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state can be enabled.
            When <see langword="true"/>, then the <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/> will be automatically blank if <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> is out of range.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.ValueOnBlank">
            <summary>
            Gets or sets what <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should be returned in <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.Format">
            <summary>
            Gets or sets the format of the displayed <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Text"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.DecimalDigits">
            <summary>
            Gets or sets the used fraction digits. When negative, then <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> is rounded to the number of specified digits.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.Range">
            <summary>
            Gets or sets the the valid range of <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/>.
            If <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> violates newly set range, then <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> will be set or <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> will be corrigied if <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.BlankEnabled"/> is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.RangeMinValue">
            <summary>
            Gets or sets accepted minimum <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/>.
            If <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> violates newly set minimum value, then <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> will be set or <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> will be corrigied if <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.BlankEnabled"/> is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.RangeMaxValue">
            <summary>
            Gets or sets accepted maximum <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/>.
            If <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> violates newly set maximum value, then <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> will be set or <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> will be corrigied if <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.BlankEnabled"/> is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.Value">
            <summary>
            Gets or sets the value of the <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.Text">
            <summary>
            Gets or sets text of the <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/>. Whenever possible use <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> property instead.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.TextAlign">
            <summary>
            Gets or sets text align.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.ChangeValueOnTextChange">
            <summary>
            Gets or sets whether <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> should be changed for every keystroke when text is edited.
            By default, Value changes only when the control is left.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.DecimalTextBox.BlankValue">
            <summary>
            Gets value in blank state.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.DecimalTextBox.ValueChanged">
            <summary>
            Occurs when <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Value"/> has been changed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.DecimalTextBox.BlankChanged">
            <summary>
            Occurs when <see cref="P:KGySoft.WinForms.Controls.DecimalTextBox.Blank"/> has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.OnValueChanged(System.EventArgs)">
            <summary>
            Invokes <see cref="E:KGySoft.WinForms.Controls.DecimalTextBox.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.OnBlankChanged(System.EventArgs)">
            <summary>
            Invokes <see cref="E:KGySoft.WinForms.Controls.DecimalTextBox.BlankChanged"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/> control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.SetValue(System.Decimal,System.Boolean)">
            <summary>
            Set value and refreshes text.
            </summary>
            <param name="value">Value to set</param>
            <param name="alert">When true exception will be thrown if BlankEnabled is false and value violates range</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.IsValid(System.String,System.Boolean)">
            <summary>
            Is typed string valid.
            If called from anywhere with strong = false, then call ApplyText or process multipliers in text.
            </summary>
            <param name="strong">When false, then a single minus sign can be accepted or can contain multipliers at the end.</param>
            <returns>Valid state</returns>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.CheckRange(System.Decimal,System.Boolean)">
            <summary>
            Checks range. On violation sets Blank or when it is not enabled fixes Value and if alert is true throws exception.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.BlankOff">
            <summary>
            Setting off Blank without changing Value. Can be called only during typing.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.ApplyText(System.String,System.Boolean)">
            <summary>
            Inserting text as number into the text field.
            </summary>
            <param name="text">Text to insert</param>
            <param name="insert">When true replaces only selected text; otherwise, replaces thr whole text</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.DecimalTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Suppressing keys in Blank mode. Further checks are in KeyPress where key can be chacked as char.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.Design.ucCaptionedContainerDesigner">
            <summary>
            Designer of <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/> that makes possible to use <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/>
            as a container control in design time.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.EnumCheckedListBox">
            <summary>
            A CheckListBox that gains its values from a Flags enum (<see cref="P:KGySoft.WinForms.Controls.EnumCheckedListBox.EnumType"/>).
            The state of the checkboxes can be get or set via <see cref="P:KGySoft.WinForms.Controls.EnumCheckedListBox.Value"/> property.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.EnumCheckedListBox.CheckedChanged">
            <summary>
            Occurs when the state of a check box has been changed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.EnumCheckedListBox.Translate">
            <summary>
            Gets or sets whether the items should be translated.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.EnumCheckedListBox.EnumType">
            <summary>
            Gets or sets the associated Flags enumerator.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.EnumCheckedListBox.Value">
            <summary>
            Gets or sets the value of the <see cref="P:KGySoft.WinForms.Controls.EnumCheckedListBox.EnumType"/> based on the scheck states.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.EnumCheckedListBox.AllInvertNoneControl">
            <summary>
            Gets or sets the associated <see cref="T:KGySoft.WinForms.Controls.ucAllInvertNone"/> control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.EnumCheckedListBox.SelectAll">
            <summary>
            Selects all item.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.EnumCheckedListBox.SelectNone">
            <summary>
            Deselects all item.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.EnumCheckedListBox.SelectInvert">
            <summary>
            Inverts all item.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.EnumCheckedListBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.EnumCheckedListBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.EnumCheckedListBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ControlAppearanceState">
            <summary>
            Represents appearance status information of a control that supports fading animations.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.Enabled">
            <summary>
            Gets whether the control should be painted in enabled state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.Pressed">
            <summary>
            Gets whether the control should be painted in pressed state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.Hovered">
            <summary>
            Gets whether the control should be painted in hovered state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.IsDefault">
            <summary>
            Gets whether the control should be painted as a default button.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.CheckState">
            <summary>
            When applicable, gets the check state to be painted for the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.Text">
            <summary>
            Gets the text that should be painted for the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.Visible">
            <summary>
            Gets whether the control should be painted in a visible state.
            When the control is invisible, its background (parent area) should be painted.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.BackColor">
            <summary>
            Gets the back color that should be used when the control is painted.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.ForeColor">
            <summary>
            Gets the fore color that should be used when the control is painted.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ControlAppearanceState.CustomState">
            <summary>
            Gets or sets a custom state that may help to indicate any non-standard change
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.FadingPainter`1">
            <summary>
            Helper class for fading animations. Host control must implement <see cref="T:KGySoft.WinForms.ISupportsFading`1"/> interface.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.FadingPainter`1.State">
            <summary>
            Gets or sets the stored last state explicitly. Setting this property does not
            invalidate the host control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.FadingPainter`1.Control">
            <summary>
            Gets the host control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.FadingPainter`1.Enabled">
            <summary>
            Gets whether the fading painter is enabled.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainter`1.#ctor(KGySoft.WinForms.ISupportsFading{`0},`0)">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.FadingPainter`1"/>.
            </summary>
            <param name="host">The host control that implements <see cref="T:KGySoft.WinForms.ISupportsFading`1"/>.</param>
            <param name="initialState">Initial state of the host control.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainter`1.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Invokes painting using fading animation if state has been changed and fading is supported and enabled.
            </summary>
            <param name="e">Paint event args from the host control <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)"/> method or <see cref="E:System.Windows.Forms.Control.Paint"/> event handler.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainter`1.OnThemeChanged">
            <summary>
            Executed when Windows theme has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainter`1.GetSpeed(`0,`0)">
            <summary>
            Gets the speed of the fading animation between specified states.
            When not overridden, hosts <see cref="M:KGySoft.WinForms.ISupportsFading`1.GetFadingAnimationSpeed(`0,`0)"/>
            is requested. If that returns negative value, <see cref="P:KGySoft.WinForms.ISupportsFading`1.FadingAnimationDefaultSpeed"/> is used.
            </summary>
            <param name="prevState">Previous state.</param>
            <param name="newState">New state.</param>
            <returns>An integer value representing animation speed in milliseconds.</returns>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainter`1.StateEquals(`0,`0)">
            <summary>
            Gets whether the previous and new states are equal.
            </summary>
            <param name="prevState">Previous state.</param>
            <param name="newState">New state.</param>
            <returns><see langword="true"/>, if states are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainter`1.StopAnimations">
            <summary>
            Stops all animations for the host control.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.FadingPainterInternal">
            <summary>
            A special fading painter implementation which gets duration speeds of standard animations from the OS,
            and supports several fading options, including the support of turning on visibility and any visual changes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.FadingPainterInternal.Enabled">
            <summary>
            Gets whether the fading painter is enabled.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainterInternal.StopAnimations">
            <summary>
            Stops all animations for the host control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainterInternal.OnThemeChanged">
            <summary>
            Executed when Windows theme has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainterInternal.GetSpeed(KGySoft.WinForms.Controls.ControlAppearanceState,KGySoft.WinForms.Controls.ControlAppearanceState)">
            <summary>
            Getting standard effect speeds from the OS.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.FadingPainterInternal.StateEquals(KGySoft.WinForms.Controls.ControlAppearanceState,KGySoft.WinForms.Controls.ControlAppearanceState)">
            <summary>
            Gets whether the previous and new states are equal.
            </summary>
            <param name="prevState">Previous state.</param>
            <param name="newState">New state.</param>
            <returns><see langword="true"/>, if states are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:KGySoft.WinForms.Controls.NCHelper">
            <summary>
            Helper class for NC drawing routines
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.NCHelper.DrawBorderNC(System.IntPtr,System.Drawing.Size,KGySoft.WinForms.Controls.AdvancedBorderStyle)">
            <summary>
            Draws a border in nonclient area.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.NCHelper.InvalidateNC(System.IntPtr)">
            <summary>
            Invalidates non-client area
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ButtonBaseAdapter.LayoutOptions.StringFormat">
            <devdoc>
                We don't cache the StringFormat itself because we don't have a deterministic way of disposing it, instead
                we cache the flags that make it up and create it on demand so it can be disposed by calling code.
            </devdoc>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ButtonBaseAdapter.LayoutOptions.TextFormatFlags">
            <devdoc>
            </devdoc>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ButtonBaseAdapter.Draw3DLiteBorder(System.Drawing.Graphics,System.Drawing.Rectangle,KGySoft.WinForms.Controls.ButtonBaseAdapter.ColorData,System.Boolean)">
            <summary>
            Draws a border for the in the 3D style of the popup button.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ButtonBaseAdapter.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,KGySoft.WinForms.Controls.ControlAppearanceState)">
            <summary>
            Draws the focus rectangle if the control has focus.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ButtonBaseAdapter.DrawImage(System.Drawing.Graphics,KGySoft.WinForms.Controls.ButtonBaseAdapter.LayoutData,KGySoft.WinForms.Controls.ControlAppearanceState)">
            <summary>
            Draws the button's image.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ButtonBaseAdapter.DrawText(System.Drawing.Graphics,KGySoft.WinForms.Controls.ButtonBaseAdapter.LayoutData,KGySoft.WinForms.Controls.ButtonBaseAdapter.ColorData,KGySoft.WinForms.Controls.ControlAppearanceState)">
            <summary>
            Draws the button's text.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ButtonFlatAdapter.DrawFlatBorderWithSize(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32)">
            <summary>
            Draws the flat border with specified bordersize.
            This function gets called only for Flatstyle == Flatstyle.Flat.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedBorderStyle">
            <summary>
            Possible border styles of an <see cref="T:KGySoft.WinForms.Controls.AdvancedPanel"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.FixedSingle">
            <summary>
            Border is the same as a border of a <see cref="T:System.Windows.Forms.Panel"/> when its border style is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.Flat">
            <summary>
            Flat border, no 3D effect.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.Raised">
            <summary>
            Border is slightly raised.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.RaisedHigh">
            <summary>
            Border is considerably raised.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.Sunken">
            <summary>
            Border is slightly sunken.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.SunkenLow">
            <summary>
            Border is considerably sunken. Has the same appearance as a border of a <see cref="T:System.Windows.Forms.Panel"/> when its border style is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.RaisedFrame">
            <summary>
            Border has a raised (bump) frame.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedBorderStyle.SunkenFrame">
            <summary>
            Border has a sunken (etched) frame.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AdvancedProgressBarStyle">
            <summary>
            Represents the possible styles of an <see cref="T:KGySoft.WinForms.Controls.AdvancedProgressBar"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.System">
            <summary>
            Represents the system-rendered mode.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.ThemedShiny">
            <summary>
            Represents the custom rendered "shiny" mode. When visual styles are not enabled,
            defaults to <see cref="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.Classic"/> style.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.ThemedFlat">
            <summary>
            Represents the custom rendered "flat" mode. When visual styles are not enabled,
            defaults to <see cref="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.Classic"/> style.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.AdvancedProgressBarStyle.Classic">
            <summary>
            Represents the custom rendered "classic" mode.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.FadingOptions">
            <summary>
            Represents possible fading options
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.FadingOptions.None">
            <summary>
            Represents disabled fading options
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.FadingOptions.StandardEffects">
            <summary>
            Indicates that standard fading animations (enabling, hovering, clicking, etc.) are enabled for the control.
            Speed of these effects are retrieved from the system.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.FadingOptions.TextChange">
            <summary>
            Indicates that text change should be performed by a fading effect.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.FadingOptions.Appearing">
            <summary>
            Indicates that a fading effect should be performed when Visibility of the control is turned on.
            <note>When the cotrols turns invisible, it is performed without fading to avoid security problems.</note>
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.FadingOptions.ColorChange">
            <summary>
            Indicates that color changes should be performed by a fading effect.
            Does not affect colors of the flat appearance. If fading is required also for such colors, use the <see cref="F:KGySoft.WinForms.Controls.FadingOptions.AnyChange"/> flag instead.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.FadingOptions.AnyChange">
            <summary>
            Indicates that any kind of visual change should be performed by a fading effect, except size changes.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.PaintStateEventArgs">
            <summary>
            Represents arguments of a PaintState event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.PaintStateEventArgs.State">
            <summary>
            Gets the appearance state of the control for the painting.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ISupportsDisabledColor">
            <summary>
            Represents disabled color capability.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ISupportsDisabledColor.DisabledForeColor">
            <summary>
            Gets or sets disabled fore color.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ISupportsDisabledColor.DisabledBackColor">
            <summary>
            Gets or sets disabled back color.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucAllInvertNone.ButtonPressed">
            <summary>
            Occurs when a button is pressed.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucAllInvertNone.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucAllInvertNone.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucAllInvertNone.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucBase">
            <summary>
            Base class of custom user controls.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.CommandBindings">
            <summary>
            Gets the command bindings of this control. The <see cref="O:KGySoft.ComponentModel.CommandBindingsCollection.Add">Add</see> methods also add
            the <see cref="T:KGySoft.ComponentModel.PropertyCommandStateUpdater"/> to the created bindings.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.ReadOnly">
            <summary>
            Gets or sets the ReadOnly state of the inner content.
            <remarks>Must override! Setter must call base setter.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.ToolTip">
            <summary>
            Tooltip text of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.ControlValue">
            <summary>
            Gets or sets the associated value of the control.
            This can be a text or number or anything else in derived controls.
            <remarks>Must override!</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.SavedValue">
            <summary>
            Returns an earlier saved value of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.IsModified">
            <summary>
            Tells whether the content of the control is modified since the last <see cref="M:KGySoft.WinForms.Controls.ucBase.SaveValue"/> call.
            <remarks>Do not use this property for checking the state of business objects!</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.MainControl">
            <summary>
            Returns the main inner control of the user control.
            <remarks>Must override!</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.AutoSaveValue">
            <summary>
            Gets or sets whether the control should automatically call <see cref="M:KGySoft.WinForms.Controls.ucBase.SaveValue"/> to
            display its modified state in <see cref="P:KGySoft.WinForms.Controls.ucBase.ColorModified"/> color when data binding context has
            been changed. This automatism works only when control is used with data binding and bound
            property affects <see cref="P:KGySoft.WinForms.Controls.ucBase.ControlValue"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.ColorEnabled">
            <summary>
            BackColor of the inner <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/> when control is Enabled and not ReadOnly.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.ColorDisabled">
            <summary>
            BackColor of the inner <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/> when control is not Enabled or is ReadOnly.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.ColorModified">
            <summary>
            BackColor of the modified inner <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/> when control is Enabled and not ReadOnly.
            <remarks>To use this feature call <see cref="M:KGySoft.WinForms.Controls.ucBase.SaveValue"/> after setting an initial value in the control.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.ColorControlTextEnabled">
            <summary>
            ForeColor of the inner <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/> when control is Enabled.
            </summary>
            <remarks>In descendants, if the <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/> is an input control
            consider modifying the default value to WindowText.</remarks>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.ColorControlTextDisabled">
            <summary>
            ForeColor of the inner <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/> when control is not Enabled.
            <remarks>
            This is not supported in WindowsForms by default: The ForeColor of a disabled control is
            always gray. The controls that support coloring in disabled state must implement the
            <see cref="T:KGySoft.WinForms.Controls.ISupportsDisabledColor"/> interface and then setting this property will have effect.
            </remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucBase.TranslationEnabled">
            <summary>
            Gets or sets whetther translation of this control is enabled or not.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.#ctor">
            <summary>
            <see cref="T:KGySoft.WinForms.Controls.ucBase"/> constructor. Public only for designer,
            not intended to instantiate an underived ucBase instance.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.Clear">
            <summary>
            Clearing the content of <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/>.
            <remarks>Must override! When override, call base.Clear()!</remarks>
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.SaveValue">
            <summary>
            Stores the value of the control. This makes possible to sign when the value has been modified.
            See <see cref="P:KGySoft.WinForms.Controls.ucBase.IsModified"/> and <see cref="P:KGySoft.WinForms.Controls.ucBase.ColorModified"/> properties.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.RestoreSavedValue">
            <summary>
            Restores the earlier saved value.
            <remarks>Do not use this feature if the control is binded to a business object that can do this, too!</remarks>
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.ClearSavedValue">
            <summary>
            Clears the saved value, so the control will not change its color when modified (like before calling <see cref="M:KGySoft.WinForms.Controls.ucBase.SaveValue"/>).
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.ResetColor">
            <summary>
            Resets the color of the control.
            <remarks>Call this method in overridden ReadOnly change, Enable change of <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/>
            and when the content of <see cref="P:KGySoft.WinForms.Controls.ucBase.MainControl"/> has been changed.
            </remarks>
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the ToolTip text for an inner control.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KGySoft.WinForms.Controls.ucBase.TranslateContent(System.Boolean@)" -->
        <member name="F:KGySoft.WinForms.Controls.ucBase.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucBase.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucCaptionedBase">
            <summary>
            Base class of user controls that may have captions (on a groupbox or label)
            and content can be disabled by a checkbox (if <see cref="T:KGySoft.WinForms.Controls.ucCaptionedBase.Orientation"/> is groupboxed).
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.GroupBox">
            <summary>
            The inner GroupBox.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.Label">
            <summary>
            The inner Label.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.Caption">
            <summary>
            Gets or sets the caption of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.ShowCheckBox">
            <summary>
            Gets or sets whether the outer GroupBox has a checkbox. (Only when <see cref="T:KGySoft.WinForms.Controls.ucCaptionedBase.Orientation"/> is GroupBoxed)
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.Checked">
            <summary>
            Gets or sets the checked state of the checkbox in the outer groupbox. (Only when the <see cref="T:KGySoft.WinForms.Controls.ucCaptionedBase.Orientation"/> is groupboxed)
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.ReadOnly">
            <summary>
            Gets or sets the ReadOnly state of the inner content.
            <remarks>Must override!</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.ForeColor">
            <summary>
            Gets or sets the text color of the caption and the default text color of inner panel content.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.BackColor">
            <summary>
            Gets or sets the background color of the caption and the container control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.CaptionOrientation">
            <summary>
            Gets or sets the orientation of the caption.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.CaptionAlignment">
            <summary>
            Gets or sets the alignment of the caption.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedBase.CaptionSize">
            <summary>
            Gets or sets the size of the caption.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCaptionedBase.CheckedChanged">
            <summary>
            Occurs when the value of the ckeckbox (that can be enabled by <see cref="P:KGySoft.WinForms.Controls.ucCaptionedBase.ShowCheckBox"/> when <see cref="T:KGySoft.WinForms.Controls.ucCaptionedBase.Orientation"/> is GroupBoxed) has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCaptionedBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCaptionedBase.TranslateContent(System.Boolean@)">
            <summary>
            Translating content in a way which prevents storing Caption text with leading spaces if check box is visible
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucCaptionedBase.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCaptionedBase.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucCaptionedContainer">
            <summary>
            User control with caption (on a groupbox or label) that can be used in design time to drop another controls into it.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.MainControl">
            <summary>
            Returns the <see cref="P:KGySoft.WinForms.Controls.ucCaptionedContainer.PanelContent"/> as main control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.ControlValue">
            <summary>
            Gets or sets the object value associated with the control.
            <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/> has no primary inner control so value of this
            property is not set automatically but can be used for data binding if you need.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.ReadOnly">
            <summary>
            Gets or sets the ReadOnly state of the inner content.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.ColorEnabled">
            <summary>
            Gets BackColor regardless of enabled state.
            Setter does not work in <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.ColorDisabled">
            <summary>
            Gets BackColor regardless of enabled state.
            Setter does not work in <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.ColorModified">
            <summary>
            This property has no meaning for this instance.
            Setter does not work in <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.ColorControlTextDisabled">
            <summary>
            Gets constantly the gray text color.
            Setter does not work in <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.ColorControlTextEnabled">
            <summary>
            Gets ForeColor regardless of enabled state.
            Setter does not work in <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCaptionedContainer.PanelContent">
            <summary>
            Gets the content panel.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCaptionedContainer.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucCaptionedContainer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCaptionedContainer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCaptionedContainer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCheckBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCheckBox.CaptionCheckbox">
            <summary>
            Gets or sets the caption of the checkbox.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCheckBox.CheckAlign">
            <summary>
            Gets or sets the alignment of the checkbox.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCheckBox.CheckedContent">
            <summary>
            Gets or sets the Checked state of the inner checkbox.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCheckBox.ReadOnly">
            <summary>
            Gets or sets the ReadOnly state of the inner content.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCheckBox.CheckedContentChanged">
            <summary>
            Occurs when the state of the inner check box changes.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucCheckBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCheckBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucCombo">
            <summary>
            Unified user control version of <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.ReadOnly">
            <summary>
            Gets or sets read-only state of the combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.ControlValue">
            <summary>
            Gets or sets the associated value of the control.
            </summary>
            <value>If the combo box is data-bound, then this is the <see cref="P:KGySoft.WinForms.Controls.ucCombo.SelectedValue"/>, otherwise, the <see cref="P:KGySoft.WinForms.Controls.ucCombo.Text"/> property.</value>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.Combo">
            <summary>
            Gets the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedTextBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.DropDownStyle">
            <summary>
            Gets or sets a value specifying the style of the combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.SystemDrawDropDownListMode">
            <summary>
            Gets or sets whether the enabled combo box should be drawn by the system in <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList"/> mode.
            If this property is <see langword="false"/>, then drop-down list appearance will be the same as in case of <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown"/> mode
            even with Windows Vista/Windows 7 themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.Items">
            <summary>
            Gets an object representing the collection of the items contained in the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.SelectedValue">
            <summary>
            Gets or sets the value of the member property specified by the <see cref="P:KGySoft.WinForms.Controls.ucCombo.ValueMember"/> property.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.IsEmpty">
            <summary>
            Gets whether the there is no selected item in the combo box (<see cref="P:KGySoft.WinForms.Controls.ucCombo.SelectedValue"/> or is <see langword="null"/>, <see cref="T:System.DBNull"/> or equals with <see cref="F:KGySoft.WinForms.ControlExtensions.NotSelectedValue"/>)
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCombo.SelectedIndexChanged">
            <summary>
            Occurs when the <see cref="P:KGySoft.WinForms.Controls.ucCombo.SelectedIndex"/> property has changed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCombo.SelectedValueChanged">
            <summary>
            Occurs when the <see cref="P:KGySoft.WinForms.Controls.ucCombo.SelectedValue"/> property changes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.SelectedItem">
            <summary>
            Gets or sets currently selected item in the combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.SelectedText">
            <summary>
            Gets or sets the text that is selected in the editable portion of a combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.SelectedIndex">
            <summary>
            Gets or sets the index specifying the currently selected item.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.DataSource">
            <summary>
            Gets or sets the data source for the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.DisplayMember">
            <summary>
            Gets or sets the property to display for the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.ValueMember">
            <summary>
            Gets or sets the property to use as the actual value for the items in the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.AutoCompleteMode">
            <summary>
            Gets or sets an option that controls how automatic completion works for the inner combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.AutoCompleteSource">
            <summary>
             Gets or sets a value specifying the source of complete strings used for automatic completion.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCombo.AutoCompleteCustomSource">
            <summary>
             Gets or sets a custom <see cref="T:System.Windows.Forms.AutoCompleteStringCollection"/> to <see cref="P:KGySoft.WinForms.Controls.ucCombo.AutoCompleteSource"/> property is <see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom(System.Data.DataTable,System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, the displayed column must contain string values.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom(System.Data.DataTable,System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom(System.Data.DataTable,System.String,System.String)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and translated.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom(System.Type,System.Type,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="translateNames">Indicates whether the displayed enum field names should be translated.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom(System.Type,System.Type,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom(System.Type,System.Type)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom(System.Type)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, <paramref name="displayMember"/> must be writable and should refer to a <see cref="T:System.String"/> property.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>. Items will not be sorted and translated.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucCombo.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCombo.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucCustomSelector">
            <summary>
            Selector control that can be used for general purposes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ControlValue">
            <summary>
            Gets or sets the relevant property of the control (<see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> or <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/>,
            depends on <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.RelevantControlValue"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.RelevantControlValue">
            <summary>
            Gets or sets the relevant control value for supporting <see cref="T:KGySoft.WinForms.Controls.ucBase"/> features of
            saving/restoring value and marking control as modified.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.Value">
            <summary>
            Gets or sets the associated value of the selector control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueNotSelected">
            <summary>
            Gets or sets the value of the NotSelected <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueAllSelected">
            <summary>
            Gets or sets the value of the All <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueNoneSelected">
            <summary>
            Gets or sets the value of the None <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.DropDownStyle">
            <summary>
            Gets or sets a value specifying the style of the combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.SystemDrawDropDownListMode">
            <summary>
            Gets or sets whether the enabled combo box should be drawn by the system in <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList"/> mode.
            If this property is <see langword="false"/>, then drop-down list appearance will be the same as in case of <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown"/> mode
            even with Windows Vista/Windows 7 themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.State">
            <summary>
            Gets or sets the state of the selector control.
            If <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> has meaning in the used scenario, then set Value property instead.
            Setting <see cref="F:KGySoft.WinForms.Controls.SelectorStates.ValueSet"/> sets <see cref="F:KGySoft.WinForms.ControlExtensions.UndefinedValue"/> to <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> property.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.Buttons">
            <summary>
            Visible buttons.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ButtonStyle">
            <summary>
            Style of the buttons.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.Image">
            <summary>
            The image of the selector control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ImageSizeMode">
            <summary>
            Size mode of the image of the selector.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ImageBorderStyle">
            <summary>
            Border style of the image of the selector.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.AutoImage">
            <summary>
            Gets or sets whether the image of the selector control should
            display automatically an image depending on the state of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.TextEditable">
            <summary>
            Gets or sets whether the text field can be edited manually.
            If the selector is not ReadOnly but this property is false,
            then the control value can be edited only via the selector buttons.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.AutoFindText">
            <summary>
            Gets or sets whether <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> should be auto-calculated based on the typed text.
            If the value of this property is <see langword="false"/>, then <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/> will be simply assigned to <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/>
            on leaving the control. If the property is <see langword="true"/>, then <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> is calculated by
            <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.AutoFind"/> event or by <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultAutoFind(System.String)"/> method if AutoFind event is not subscribed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.Text">
            <summary>
            Gets or sets the text of the inner <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.ComboBox"/>. Can be set only in <see cref="F:KGySoft.WinForms.Controls.SelectorStates.ValueSet"/>&#160;<see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>. 
            For data binding using <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> property is preferable.
            </summary>
            <remarks>
            <para>
            Setting Text does not change <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> (though at runtime if <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.AutoFindText"/> is true, then 
            <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.AutoFind"/> may set Value and Text).
            </para>
            <para>
            If <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> has meaning in a scenario (<see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.RelevantControlValue"/> is Value), then <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/> should never be set
            directly from code. Text of a value can be returned by an overridden <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.GetTextByValue(System.Object)"/> method.
            </para>
            <para>
            If you need to set both <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> and <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/> without raising events
            use the <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.Assign(System.Object,System.String)"/> property.
            </para>
            </remarks>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ReadOnly">
            <summary>
            Gets or sets the read-only state for the control. This disables most of the
            buttons, too. To disable manual text editing only, use <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.TextEditable"/> property.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ToolTipClearSelection">
            <summary>
            Gets or sets the tooltip text of the Clear Selection button.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ToolTipSelectAll">
            <summary>
            Gets or sets the tooltip text of the Select All button.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ToolTipSelectNone">
            <summary>
            Gets or sets the tooltip text of the Select None button.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ToolTipBrowse">
            <summary>
            Gets or sets the tooltip text of the Browse button.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ToolTipEditor">
            <summary>
            Gets or sets the tooltip text of the Editor button.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ToolTipNew">
            <summary>
            Gets or sets the tooltip text of the New button.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.TextNotSelected">
            <summary>
            Gets or sets the <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/> of NotSelected <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.TextAllSelected">
            <summary>
            Gets or sets the <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/> of All <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.TextNoneSelected">
            <summary>
            Gets or sets the <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/> of None <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>.
            <remarks>This text will be translated to the target <see cref="!:Language.ActiveLanguage"/>.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ComboBox">
            <summary>
            Gets the inner combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.Items">
            <summary>
            Gets an object representing the collection of the items contained in the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ValueChanged">
            <summary>
            Occurs when <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> is changed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.StateChanged">
            <summary>
            Occurs when <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/> is changed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonClearClick">
            <summary>
            Occurs when Clear button is clicked.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonAllClick">
            <summary>
            Occurs when All button is clicked.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonNoneClick">
            <summary>
            Occurs when None button is clicked.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonBrowseClick">
            <summary>
            Occurs when Browse button is clicked.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonEditorClick">
            <summary>
            Occurs when Editor button is clicked.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonNewClick">
            <summary>
            Occurs when New button is clicked.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.AutoFind">
            <summary>
            Occurs on leaving the control after editing the text manually and when <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.AutoFindText"/> property is <see langword="true"/>.
            Can be used for calculating <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> based on the typed text. If this event is not subscribed, then <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultAutoFind(System.String)"/> will be called,
            which tries to find the element in <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Items"/> or simply makes <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> equal to <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/>.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.CalculateText">
            <summary>
            Occurs when a displayed text of a value needs to be calculated. Does not occur when <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> equals <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueNotSelected"/>,
            <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueAllSelected"/> or <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueNoneSelected"/>.
            If not handled, then calculated text will gain its value either by the defined <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.DataSource"/> or by the string representation of Value.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ImageClick">
            <summary>
            Occurs when the <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Image"/> of the control been clicked.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.ImageDoubleClick">
            <summary>
            Occurs when the <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Image"/> of the control been double clicked.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.TextChanged">
            <summary>
            Occurs when the text of the inner textbox changes.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.TextChangedOnLeave">
            <summary>
            Occurs on leave when content differs from the content at getting focused.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.Assign(System.Object,System.String)">
            <summary>
            Sets the value-text pair without raising events.
            <remarks>
            This can be useful tipically for LoadFromDataBase-like methods.
            </remarks>
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultClearClick">
            <summary>
            Default behaviour for clicking the Clear button.
            Can be overridden and can be called from a handled <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonClearClick"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultAllClick">
            <summary>
            Default behaviour for clicking the All button.
            Can be overridden and can be called from a handled <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonAllClick"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultNoneClick">
            <summary>
            Default behaviour for clicking the None button.
            Can be overridden and can be called from a handled <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonNoneClick"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultBrowseClick">
            <summary>
            Default behaviour for clicking the Browse button.
            Can be overridden and can be called from a handled <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonBrowseClick"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultEditorClick">
            <summary>
            Default behaviour for clicking the Edditor button.
            Can be overridden and can be called from a handled <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonEditorClick"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultNewClick">
            <summary>
            Default behaviour for clicking the New button.
            Can be overridden and can be called from a handled <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonNewClick"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.CreateActionButton(System.Drawing.Bitmap,System.String)">
            <summary>
            Creates an action button.
            </summary>
            <param name="bmp">Image of the cutton.</param>
            <param name="caption">Felirat</param>
            <returns></returns>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.RefreshActionPanel">
            <summary>
            Refreshing controls in action panel.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.CreateActionPanel">
            <summary>
            Creating controls in action panel.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultAutoFind(System.String)">
            <summary>
            Default AutoFind behaviour if <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.AutoFind"/> event is not handled.
            Can be overridden to set <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> and <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/> based on
            the written text or text chunk and can be triggered also from a handled <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.AutoFind"/> by setting <see cref="P:KGySoft.WinForms.Controls.AutoFindEventArgs.DefaultAutoFind"/> property.
            The default implementataion sets <paramref name="text"/> to <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/>
            or tries to find the given text in <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Items"/>.
            </summary>
            <param name="text">Text or text chunk for that can be used for search.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.GetTextByValue(System.Object)">
            <summary>
            Returns the text based on <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/>.
            In <see cref="T:KGySoft.WinForms.Controls.ucCustomSelector"/>&#160;<see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.GetTextByValue(System.Object)"/> returns only texts for special values
            or when <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.DataSource"/> is not <see langword="null"/>&#160;and <paramref name="value"/> can be found in <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueMember"/> of data source.
            Otherwise, returns with the ToString of <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/>.
            Override this method to calculate texts for other values.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.SetValue(System.Object)">
            <summary>
            Sets value while adjusts <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/> and <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnValueChanged(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnStateChanged(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.StateChanged"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnButtonClearClick(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonClearClick"/> event or when it is not handled
            calls the <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultClearClick"/> method.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnButtonAllClick(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonAllClick"/> event or when it is not handled
            calls the <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultAllClick"/> method.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnButtonNoneClick(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonNoneClick"/> event or when it is not handled
            calls the <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultNoneClick"/> method.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnButtonBrowseClick(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonBrowseClick"/> event or when it is not handled
            calls the <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultBrowseClick"/> method.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnButtonEditorClick(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonEditorClick"/> event or when it is not handled
            calls the <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultEditorClick"/> method.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnButtonNewClick(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ButtonNewClick"/> event or when it is not handled
            calls the <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultNewClick"/> method.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnAutoFind(KGySoft.WinForms.Controls.AutoFindEventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.AutoFind"/> event or when it is not handled
            calls the <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultAutoFind(System.String)"/> method.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnCalculateText(KGySoft.WinForms.Controls.CalculateTextEventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.CalculateText"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnImageClick(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ImageClick"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.OnImageDoubleClick(System.EventArgs)">
            <summary>
            Invokes the <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.ImageDoubleClick"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.SetTextByValue">
            <summary>
            Sets the text based on Value.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.SetState(KGySoft.WinForms.Controls.SelectorStates)">
            <summary>
            Sets <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/> adjusting <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> and <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/>.
            </summary>
            <param name="newState">State to set.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.ShouldSerializeText">
            <summary>
            This method indicates to designers whether the property
            value is different from the ambient value, in which case
            the designer should persist the value.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.SelectedValue">
            <summary>
            Gets or sets the value of the member property specified by the <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueMember"/> property.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.IsEmpty">
            <summary>
            Gets whether the there is no selected item in the combo box (<see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.SelectedValue"/> or is <see langword="null"/>, <see cref="T:System.DBNull"/> or equals with <see cref="F:KGySoft.WinForms.ControlExtensions.NotSelectedValue"/>)
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.SelectedIndexChanged">
            <summary>
            Occurs when the <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.SelectedIndex"/> property has changed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucCustomSelector.SelectedValueChanged">
            <summary>
            Occurs when the <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.SelectedValue"/> property changes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.SelectedItem">
            <summary>
            Gets or sets currently selected item in the combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.SelectedText">
            <summary>
            Gets or sets the text that is selected in the editable portion of a combo box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.SelectedIndex">
            <summary>
            Gets or sets the index specifying the currently selected item.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.DataSource">
            <summary>
            Gets or sets the data source for the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.DisplayMember">
            <summary>
            Gets or sets the property to display for the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.ValueMember">
            <summary>
            Gets or sets the property to use as the actual value for the items in the inner <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.AutoCompleteMode">
            <summary>
            Gets or sets an option that controls how automatic completion works for the inner text box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.AutoCompleteSource">
            <summary>
             Gets or sets a value specifying the source of complete strings used for automatic completion.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucCustomSelector.AutoCompleteCustomSource">
            <summary>
             Gets or sets a custom <see cref="T:System.Windows.Forms.AutoCompleteStringCollection"/> to <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.AutoCompleteSource"/> property is <see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom(System.Data.DataTable,System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, the displayed column must contain string values.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom(System.Data.DataTable,System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom(System.Data.DataTable,System.String,System.String)">
            <summary>
            Binds the combo box to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and translated.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the combo box.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the combo box.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom(System.Type,System.Type,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="translateNames">Indicates whether the displayed enum field names should be translated.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom(System.Type,System.Type,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom(System.Type,System.Type)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the combo box. If <see langword="null"/>, then original enum value will used as value member.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom(System.Type)">
            <summary>
            Binds the combo box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, <paramref name="displayMember"/> must be writable and should refer to a <see cref="T:System.String"/> property.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Binds the combo box to a <paramref name="collection"/>. Items will not be sorted and translated.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the combo box.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the combo box.</param>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucCustomSelector.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucCustomSelector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucDate">
            <summary>
            Unified user control version of <see cref="T:KGySoft.WinForms.Controls.AdvancedDateTimePicker"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDate.#ctor">
            <summary>
            Creates a new <see cref="T:KGySoft.WinForms.Controls.ucDate"/> instance.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.Value">
            <summary>
            Gets or sets the date/time value assigned to the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.Checked">
            <summary>
            Gets or sets the inner checkbox of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.ShowCheckBox">
            <summary>
            Gets or sets whether the inner checkbox of the control should be shown.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.Format">
            <summary>
            Gets or sets of the format of the time and date displayed in the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.DateTimePicker">
            <summary>
            Gets the inner date time picker control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.ReadOnly">
            <summary>
            Gets or sets whether the control is read-only.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.ControlValue">
            <summary>
            Gets or sets the associated value of the control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDate.MainControl">
            <summary>
            Returns the main inner control of the user control.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucDate.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDate.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDate.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDateInterval.ValueFrom">
            <summary>
            From Date
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDateInterval.ValueTo">
            <summary>
            To Date
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDateInterval.CheckedFrom">
            <summary>
            From Date Checked
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDateInterval.CheckedTo">
            <summary>
            To Date Checked
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucDateInterval.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDateInterval.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDateInterval.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucDecimal">
            <summary>
            Unified user control version of <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.TextBox">
            <summary>
            Gets the inner <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.ControlValue">
            <summary>
            Gets or sets the associated value of the control.
            This can be a text or number or anything else in derived controls.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.Blank">
            <summary>
            Gets or sets whether the <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/> is in blank state.
            Can be set on ly if <see cref="P:KGySoft.WinForms.Controls.ucDecimal.BlankEnabled"/> is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.BlankText">
            <summary>
            Gets or sets the caption in <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Blank"/> state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.BlankEnabled">
            <summary>
            Gets or sets whether <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Blank"/> state can be enabled.
            When <see langword="true"/>, then the <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/> will be automatically blank if <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> is out of range.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.ValueOnBlank">
            <summary>
            Gets or sets what <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> should be returned in <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Blank"/> state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.Format">
            <summary>
            Gets or sets the format of the displayed <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Text"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.DecimalDigits">
            <summary>
            Gets or sets the used fraction digits. When negative, then <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> is rounded to the number of specified digits.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.Range">
            <summary>
            Gets or sets the the valid range of <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/>.
            If <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> violates newly set range, then <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Blank"/> will be set or <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> will be corrigied if <see cref="P:KGySoft.WinForms.Controls.ucDecimal.BlankEnabled"/> is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.RangeMinValue">
            <summary>
            Gets or sets accepted minimum <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/>.
            If <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> violates newly set minimum value, then <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Blank"/> will be set or <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> will be corrigied if <see cref="P:KGySoft.WinForms.Controls.ucDecimal.BlankEnabled"/> is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.RangeMaxValue">
            <summary>
            Gets or sets accepted maximum <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/>.
            If <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> violates newly set maximum value, then <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Blank"/> will be set or <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> will be corrigied if <see cref="P:KGySoft.WinForms.Controls.ucDecimal.BlankEnabled"/> is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.Value">
            <summary>
            Gets or sets the value of the <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.Text">
            <summary>
            Gets or sets text of the <see cref="T:KGySoft.WinForms.Controls.DecimalTextBox"/>. Whenever possible use <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> property instead.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.TextAlign">
            <summary>
            Gets or sets text align.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimal.ChangeValueOnTextChange">
            <summary>
            Gets or sets whether <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> should be changed for every keystroke when text is edited.
            By default, Value changes only when the control is left.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucDecimal.ValueChanged">
            <summary>
            Occurs when <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Value"/> has been changed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucDecimal.BlankChanged">
            <summary>
            Occurs when <see cref="P:KGySoft.WinForms.Controls.ucDecimal.Blank"/> has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDecimal.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.ucDecimal"/> control.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucDecimal.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDecimal.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDecimal.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucDecimalUpDown">
            <summary>
            Unified user control version of <see cref="P:KGySoft.WinForms.Controls.ucDecimalUpDown.NumericUpDown"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDecimalUpDown.#ctor">
            <summary>
            Creates a new <see cref="T:KGySoft.WinForms.Controls.ucDecimalUpDown"/> instance.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimalUpDown.NumericUpDown">
            <summary>
            Gets the inner control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimalUpDown.Value">
            <summary>
            Gets or sets the value assigned to the up-down control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimalUpDown.Minimum">
            <summary>
            Gets or sets the minimum allowed value for the up-down control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimalUpDown.Maximum">
            <summary>
            Gets or sets the maximum allowed value for the up-down control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimalUpDown.ReadOnly">
            <summary>
            Gets or sets the ReadOnly state of the inner content.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDecimalUpDown.Clear">
            <summary>
            Clears the content of the inner control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimalUpDown.MainControl">
            <summary>
            Returns the main inner control of the user control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucDecimalUpDown.ControlValue">
            <summary>
            Gets or sets the associated value of the control.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucDecimalUpDown.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDecimalUpDown.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucDecimalUpDown.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucPropertyGrid">
            <summary>
            A property grid control that translates description automatically.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucPropertyGrid.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Controls.ucPropertyGrid"/>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucPropertyGrid.ShowDescription">
            <summary>
             Gets or sets whether description is shown.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucPropertyGrid.AllowPropertyRecursion">
            <summary>
             Gets or sets whether properties can be edited recursively.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucPropertyGrid.PropertyGrid">
            <summary>
            Gets the inner property grid
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucPropertyGrid.SelectedObject">
            <summary>
            Gets or sets the object for which the grid displays properties.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucPropertyGrid.SelectedObjects">
            <summary>
            Gets or sets the currently selected objects.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucPropertyGrid.ReadOnly">
            <summary>
            Gets or sets the ReadOnly state of the property editor.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucPropertyGrid.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucPropertyGrid.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucPropertyGrid.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucPropertyGrid.LocalizedObjectDescriptor">
            <summary>
            Implements a <see cref="T:System.ComponentModel.ICustomTypeDescriptor"/> for any objects to obtain translated property names and descriptions.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucPropertyGrid.LocalizedObjectDescriptor.LocalizedPropertyDescriptor">
            <summary>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"/> wrapper that translates <see cref="P:System.ComponentModel.MemberDescriptor.DisplayName"/>,
            <see cref="P:System.ComponentModel.MemberDescriptor.Category"/> and <see cref="P:System.ComponentModel.MemberDescriptor.Description"/> of the original descriptor.
            Provides an alternative <see cref="T:System.ComponentModel.TypeConverter"/> to translate openable internal properties and property values
            of combo box properties.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucPropertyGrid.LocalizedObjectDescriptor.LocalizedTypeConverter">
            <summary>
            A <see cref="T:System.ComponentModel.TypeConverter"/> wrapper that translates inner properties and/or drop-down values (values are translated only if property is localizable)
            <remarks>Since has neither default nor one <see cref="T:System.Type"/> parameter constructor is available (and since it is a private class) it canot be used and instanciated
            as a regular type converter. The instance of this class can be retrieved only via <see cref="P:KGySoft.WinForms.Controls.ucPropertyGrid.LocalizedObjectDescriptor.LocalizedPropertyDescriptor.Converter"/> property.</remarks>
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucPropertyGrid.LocalizedObjectDescriptor.LocalizedTypeConverter.LocalizedTypeDescriptorContextUnwrapper">
            <summary>
            A <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that unwraps original <see cref="P:KGySoft.WinForms.Controls.ucPropertyGrid.LocalizedObjectDescriptor.LocalizedTypeConverter.LocalizedTypeDescriptorContextUnwrapper.Instance"/> and <see cref="P:KGySoft.WinForms.Controls.ucPropertyGrid.LocalizedObjectDescriptor.LocalizedTypeConverter.LocalizedTypeDescriptorContextUnwrapper.PropertyDescriptor"/> properties for the original <see cref="T:System.ComponentModel.TypeConverter"/>.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucText">
            <summary>
            Unified user control version of <see cref="T:KGySoft.WinForms.Controls.AdvancedTextBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.TextBox">
            <summary>
            Gets the inner <see cref="P:KGySoft.WinForms.Controls.ucText.TextBox"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.Text">
            <summary>
            Gets or sets the Text of the inner textbox.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.Multiline">
            <summary>
            Gets or sets a value indicating whether this is a multiline textbox.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.ScrollBars">
            <summary>
            Gets or sets which scroll bars should appear in a multiline TextBox.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.PasswordChar">
            <summary>
            Gets or sets the character used to mask characters of a password in a single-line TextBox control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.UseSystemPasswordChar">
            <summary>
            Gets or sets a value indicating whether the text in the TextBox
            control should appear as the default password character.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.TextAlign">
            <summary>
            Gets or sets how text is aligned in a TextBox control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.WordWrap">
            <summary>
            Indicates whether a multiline text box control automatically wraps words
            to the beginning of the next line when necessary.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.AutoCompleteMode">
            <summary>
            Gets or sets an option that controls how automatic completion works for the inner text box.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.AutoCompleteSource">
            <summary>
             Gets or sets a value specifying the source of complete strings used for automatic completion.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucText.AutoCompleteCustomSource">
            <summary>
             Gets or sets a custom <see cref="T:System.Windows.Forms.AutoCompleteStringCollection"/> to <see cref="P:KGySoft.WinForms.Controls.ucText.AutoCompleteSource"/> property is <see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucText.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucText.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucText.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.ucTextBase">
            <summary>
            Base type of text container user controls.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucTextBase.ReadOnly">
            <summary>
            Gets or sets the Read-Only state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucTextBase.TextBox">
            <summary>
            The inner TextBox. It is possible to "override" this member in descendants and hide with a new member
            that returns a more specific type. This property is not virtual but it is not a problem because
            the value of <see cref="P:KGySoft.WinForms.Controls.ucTextBase.MainControl"/> is returned from here, which is virtual.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucTextBase.Text">
            <summary>
            Gets or sets the Text of the inner textbox.
            <remarks>If needed, can be ReadOnly in descendants.</remarks>
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucTextBase.MaxLength">
            <summary>
            Maximal text length when editing text on the user interface.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.ucTextBase.TextBoxBorderStyle">
            <summary>
            Maximal text length when editing text on the user interface.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucTextBase.TextChanged">
            <summary>
            Occurs when the text of the inner textbox changes.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Controls.ucTextBase.TextChangedOnLeave">
            <summary>
            Occurs on leave when content differs from the content at getting focused.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucTextBase.OnTextChangedOnLeave(System.EventArgs)">
            <summary>
            Fires the <see cref="E:KGySoft.WinForms.Controls.ucTextBase.TextChangedOnLeave"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:KGySoft.WinForms.Controls.ucTextBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucTextBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Controls.ucTextBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.RelevantControlValues">
            <summary>
            <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.RelevantControlValue"/>
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.SelectorButtons">
            <summary>
            Buttons that can be appeared in a <see cref="T:KGySoft.WinForms.Controls.ucCustomSelector"/>
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.SelectorStates">
            <summary>
            <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.State"/>
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.AutoFindEventArgs">
            <summary>
            Arguments for handling an <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.AutoFind"/> event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AutoFindEventArgs.SearchPattern">
            <summary>
            Get the text that was typed into the text field.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AutoFindEventArgs.Value">
            <summary>
            Gets or sets the value that is associated with the found or selected item.
            Set this property to associate a value with the found text. By setting this property
            text of the selector will be calculated by <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.GetTextByValue(System.Object)"/> or by its derived method.
            By default, value of this property is the object that represents the not selected value.
            If in the used scenario <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Value"/> has no special meaning,
            then you may set this property to <see cref="F:KGySoft.WinForms.ControlExtensions.UndefinedValue"/> so <see cref="P:KGySoft.WinForms.Controls.ucCustomSelector.Text"/>
            will not be changed - you have to do it manually.
            To fallback to default logic set <see cref="P:KGySoft.WinForms.Controls.AutoFindEventArgs.DefaultAutoFind"/> to <see langword="true"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.AutoFindEventArgs.DefaultAutoFind">
            <summary>
            Gets or sets whether <see cref="M:KGySoft.WinForms.Controls.ucCustomSelector.DefaultAutoFind(System.String)"/> should be called.
            Set this property to <see langword="true"/>&#160;to fallback to default logic instead of accepting <see cref="P:KGySoft.WinForms.Controls.AutoFindEventArgs.Value"/>.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Controls.CalculateTextEventArgs">
            <summary>
            Arguments for handling an <see cref="E:KGySoft.WinForms.Controls.ucCustomSelector.CalculateText"/> event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CalculateTextEventArgs.Text">
            <summary>
            Get or sets the text that is associated by <see cref="P:KGySoft.WinForms.Controls.CalculateTextEventArgs.Value"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Controls.CalculateTextEventArgs.Value">
            <summary>
            Gets the value that is associated with the found or selected item.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Forms.AdvancedMessageDialog">
            <summary>
            Provides error and other message dialogs.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Forms.AdvancedMessageDialog.ReportSender">
            <summary>
            Report sender event. When assigned, report sender button will be visible when requested.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Forms.AdvancedMessageDialog.BeforeKillApplication">
            <summary>
            Occurs before the application terminated if user chooses closing apllication.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.#ctor">
            <summary>
            Creates a new instance of AdvancedMessageDialog
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.AdvancedMessageDialog.ErrorLogDirectory">
            <summary>
            Gets or sets log directory for saving logs and screenshots.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.AdvancedMessageDialog.Image">
            <summary>
            Gets or sets the dialog Image
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Execute(System.Exception,System.String,System.String)">
            <summary>
            Message dialog for catched exceptions.
            </summary>
            <param name="e">Exception</param>
            <param name="caption">Caption</param>
            <param name="logNamePrefix">Prefix of log file name to save. Path can be set in <see cref="P:KGySoft.WinForms.Forms.AdvancedMessageDialog.ErrorLogDirectory"/>. Can be null for not saving log.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Execute(System.Exception)">
            <summary>
            Message dialog for catched exceptions with a default caption.
            Saves log and screenshot if directory is set in <see cref="!:ErrorHandling.ErrorLogDirectory"/>.
            </summary>
            <param name="e">Exception</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Execute(System.String,System.String,System.String,KGySoft.WinForms.Forms.AdvancedDialogTypes,KGySoft.WinForms.Forms.ButtonTypes,System.Boolean,System.Boolean,System.String)">
            <summary>
            Message dialog for any kind of message.
            </summary>
            <param name="message">Message</param>
            <param name="details">Details (if null or empty, Details button will be hidden)</param>
            <param name="caption">Caption of the window</param>
            <param name="dialogType">Type of the dialog icon</param>
            <param name="buttons">Showed buttons</param>
            <param name="saveLog">True for saving log (see also <see cref="P:KGySoft.WinForms.Forms.AdvancedMessageDialog.ErrorLogDirectory"/>)</param>
            <param name="saveScreenshot">True for saving screenshot (see also <see cref="P:KGySoft.WinForms.Forms.AdvancedMessageDialog.ErrorLogDirectory"/>)</param>
            <param name="logNamePrefix">File name prefix if log saving requested.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Execute(System.String,System.String,System.String,KGySoft.WinForms.Forms.AdvancedDialogTypes,KGySoft.WinForms.Forms.ButtonTypes)">
            <summary>
            Message dialog for any kind of message.
            </summary>
            <param name="message">Message</param>
            <param name="details">Details (if null or empty, Details button will be hidden)</param>
            <param name="caption">Caption of the window</param>
            <param name="dialogType">Type of the dialog icon</param>
            <param name="buttons">Shown buttons</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Execute(System.String,System.String,KGySoft.WinForms.Forms.AdvancedDialogTypes)">
            <summary>
            Message dialog for any kind of message.
            <para>- Details will be shown if <paramref name="dialogType"/> is <see cref="F:KGySoft.WinForms.Forms.AdvancedDialogTypes.Exception"/></para>
            <para>- Log and screenshot will be saved if <paramref name="dialogType"/> is <see cref="F:KGySoft.WinForms.Forms.AdvancedDialogTypes.Exception"/> and <see cref="E:KGySoft.WinForms.Forms.AdvancedMessageDialog.ReportSender"/> is assigned</para>
            <para>- Buttons are controlled by <paramref name="dialogType"/>.</para>
            </summary>
            <param name="message">Message</param>
            <param name="caption">Caption of the window</param>
            <param name="dialogType">Affects dialog icon, Details button and send report button</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Execute(System.String,KGySoft.WinForms.Forms.AdvancedDialogTypes)">
            <summary>
            Message dialog for any kind of message.
            <para>- Details will be shown if <paramref name="dialogType"/> is <see cref="F:KGySoft.WinForms.Forms.AdvancedDialogTypes.Exception"/></para>
            <para>- Log and screenshot will be saved if <paramref name="dialogType"/> is <see cref="F:KGySoft.WinForms.Forms.AdvancedDialogTypes.Exception"/> and <see cref="E:KGySoft.WinForms.Forms.AdvancedMessageDialog.ReportSender"/> is assigned</para>
            <para>- Buttons are controlled by <paramref name="dialogType"/>.</para>
            </summary>
            <param name="message">Message</param>
            <param name="dialogType">Affects dialog icon, dialog caption, Details button and send report button</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Execute(System.String)">
            <summary>
            Shows an information dialog.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Screenshot(System.String)">
            <summary>
            Screenshot saving into file. Does not throw exception, on error returns empty string.
            </summary>
            <param name="filename">Filename without extension.</param>
            <returns>Path or empty string if there was no save.</returns>
        </member>
        <member name="F:KGySoft.WinForms.Forms.AdvancedMessageDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.AdvancedMessageDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Forms.BaseForm">
            <summary>
            A base form that provides tooltips for its controls and makes possible to
            translate form content. Supports showing forms as child forms of an MDI application.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Forms.BaseForm.CalledMdiChildClosed">
            <summary>
            Occurs when an MDI child showed by a <see cref="M:KGySoft.WinForms.Forms.BaseForm.ShowMdiChild(System.Windows.Forms.Form,System.Boolean)"/> call is closed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Forms.BaseForm.PaintMdiClientArea">
            <summary>
            Occurs when MDI area of the form has to be repainted. <see cref="P:System.Windows.Forms.Form.IsMdiContainer"/> must be true to access this event.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Forms.BaseForm.Suspended">
            <summary>
            Occurs when an MDI Child window called by <see cref="M:KGySoft.WinForms.Forms.BaseForm.ShowMdiChild(System.Windows.Forms.Form,System.Boolean)"/> suspends the caller instance.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.Forms.BaseForm.Resumed">
            <summary>
            Occurs when the MDI Child window called by <see cref="M:KGySoft.WinForms.Forms.BaseForm.ShowMdiChild(System.Windows.Forms.Form,System.Boolean)"/> that suspended the caller instance is closed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.BaseForm.TranslateControls">
            <summary>
            Gets or sets whether the form should translate its controls.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.BaseForm.IsSuspended">
            <summary>
            Gets whether the form is suspended by a called MDI child.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.BaseForm.CommandBindings">
            <summary>
            Gets the command bindings of this form. The <see cref="O:KGySoft.ComponentModel.CommandBindingsCollection.Add">Add</see> methods also add
            the <see cref="T:KGySoft.ComponentModel.PropertyCommandStateUpdater"/> to the created bindings.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Forms.BaseForm"/>
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.ShowMdiChild(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            Shows the form as an MDI child of the specified caller form.
            </summary>
            <param name="child">The child to show</param>
            <param name="suspendCaller">When true, suspends the caller form (dialog effect).
            Because shown form is not a dialog form, execution of caller will not be suspended.
            If user needs to react of closing the child form, then either subscribe to caller's
            <see cref="E:KGySoft.WinForms.Forms.BaseForm.CalledMdiChildClosed"/> event or override its <see cref="M:KGySoft.WinForms.Forms.BaseForm.OnCalledMdiChildClosed(KGySoft.WinForms.Forms.BaseForm,System.Windows.Forms.FormClosedEventArgs)"/> method.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.InvalidateMdiClientArea">
            <summary>
            Invalidates the MDI client area. Applicable only if the <see cref="P:System.Windows.Forms.Form.IsMdiContainer"/> is <see langword="true"/>&#160;for this form.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.PerformTranslate(System.Windows.Forms.Control)">
            <summary>
            Translates controls and tooltips of given control.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.OnCalledMdiChildClosed(KGySoft.WinForms.Forms.BaseForm,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            Triggers <see cref="E:KGySoft.WinForms.Forms.BaseForm.CalledMdiChildClosed"/> event.
            </summary>
            <param name="sender">The sender closed form.</param>
            <param name="e">Arguments of closed form.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.OnSuspended(System.EventArgs)">
            <summary>
            Triggers <see cref="E:KGySoft.WinForms.Forms.BaseForm.Suspended"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.OnResumed(System.EventArgs)">
            <summary>
            Triggers <see cref="E:KGySoft.WinForms.Forms.BaseForm.Resumed"/> event.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.Suspend">
            <summary>
            Suspends the current form instance.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.Resume">
            <summary>
            Resumes the current form instance.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.WmNCHitTest(System.Windows.Forms.Message@)">
            <summary>
            Bugfix: When size grip is visible, and form is above and left of the primary monitor, form cannot be dragged anymore due to forced diagonal resizing.
            In .NET 5 I already fixed this in WinForms: https://github.com/dotnet/winforms/pull/2032
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Forms.BaseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.BaseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Forms.DialogBaseForm">
            <summary>
            Base form for OK/Cancel dialogs.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.DialogBaseForm.#ctor">
            <summary>
            Creates a new instance of <see cref="T:KGySoft.WinForms.Forms.DialogBaseForm"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.DialogBaseForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.DialogBaseForm.Execute">
            <summary>
            Executes the dialog window.
            </summary>
            <returns>Returns true, when the OK button was pressed, otherwise, false.</returns>
        </member>
        <member name="M:KGySoft.WinForms.Forms.DialogBaseForm.OKPressed">
            <summary>
            Override this method when anything needs to be performed when the OK button is pressed.
            Call base method to close the window with positive result.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.DialogBaseForm.CancelPressed">
            <summary>
            Override this method when anything needs to be performed when the Cancel button is pressed.
            Call base method to close the window with negative result.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Forms.DialogBaseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.DialogBaseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Forms.InputBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.InputBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.InputBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Forms.TaskDialogForm">
            <summary>
            A task dialog implementation with Windows Forms technology
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.TaskDialogForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.TaskDialogForm.FirstInit">
            <summary>
            Called before event subscriptions
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.TaskDialogForm.ResetSettings">
            <summary>
            Can be called multiple times during the life of the dialog
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.TaskDialogForm.ResetButtons(KGySoft.WinForms.Forms.TaskDialogForm.Configuration)">
            <summary>
            Resets standard and custom buttons (not command links).
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.TaskDialogForm.UpdateText(System.Windows.Forms.Control,System.String,System.Boolean,System.Boolean)">
            <summary>
            Updates text of a control (does not handle if it has to be appear now)
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.TaskDialogForm.FixControlOrder">
            <summary>
            Fixing controls order. This might be ruined when controls are made visible lately.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.Forms.TaskDialogForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.TaskDialogForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Forms.Dialogs">
            <summary>
            Message dialogs
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.Dialogs.UseAdvancedDialogs">
            <summary>
            Gets or sets whether the <see cref="T:KGySoft.WinForms.Forms.AdvancedMessageDialog"/> is used for showing messages.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.Dialogs.DialogsOwner">
            <summary>
            Gets or sets the owner of message dialogs
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.InfoMessage(System.String)">
            <summary>
            Information message
            </summary>
            <param name="msg">Message in invariant language (will be translated to <see cref="!:Libraries.Language.Language.ActiveLanguage"/>)</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.InfoMessage(System.String,System.Object[])">
            <summary>
            Information message
            </summary>
            <param name="msg">Message with placeholders in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
            <param name="args">Arguments for placeholders</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.ErrorMessage(System.String)">
            <summary>
            Error message
            </summary>
            <param name="msg">Message in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.ErrorMessage(System.String,System.Object[])">
            <summary>
            Error message
            </summary>
            <param name="msg">Message with placeholders in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
            <param name="args">Arguments for placeholders</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.WarningMessage(System.String)">
            <summary>
            Warning message
            </summary>
            <param name="msg">Message in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.WarningMessage(System.String,System.Object[])">
            <summary>
            Warning message
            </summary>
            <param name="msg">Message with placeholders in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
            <param name="args">Arguments for placeholders</param>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.ConfirmMessage(System.Boolean,System.String)">
            <summary>
            Confirmation message with Yes/No[/Cancel] buttons and <see cref="T:System.Windows.Forms.DialogResult"/> return value.
            </summary>
            <param name="msg">Message in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
            <param name="cancelButton">Yes if cancel button is needed</param>
            <returns>DialogResult</returns>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.ConfirmMessage(System.Boolean,System.String,System.Object[])">
            <summary>
            Confirmation message with Yes/No[/Cancel] buttons and <see cref="T:System.Windows.Forms.DialogResult"/> return value.
            </summary>
            <param name="msg">Message with placeholders in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
            <param name="args">Arguments for placeholders</param>
            <param name="cancelButton">Yes if cancel button is needed</param>
            <returns>DialogResult</returns>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.ConfirmMessage(System.String)">
            <summary>
            Confirmation message with Yes/No buttons and <see cref="T:System.Boolean"/> return value.
            </summary>
            <param name="msg">Message in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
            <returns>bool</returns>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.ConfirmMessage(System.String,System.Object[])">
            <summary>
            Confirmation message with Yes/No buttons and <see cref="T:System.Boolean"/> return value.
            </summary>
            <param name="msg">Message with placeholders in invariant language (will be translated to <see cref="!:Language.ActiveLanguage"/>)</param>
            <param name="args">Arguments for placeholders</param>
            <returns>bool</returns>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.InputDialog(System.String,System.String,System.String@,System.Int32,System.Int32)">
            <summary>
            Displays an input dialog.
            </summary>
            <param name="caption">Window caption</param>
            <param name="prompt">Text of input label</param>
            <param name="value">The value that initially may contain a default value</param>
            <param name="x">Horizontal position</param>
            <param name="y">Vertical position</param>
            <returns>Returns true if the OK button was pressed, otherwise, false.</returns>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.InputDialog(System.String,System.String,System.String@)">
            <summary>
            Displays an input dialog.
            </summary>
            <param name="caption">Window caption</param>
            <param name="prompt">Text of input label</param>
            <param name="value">The value that initially may contain a default value</param>
            <returns>Returns true if the OK button was pressed, otherwise, false.</returns>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.InputDialog(System.String,System.String@)">
            <summary>
            Displays an input dialog.
            </summary>
            <param name="prompt">Text of input label</param>
            <param name="value">The value that initially may contain a default value</param>
            <returns>Returns true if the OK button was pressed, otherwise, false.</returns>
        </member>
        <member name="M:KGySoft.WinForms.Forms.Dialogs.InputDialog(System.String@)">
            <summary>
            Displays an input dialog.
            </summary>
            <param name="value">The value that initially may contain a default value</param>
            <returns>Returns true if the OK button was pressed, otherwise, false.</returns>
        </member>
        <member name="T:KGySoft.WinForms.Forms.ReportSenderEventArgs">
            <summary>
             Arguments for <see cref="E:KGySoft.WinForms.Forms.AdvancedMessageDialog.ReportSender"/> event.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.ReportSenderEventArgs.Message">
            <summary>
            Summary message from the sender <see cref="T:KGySoft.WinForms.Forms.AdvancedMessageDialog"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.ReportSenderEventArgs.Details">
            <summary>
            Details content of the sender <see cref="T:KGySoft.WinForms.Forms.AdvancedMessageDialog"/>.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.ReportSenderEventArgs.ScreenshotPath">
            <summary>
            Path of screenshot or null when screenshot has not been saved.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Forms.ReportSenderEventArgs.CloseMessageDialog">
            <summary>
            Gets or sets whether message dialog can be closed after returning from
            handler of <see cref="E:KGySoft.WinForms.Forms.AdvancedMessageDialog.ReportSender"/>.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.LanguageWinForms">
            <summary>
            A class that extends <see cref="T:KGySoft.Libraries.Language.Language"/> class with Winfows Forms routines
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.LanguageWinForms.TranslateControls(System.Windows.Forms.Control)">
            <summary>
            Translates the control along with its children controls.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.LanguageWinForms.TranslateControl(System.Windows.Forms.Control,System.Boolean@)">
            <summary>
            Translate the control without its children. You may use the <see cref="T:System.ComponentModel.LocalizableAttribute"/> to
            make a derived control type untranslatable. To adjust translation of control instances
            you may use the <see cref="M:KGySoft.Libraries.Language.Language.MarkLocalizable(System.Boolean,System.Object[])"/> method.
            A custom translatable control may implement the <see cref="T:KGySoft.Libraries.Language.ICustomTranslated"/> interface.
            <remarks>
            Cell/row items and their tooltips are not translated, only headers. Use custom translation to translate cell/row values.
            </remarks>
            </summary>
            <param name="control">The control to translate.</param>
            <param name="translationFinished">When returns true, no further translation should be performed on child elements.</param>
            <returns>Returns true if translation is not disabled for the control, otherwise, false.</returns>
        </member>
        <member name="T:KGySoft.WinForms.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.All">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.Browse">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.Clear">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.CommandLinkDisabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.CommandLinkHovered">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.CommandLinkNormal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.Edit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.ExpandoHoveredDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.ExpandoHoveredUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.ExpandoNormalDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.ExpandoNormalUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.ExpandoPressedDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.ExpandoPressedUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.New">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.None">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.Options">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.Properties.Resources.TaskDialogIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Res">
            <summary>
            Contains the string resources of the project.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Res.AccessorsInstancePropertyDoesNotExist(System.String,System.Type)">
            <summary>Instance property "{0}" not found on type "{1}".</summary>
        </member>
        <member name="M:KGySoft.WinForms.Res.AccessorsStaticPropertyDoesNotExist(System.String,System.Type)">
            <summary>Static property "{0}" not found on type "{1}".</summary>
        </member>
        <member name="M:KGySoft.WinForms.Res.AccessorsInstanceFieldDoesNotExist(System.String,System.Type)">
            <summary>Instance field "{0}" not found on type "{1}".</summary>
        </member>
        <member name="M:KGySoft.WinForms.Res.AccessorsStaticFieldDoesNotExist(System.String,System.Type)">
            <summary>Static field "{0}" not found on type "{1}".</summary>
        </member>
        <member name="M:KGySoft.WinForms.Res.AccessorsInstanceMethodDoesNotExist(System.String,System.Type)">
            <summary>Instance method "{0}" not found on type "{1}".</summary>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.Comctl32.TaskDialogIndirect(KGySoft.WinForms.WinApi.TASKDIALOGCONFIG@,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            The TaskDialogIndirect function creates, displays, and operates a task dialog.
            The task dialog contains application-defined icons, messages, title,
            verification check box, command links, push buttons, and radio buttons.
            This function can register a callback function to receive notification messages.
            </summary>
            <param name="pTaskConfig">Pointer to a <see cref="T:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG"/> structure that contains information used to display the task dialog.</param>
            <param name="pnButton">Address of a variable that receives either one of the button IDs specified in the pButtons member of the pTaskConfig parameter,
            or one of the values of <see cref="T:KGySoft.WinForms.Components.TaskDialogStandardButtons"/></param>
            <param name="pnRadioButton">Address of a variable that receives one of the button IDs specified in the pRadioButtons member of the pTaskConfig parameter. If this parameter is NULL, no value is returned.</param>
            <param name="pfVerificationFlagChecked">Address of a variable that indicates whether the verification checkbox was checked when the dialog was dismissed.</param>
            <returns></returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.Comdlg32.GetSaveFileName(KGySoft.WinForms.WinApi.OPENFILENAME@)">
            <summary>
            Creates a Save dialog box that lets the user specify the drive, directory, and name of a file to save.
            </summary>
            <param name="lpofn">A pointer to an <see cref="T:KGySoft.WinForms.WinApi.OPENFILENAME"/> structure that contains information used to initialize the dialog box. When GetSaveFileName returns, this structure contains information about the user's file selection.</param>
            <returns>If the user specifies a file name and clicks the OK button and the function is successful, the return value is nonzero. The buffer pointed to by the lpstrFile member of the OPENFILENAME structure contains the full path and file name specified by the user.
            If the user cancels or closes the Save dialog box or an error such as the file name buffer being too small occurs, the return value is zero. To get extended error information, call the <see cref="M:KGySoft.WinForms.WinApi.Comdlg32.CommDlgExtendedError"/> function.
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.Comdlg32.CommDlgExtendedError">
            <summary>
            Returns a common dialog box error code. This code indicates the most recent error to occur during the execution of one of the common dialog box functions.
            </summary>
            <returns>If the most recent call to a common dialog box function succeeded, the return value is undefined. If the common dialog box function returned FALSE because the user closed or canceled the dialog box, the return value is zero. Otherwise, the return value is a nonzero error code.
            The CommDlgExtendedError function can return general error codes for any of the common dialog box functions. In addition, there are error codes that are returned only for a specific common dialog box. All of these error codes are defined in Cderr.h. 
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.Kernel32.GetModuleHandle(System.String)">
            <summary>
            Retrieves a module handle for the specified module. The module must have been loaded by the calling process.
            </summary>
            <param name="lpModuleName">The name of the loaded module (either a .dll or .exe file). If the file name extension is omitted, the default library extension .dll is appended.
            The file name string can include a trailing point character (.) to indicate that the module name has no extension. The string does not have to specify a path.
            When specifying a path, be sure to use backslashes (\), not forward slashes (/). The name is compared (case independently) to the names of modules currently mapped into the
            address space of the calling process.</param>
            <returns>If the function succeeds, the return value is a handle to the specified module.
            If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.Kernel32.LoadLibrary(System.String)">
            <summary>
            Loads the specified module into the address space of the calling process. The specified module may cause other modules to be loaded.
            </summary>
            <param name="lpFileName">The name of the module. This can be either a library module (a .dll file) or an executable module (an .exe file).
            If the string specifies a full path, the function searches only that path for the module.
            If the string specifies a relative path or a module name without a path, the function uses a standard search strategy to find the module.</param>
            <returns>If the function succeeds, the return value is a handle to the module.
            If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.Kernel32.FreeLibrary(System.IntPtr)">
            <summary>
            Frees the loaded dynamic-link library (DLL) module and, if necessary, decrements its reference count. When the reference count reaches zero,
            the module is unloaded from the address space of the calling process and the handle is no longer valid.
            </summary>
            <param name="hModule">A handle to the loaded library module. The <see cref="M:KGySoft.WinForms.WinApi.Kernel32.LoadLibrary(System.String)"/> or <see cref="M:KGySoft.WinForms.WinApi.Kernel32.GetModuleHandle(System.String)"/> function returns this handle.</param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero.</returns>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.NMHDR">
            <summary>
            Contains information about a notification message.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.OPENFILENAME.lpstrFile">
            <summary>
            File name edit box
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.OPENFILENAME.lpstrFileTitle">
            <summary>
            The file name and extension (without path information) of the selected file. This member can be NULL.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.TaskDialogCallbackProc">
            <summary>
            The signature of the callback that receives messages from the Task Dialog when various events occur.
            </summary>
            <param name="hwnd">The window handle of the </param>
            <param name="uNotification">The message being passed.</param>
            <param name="wParam">wParam which is interpreted differently depending on the message.</param>
            <param name="lParam">wParam which is interpreted differently depending on the message.</param>
            <param name="refData">The refrence data that was set to TaskDialog.CallbackData.</param>
            <returns>A HRESULT value. The return value is specific to the message being processed. </returns>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG">
            <summary>
            The TASKDIALOGCONFIG structure contains information used to display a task dialog. The TaskDialogIndirect function uses this structure.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.cbSize">
            <summary>
            Specifies the structure size, in bytes.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.hwndParent">
            <summary>
            Handle to the parent window. This member can be NULL.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.hInstance">
            <summary>
            Handle to the module that contains the icon resource identified by the pszMainIcon or pszFooterIcon members,
            and the string resources identified by the pszWindowTitle, pszMainInstruction, pszContent, pszVerificationText,
            pszExpandedInformation, pszExpandedControlText, pszCollapsedControlText or pszFooter members.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.dwFlags">
            <summary>
            Specifies the behavior of the task dialog.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.dwCommonButtons">
            <summary>
            Specifies the push buttons displayed in the task dialog.
            If no common buttons are specified and no custom buttons are specified using the cButtons and pButtons members, the task dialog will contain the OK button by default.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pszWindowTitle">
            <summary>
            Pointer that references the string to be used for the task dialog title.
            If this parameter is NULL, the filename of the executable program is used.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.hMainIcon">
            <summary>
            A handle to an Icon that is to be displayed in the task dialog.
            This member is ignored unless the TDF_USE_HICON_MAIN flag is specified.
            If this member is NULL and the TDF_USE_HICON_MAIN is specified, no icon will be displayed.
            -or-
            An integer resource identifier of one of the predefined values in <see cref="!:TaskDialogIcons"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pszMainInstruction">
            <summary>
            Pointer that references the string to be used for the main instruction.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pszContent">
            <summary>
            Pointer that references the string to be used for the dialog's primary content.
            If the ENABLE_HYPERLINKS flag is specified for the dwFlags member, then this string may contain hyperlinks in the form: <A HREF="executablestring">Hyperlink Text</A>. 
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.cButtons">
            <summary>
            The number of entries in the pButtons array that is used to create buttons or command links in the task dialog.
            If this member is zero and no common buttons have been specified using the dwCommonButtons member, then the task dialog will have a single OK button displayed.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pButtons">
            <summary>
            Pointer to an array of <see cref="T:KGySoft.WinForms.WinApi.TASKDIALOG_BUTTON"/> structures containing the definition of the custom buttons that are to be displayed in the task dialog.
            This array must contain at least the number of entries that are specified by the cButtons member.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.nDefaultButton">
            <summary>
            The default button for the task dialog. This may be any of the values specified in nButtonID members of one of the TASKDIALOG_BUTTON structures in the pButtons array,
            or one of the IDs corresponding to the buttons specified in the dwCommonButtons member.
            If this member is zero or its value does not correspond to any button ID in the dialog, then the first button in the dialog will be the default.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.cRadioButtons">
            <summary>
            The number of entries in the pRadioButtons array that is used to create radio buttons in the task dialog.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pRadioButtons">
            <summary>
            Pointer to an array of <see cref="T:KGySoft.WinForms.WinApi.TASKDIALOG_BUTTON"/> structures containing the definition of the radio buttons that are to be displayed in the task dialog.
            This array must contain at least the number of entries that are specified by the cRadioButtons member. This parameter can be NULL.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.nDefaultRadioButton">
            <summary>
            The button ID of the radio button that is selected by default. If this value does not correspond to a button ID, the first button in the array is selected by default.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pszVerificationText">
            <summary>
            Pointer that references the string to be used to label the verification checkbox.
            If this parameter is NULL, the verification checkbox is not displayed in the task dialog.
            If the pfVerificationFlagChecked parameter of TaskDialogIndirect is NULL, the checkbox is not enabled.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pszExpandedInformation">
            <summary>
            Pointer that references the string to be used for displaying additional information.
            The additional information is displayed either immediately below the content or below the footer text depending on whether the TDF_EXPAND_FOOTER_AREA flag is specified.
            If the TDF_ENABLE_HYPERLINKS flag is specified for the dwFlags member, then this string may contain hyperlinks in the form: <A HREF="executablestring">Hyperlink Text</A>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pszExpandedControlText">
            <summary>
            Pointer that references the string to be used to label the button for collapsing the expandable information.
            This member is ignored when the pszExpandedInformation member is NULL.
            If this member is NULL and the pszCollapsedControlText is specified, then the pszCollapsedControlText value will be used for this member as well.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pszCollapsedControlText">
            <summary>
            Pointer that references the string to be used to label the button for expanding the expandable information. 
            This member is ignored when the pszExpandedInformation member is NULL.
            If this member is NULL and the pszCollapsedControlText is specified, then the pszCollapsedControlText value will be used for this member as well.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.hFooterIcon">
            <summary>
            A handle to an Icon that is to be displayed in the footer of the task dialog.
            This member is ignored unless the TDF_USE_HICON_FOOTER flag is specified and the pszFooterIcon is not.
            If this member is NULL and the TDF_USE_HICON_FOOTER is specified, no icon is displayed.
            -or-
            An integer resource identifier of one of the predefined values in <see cref="!:TaskDialogIcons"/>.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pszFooter">
            <summary>
            Pointer to the string to be used in the footer area of the task dialog.
            If the TDF_ENABLE_HYPERLINKS flag is specified for the dwFlags member, then this string may contain hyperlinks in this form:
            <A HREF="executablestring">Hyperlink Text</A>
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.pfCallback">
            <summary>
            Pointer to an application-defined callback function.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.lpCallbackData">
            <summary>
            A pointer to application-defined reference data. This value is defined by the caller.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG.cxWidth">
            <summary>
            The width of the task dialog's client area, in dialog units. If 0, the task dialog manager will calculate the ideal width.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.TASKDIALOG_BUTTON">
            <summary>
            The TASKDIALOG_BUTTON structure contains information used to display a button in a task dialog. The <see cref="T:KGySoft.WinForms.WinApi.TASKDIALOGCONFIG"/> structure uses this structure.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_BUTTON.nButtonID">
            <summary>
            Indicates the value to be returned when this button is selected.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_BUTTON.pszButtonText">
            <summary>
            Pointer that references the string to be used to label the button.
            When using Command Links, you delineate the command from the note by placing a new line character in the string.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.TASKDIALOG_ELEMENTS">
            <summary>
            TASKDIALOG_ELEMENTS taken from CommCtrl.h
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_ELEMENTS.TDE_CONTENT">
            <summary>
            The content element.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_ELEMENTS.TDE_EXPANDED_INFORMATION">
            <summary>
            Expanded Information.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_ELEMENTS.TDE_FOOTER">
            <summary>
            Footer.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_ELEMENTS.TDE_MAIN_INSTRUCTION">
            <summary>
            Main Instructions
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS">
            <summary>
            Specifies the behavior of the task dialog.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_ENABLE_HYPERLINKS">
            <summary>
            Enables hyperlink processing for the strings specified in the pszContent, pszExpandedInformation and pszFooter members. When enabled, these members may point to strings that contain hyperlinks in the following form:
            <A HREF="executablestring">Hyperlink Text</A>
            Warning: Enabling hyperlinks when using content from an unsafe source may cause security vulnerabilities.
            Note  Task Dialogs will not actually execute any hyperlinks. Hyperlink execution must be handled in the callback function specified by pfCallback. For more details, see TaskDialogCallbackProc.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_USE_HICON_MAIN">
            <summary>
            Indicates that the dialog should use the icon referenced by the handle in the hMainIcon member as the primary icon in the task dialog.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_USE_HICON_FOOTER">
            <summary>
            Indicates that the dialog should use the icon referenced by the handle in the hFooterIcon member as the footer icon in the task dialog.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_ALLOW_DIALOG_CANCELLATION">
            <summary>
            Indicates that the dialog should be able to be closed using Alt-F4, Escape, and the title bar's close button even if no cancel button is specified in either the dwCommonButtons or pButtons members.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_USE_COMMAND_LINKS">
            <summary>
            Indicates that the buttons specified in the pButtons member are to be displayed as command links (using a standard task dialog glyph) instead of push buttons.
            When using command links, all characters up to the first new line character in the pszButtonText member will be treated as the command link's main text,
            and the remainder will be treated as the command link's note. This flag is ignored if the cButtons member is zero.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_USE_COMMAND_LINKS_NO_ICON">
            <summary>
            Indicates that the buttons specified in the pButtons member are to be displayed as command links (without a glyph) instead of push buttons. When using command links,
            all characters up to the first new line character in the pszButtonText member will be treated as the command link's main text,
            and the remainder will be treated as the command link's note. This flag is ignored if the cButtons member is zero.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_EXPAND_FOOTER_AREA">
            <summary>
            Indicates that the string specified by the pszExpandedInformation member is displayed at the bottom of the dialog's footer area instead of immediately after the dialog's content.
            This flag is ignored if the pszExpandedInformation member is NULL.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_EXPANDED_BY_DEFAULT">
            <summary>
            Indicates that the string specified by the pszExpandedInformation member is displayed when the dialog is initially displayed.
            This flag is ignored if the pszExpandedInformation member is NULL.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_VERIFICATION_FLAG_CHECKED">
            <summary>
            Indicates that the verification checkbox in the dialog is checked when the dialog is initially displayed.
            This flag is ignored if the pszVerificationText parameter is NULL.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_SHOW_PROGRESS_BAR">
            <summary>
            Indicates that a Progress Bar is to be displayed.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_SHOW_MARQUEE_PROGRESS_BAR">
            <summary>
            Indicates that an Marquee Progress Bar is to be displayed.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_CALLBACK_TIMER">
            <summary>
            Indicates that the task dialog's callback is to be called approximately every 200 milliseconds.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_POSITION_RELATIVE_TO_WINDOW">
            <summary>
            Indicates that the task dialog is positioned (centered) relative to the window specified by hwndParent.
            If the flag is not supplied (or no hwndParent member is specified), the task dialog is positioned (centered) relative to the monitor.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_RTL_LAYOUT">
            <summary>
            Indicates that text is displayed reading right to left.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_NO_DEFAULT_RADIO_BUTTON">
            <summary>
            Indicates that no default item will be selected.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_CAN_BE_MINIMIZED">
            <summary>
            Indicates that the task dialog can be minimized.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_FLAGS.TDF_SIZE_TO_CONTENT">
            <summary>
            Indicates that the width of the task dialog is determined by the width of its content area. This flag is ignored if cxWidth is not set to 0.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES">
            <summary>
            TASKDIALOG_MESSAGES taken from CommCtrl.h.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_NAVIGATE_PAGE">
            <summary>
            Navigate to a newly allocated page
            lParam = ptr to new page
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_CLICK_BUTTON">
            <summary>
            Click button.
            wParam = Button ID
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_SET_MARQUEE_PROGRESS_BAR">
            <summary>
            Set Progress bar to be marquee mode.
            wParam = 0 (nonMarque) wParam != 0 (Marquee)
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_SET_PROGRESS_BAR_STATE">
            <summary>
            Set Progress bar state.
            wParam = new progress state
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_SET_PROGRESS_BAR_RANGE">
            <summary>
            Set progress bar range.
            lParam = MAKELPARAM(nMinRange, nMaxRange)
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_SET_PROGRESS_BAR_POS">
            <summary>
            Set progress bar position.
            wParam = new position
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_SET_PROGRESS_BAR_MARQUEE">
            <summary>
            Set progress bar marquee (animation).
            wParam = 0 (stop marquee), wParam != 0 (start marquee), lparam = speed (milliseconds between repaints)
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_SET_ELEMENT_TEXT">
            <summary>
            Set a text element of the Task Dialog.
            wParam = element (<see cref="T:KGySoft.WinForms.WinApi.TASKDIALOG_ELEMENTS"/>), lParam = new element text (LPCWSTR)
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_CLICK_RADIO_BUTTON">
            <summary>
            Click a radio button.
            wParam = Radio Button ID
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_ENABLE_BUTTON">
            <summary>
            Enable or disable a button.
            lParam = 0 (disable), lParam != 0 (enable), wParam = Button ID
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_ENABLE_RADIO_BUTTON">
            <summary>
            Enable or disable a radio button.
            lParam = 0 (disable), lParam != 0 (enable), wParam = Radio Button ID
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_CLICK_VERIFICATION">
            <summary>
            Check or uncheck the verfication checkbox.
            wParam = 0 (unchecked), 1 (checked), lParam = 1 (set key focus)
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_UPDATE_ELEMENT_TEXT">
            <summary>
            Update the text of an element (no effect if origially set as null).
            wParam = element (<see cref="T:KGySoft.WinForms.WinApi.TASKDIALOG_ELEMENTS"/>), lParam = new element text (LPCWSTR)
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE">
            <summary>
            Designate whether a given Task Dialog button or command link should have a User Account Control (UAC) shield icon.
            wParam = Button ID, lParam = 0 (elevation not required), lParam != 0 (elevation required)
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_MESSAGES.TDM_UPDATE_ICON">
            <summary>
            Refreshes the icon of the task dialog.
            wParam = icon element (TASKDIALOG_ICON_ELEMENTS), lParam = new icon (hIcon if TDF_USE_HICON_* was set, PCWSTR otherwise)
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS">
            <summary>
            Notifications of a <see cref="T:KGySoft.WinForms.WinApi.TaskDialogCallbackProc"/> function.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_CREATED">
            <summary>
            Indicates that the Task Dialog has been created.
            Sent once the dialog has been created and before it is displayed.
            The value returned by the callback is ignored.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_NAVIGATED">
            <summary>
            Sent by the Task Dialog when a navigation has occurred.
            The value returned by the callback is ignored.
            </summary>   
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_BUTTON_CLICKED">
            <summary>
            Indicates that a button has been selected. The command ID of the button is specified by wParam.
            To prevent the Task Dialog from closing, the application must
            return true, otherwise the Task Dialog will be closed and the button ID returned to via
            the original application call.
            wParam = Button ID
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_HYPERLINK_CLICKED">
            <summary>
            Indicates that a hyperlink has been selected. A pointer to the link text is specified by lParam.
            To prevent the TaskDialog from shell executing the hyperlink,
            the application must return TRUE, otherwise ShellExecute will be called.
            lParam = (LPCWSTR)pszHREF
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_TIMER">
            <summary>
            Indicates that the Task Dialog timer has fired. The total elapsed time is specified by wParam.
            You can update the progress bar by sending a TDM_SET_PROGRESS_BAR_POS message to the window specified by the hwnd parameter.
            To reset the tickcount, the application must return true, otherwise the tickcount will continue to increment.
            wParam = Milliseconds since dialog created or timer reset
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_DESTROYED">
            <summary>
            Sent by the Task Dialog when it is destroyed and its window handle no longer valid.
            The value returned by the callback is ignored.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_RADIO_BUTTON_CLICKED">
            <summary>
            Indicates that a radio button has been selected. The command ID of the radio button is specified by wParam.
            The value returned by the callback is ignored.
            wParam = Radio Button ID
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_DIALOG_CONSTRUCTED">
            <summary>
            Indicates that the Task Dialog has been created but has not been displayed yet.
            The value returned by the callback is ignored.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_VERIFICATION_CLICKED">
            <summary>
            Indicates that the user checks or unchecks the verification checkbox.
            The value returned by the callback is ignored.
            wParam = 1 if checkbox checked, 0 if not, lParam is unused and always 0
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_HELP">
            <summary>
            Indicates that the F1 key has been pressed while the Task Dialog has focus.
            The value returned by the callback is ignored.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.WinApi.TASKDIALOG_NOTIFICATIONS.TDN_EXPANDO_BUTTON_CLICKED">
            <summary>
            Indicates that the exando button has been selected.
            The value returned by the callback is ignored.
            wParam = 0 (dialog is now collapsed), wParam != 0 (dialog is now expanded)
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.ThemingActivationContext">
            <summary>
            This class makes sure that the correct version of Comctl32.dll will be loaded.
            Needed for <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> used on 64-bit machines, where P/Invoke from comctl32
            may cause an <see cref="T:System.EntryPointNotFoundException"/> without using this context.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.GetWindowDC(System.IntPtr)">
            <summary>
            The GetWindowDC function retrieves the device context (DC) for the entire window, including title bar, menus, and scroll bars.
            A window device context permits painting anywhere in a window, because the origin of the device context is the upper-left corner of the window instead of the client area.
            GetWindowDC assigns default attributes to the window device context each time it retrieves the device context. Previous attributes are lost. 
            </summary>
            <param name="hWnd">Handle to the window with a device context that is to be retrieved. If this value is NULL, GetWindowDC retrieves the device context for the entire screen.</param>
            <returns>If the function succeeds, the return value is a handle to a device context for the specified window.
            If the function fails, the return value is NULL, indicating an error or an invalid hWnd parameter. 
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            The ReleaseDC function releases a device context (DC), freeing it for use by other applications. The effect of the ReleaseDC function depends on the type of DC. It frees only common and window DCs. It has no effect on class or private DCs.
            </summary>
            <param name="hWnd">A handle to the window whose DC is to be released.</param>
            <param name="hDC">A handle to the DC to be released.</param>
            <returns>The return value indicates whether the DC was released. If the DC was released, the return value is 1.
            If the DC was not released, the return value is zero.</returns>
            <remarks>
            The application must call the ReleaseDC function for each call to the GetWindowDC function and for each call to the GetDC function that retrieves a common DC.
            An application cannot use the ReleaseDC function to release a DC that was created by calling the CreateDC function; instead, it must use the DeleteDC function. ReleaseDC must be called from the same thread that called GetDC.</remarks>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Changes the size, position, and Z order of a child, pop-up, or top-level window.
            These windows are ordered according to their appearance on the screen.
            The topmost window receives the highest rank and is the first window in the Z order.
            </summary>
            <param name="hWnd">A handle to the window.</param>
            <param name="hWndInsertAfter">A handle to the window to precede the positioned window in the Z order. This parameter must be a window handle or one of the following values.
            HWND_BOTTOM
            Places the window at the bottom of the Z order. If the hWnd parameter identifies a topmost window, the window loses its topmost status and is placed at the bottom of all other windows.
            HWND_NOTOPMOST
            Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window is already a non-topmost window.
            HWND_TOP
            Places the window at the top of the Z order.
            HWND_TOPMOST
            Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated.
            </param>
            <param name="X">Specifies the new position of the left side of the window, in client coordinates.</param>
            <param name="Y">Specifies the new position of the top of the window, in client coordinates.</param>
            <param name="cx">Specifies the new width of the window, in pixels.</param>
            <param name="cy">Specifies the new height of the window, in pixels.</param>
            <param name="uFlags">Specifies the window sizing and positioning flags. This parameter can be a combination of the following values. 
            <para>SWP_ASYNCWINDOWPOS:
            If the calling thread and the thread that owns the window are attached to different input queues, the system posts the request to the thread that owns the window. This prevents the calling thread from blocking its execution while other threads process the request. </para>
            <para>SWP_DEFERERASE:
            Prevents generation of the WM_SYNCPAINT message. </para>
            <para>SWP_DRAWFRAME:
            Draws a frame (defined in the window's class description) around the window.</para>
            <para>SWP_FRAMECHANGED:
            Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE is sent only when the window's size is being changed.</para>
            <para>SWP_HIDEWINDOW:
            Hides the window.</para>
            <para>SWP_NOACTIVATE:
            Does not activate the window. If this flag is not set, the window is activated and moved to the top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter parameter).</para>
            <para>SWP_NOCOPYBITS:
            Discards the entire contents of the client area. If this flag is not specified, the valid contents of the client area are saved and copied back into the client area after the window is sized or repositioned.</para>
            <para>SWP_NOMOVE:
            Retains the current position (ignores X and Y parameters).</para>
            <para>SWP_NOOWNERZORDER:
            Does not change the owner window's position in the Z order.</para>
            <para>SWP_NOREDRAW:
            Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent window uncovered as a result of the window being moved. When this flag is set, the application must explicitly invalidate or redraw any parts of the window and parent window that need redrawing.</para>
            <para>SWP_NOREPOSITION:
            Same as the SWP_NOOWNERZORDER flag.</para>
            <para>SWP_NOSENDCHANGING:
            Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</para>
            <para>SWP_NOSIZE:
            Retains the current size (ignores the cx and cy parameters).</para>
            <para>SWP_NOZORDER:
            Retains the current Z order (ignores the hWndInsertAfter parameter).</para>
            <para>SWP_SHOWWINDOW
            Displays the window.</para>
            </param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.GetWindowRect(System.IntPtr,KGySoft.WinForms.WinApi.RECT@)">
            <summary>
            The GetWindowRect function retrieves the dimensions of the bounding rectangle of the specified window.
            The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <param name="hWnd">[in] Handle to the window.</param>
            <param name="lpRect">[out] Pointer to a structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.GetParent(System.IntPtr)">
            <summary>
            The GetParent function retrieves a handle to the specified window's parent or owner.
            </summary>
            <param name="hWnd">[in] Handle to the window whose parent window handle is to be retrieved.</param>
            <returns>If the window is a child window, the return value is a handle to the parent window.
            If the window is a top-level window, the return value is a handle to the owner window.
            If the window is a top-level unowned window or if the function fails, the return value is NULL.
            To get extended error information, call GetLastError.
            For example, this would determine, when the function returns NULL, if the function failed or the window was a top-level window.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.SetWindowText(System.IntPtr,System.String)">
            <summary>
            The SetWindowText function changes the text of the specified window's title bar (if it has one).
            If the specified window is a control, the text of the control is changed.
            However, SetWindowText cannot change the text of a control in another application.
            </summary>
            <param name="hWnd">[in] Handle to the window or control whose text is to be changed.</param>
            <param name="lpString">[in] Pointer to a null-terminated string to be used as the new title or control text.</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            The SendMessage function sends the specified message to a window or windows.
            It calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function.
            To post a message to a thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </summary>
            <param name="hWnd">[in] Handle to the window whose window procedure will receive the message.
            If this parameter is HWND_BROADCAST, the message is sent to all top-level windows in the system,
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.
            Microsoft Windows Vista and later: Message sending is subject to User Interface Privilege Isolation (UIPI).
            The thread of a process can send messages only to message queues of threads in processes of lesser or equal integrity level.
            </param>
            <param name="Msg">[in] Specifies the message to be sent.</param>
            <param name="wParam">[in] Specifies additional message-specific information.</param>
            <param name="lParam">[in] Specifies additional message-specific information.</param>
            <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.String)">
            <summary>
            The SendMessage function sends the specified message to a window or windows.
            It calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function.
            To post a message to a thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </summary>
            <param name="hWnd">[in] Handle to the window whose window procedure will receive the message.
            If this parameter is HWND_BROADCAST, the message is sent to all top-level windows in the system,
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.
            Microsoft Windows Vista and later: Message sending is subject to User Interface Privilege Isolation (UIPI).
            The thread of a process can send messages only to message queues of threads in processes of lesser or equal integrity level.
            </param>
            <param name="Msg">[in] Specifies the message to be sent.</param>
            <param name="wParam">Specifies additional message-specific information.</param>
            <param name="lParam">Specifies additional message-specific information.</param>
            <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            The SendMessage function sends the specified message to a window or windows.
            It calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function.
            To post a message to a thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </summary>
            <param name="hWnd">[in] Handle to the window whose window procedure will receive the message.
            If this parameter is HWND_BROADCAST, the message is sent to all top-level windows in the system,
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.
            Microsoft Windows Vista and later: Message sending is subject to User Interface Privilege Isolation (UIPI).
            The thread of a process can send messages only to message queues of threads in processes of lesser or equal integrity level.
            </param>
            <param name="Msg">[in] Specifies the message to be sent.</param>
            <param name="wParam">[in] Specifies additional message-specific information.</param>
            <param name="lParam">[in] Specifies additional message-specific information.</param>
            <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.DestroyWindow(System.IntPtr)">
            <summary>
            The DestroyWindow function destroys the specified window.
            The function sends WM_DESTROY and WM_NCDESTROY messages to the window to deactivate it and remove the keyboard focus from it.
            The function also destroys the window's menu, flushes the thread message queue, destroys timers, removes clipboard ownership,
            and breaks the clipboard viewer chain (if the window is at the top of the viewer chain).
            If the specified window is a parent or owner window, DestroyWindow automatically destroys the associated child or
            owned windows when it destroys the parent or owner window. The function first destroys child or owned windows,
            and then it destroys the parent or owner window. DestroyWindow also destroys modeless dialog boxes created by the CreateDialog function.
            </summary>
            <param name="hwnd">[in] Handle to the window to be destroyed.</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError. 
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.GetDlgItem(System.IntPtr,System.Int32)">
            <summary>
            The GetDlgItem function retrieves a handle to a control in the specified dialog box.
            </summary>
            <param name="hDlg">[in] Handle to the dialog box that contains the control.</param>
            <param name="nIDDlgItem">[in] Specifies the identifier of the control to be retrieved.</param>
            <returns>If the function succeeds, the return value is the window handle of the specified control. 
            If the function fails, the return value is NULL, indicating an invalid dialog box handle or a nonexistent control. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.CreateWindowEx(System.Int32,System.String,System.String,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Creates an overlapped, pop-up, or child window with an extended window style; otherwise, this function is identical to the CreateWindow function.
            For more information about creating a window and for full descriptions of the other parameters of CreateWindowEx, see CreateWindow.
            </summary>
            <param name="dwExStyle">[in] Specifies the extended window style of the window being created. This parameter can be one or more of the following values:
            WS_EX_ACCEPTFILES: Specifies that a window created with this style accepts drag-drop files.
            WS_EX_APPWINDOW: Forces a top-level window onto the taskbar when the window is visible. 
            WS_EX_CLIENTEDGE: Specifies that a window has a border with a sunken edge.
            WS_EX_COMPOSITED: Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            WS_EX_CONTEXTHELP: Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP: cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            WS_EX_CONTROLPARENT: The window itself contains child windows that should take part in dialog box navigation. If this style is specified, the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key, an arrow key, or a keyboard mnemonic.
            WS_EX_DLGMODALFRAME: Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            WS_EX_LAYERED: Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC. 
            WS_EX_LAYOUTRTL: Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left. 
            WS_EX_LEFT: Creates a window that has generic left-aligned properties. This is the default.
            WS_EX_LEFTSCROLLBAR: If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            WS_EX_LTRREADING: The window text is displayed using left-to-right reading-order properties. This is the default.
            WS_EX_MDICHILD: Creates a multiple-document interface (MDI) child window.
            WS_EX_NOACTIVATE: Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window. 
            To activate the window, use the SetActiveWindow or SetForegroundWindow function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
            WS_EX_NOINHERITLAYOUT: Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            WS_EX_NOPARENTNOTIFY: Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
            WS_EX_OVERLAPPEDWINDOW: Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles.
            WS_EX_PALETTEWINDOW: Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles.
            WS_EX_RIGHT: The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored.
            Using the WS_EX_RIGHT style for static or edit controls has the same effect as using the SS_RIGHT or ES_RIGHT style, respectively. Using this style with button controls has the same effect as using BS_RIGHT and BS_RIGHTBUTTON styles. 
            WS_EX_RIGHTSCROLLBAR: Vertical scroll bar (if present) is to the right of the client area. This is the default.
            WS_EX_RTLREADING: If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored.
            WS_EX_STATICEDGE: Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            WS_EX_TOOLWINDOW: Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE. 
            WS_EX_TOPMOST: Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function.
            WS_EX_TRANSPARENT: Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted. The window appears transparent because the bits of underlying sibling windows have already been painted.
            To achieve transparency without these restrictions, use the SetWindowRgn function.
            WS_EX_WINDOWEDGE: Specifies that a window has a border with a raised edge.
            </param>
            <param name="lpClassName">[in] Pointer to a null-terminated string or a class atom created by a previous call to the RegisterClass or RegisterClassEx function. The atom must be in the low-order word of lpClassName; the high-order word must be zero. If lpClassName is a string, it specifies the window class name. The class name can be any name registered with RegisterClass or RegisterClassEx, provided that the module that registers the class is also the module that creates the window. The class name can also be any of the predefined system class names:
            BUTTON: Designates a small rectangular child window that represents a button the user can click to turn it on or off. Button controls can be used alone or in groups, and they can either be labeled or appear without text. Button controls typically change appearance when the user clicks them.
            COMBOBOX: Designates a control consisting of a list box and a selection field similar to an edit control. When using this style, an application should either display the list box at all times or enable a drop-down list box. If the list box is visible, typing characters into the selection field highlights the first list box entry that matches the characters typed. Conversely, selecting an item in the list box displays the selected text in the selection field.
            EDIT: Designates a rectangular child window into which the user can type text from the keyboard. The user selects the control and gives it the keyboard focus by clicking it or moving to it by pressing the TAB key. The user can type text when the edit control displays a flashing caret; use the mouse to move the cursor, select characters to be replaced, or position the cursor for inserting characters; or use the key to delete characters.
            LISTBOX: Designates a list of character strings. Specify this control whenever an application must present a list of names, such as filenames, from which the user can choose. The user can select a string by clicking it. A selected string is highlighted, and a notification message is passed to the parent window.
            MDICLIENT: Designates an MDI client window. This window receives messages that control the MDI application's child windows. The recommended style bits are WS_CLIPCHILDREN and WS_CHILD. Specify the WS_HSCROLL and WS_VSCROLL styles to create an MDI client window that allows the user to scroll MDI child windows into view.
            RichEdit: Designates a Microsoft Rich Edit 1.0 control. This window lets the user view and edit text with character and paragraph formatting, and can include embedded Component Object Model (COM) objects.
            RICHEDIT_CLASS: Designates a Rich Edit 2.0 control. This controls let the user view and edit text with character and paragraph formatting, and can include embedded COM objects.
            SCROLLBAR: Designates a rectangle that contains a scroll box and has direction arrows at both ends. The scroll bar sends a notification message to its parent window whenever the user clicks the control. The parent window is responsible for updating the position of the scroll box, if necessary.
            STATIC: Designates a simple text field, box, or rectangle used to label, box, or separate other controls. Static controls take no input and provide no output.
            </param>
            <param name="lpWindowName">[in] Pointer to a null-terminated string that specifies the window name. If the window style specifies a title bar, the window title pointed to by lpWindowName is displayed in the title bar. When using CreateWindow to create controls, such as buttons, check boxes, and static controls, use lpWindowName to specify the text of the control. When creating a static control with the SS_ICON style, use lpWindowName to specify the icon name or identifier. To specify an identifier, use the syntax "#num".</param>
            <param name="dwStyle">[in] Specifies the style of the window being created. This parameter can be a combination of window styles, plus the control styles.</param>
            <param name="x">[in] Specifies the initial horizontal position of the window. For an overlapped or pop-up window, the x parameter is the initial x-coordinate of the window's upper-left corner, in screen coordinates. For a child window, x is the x-coordinate of the upper-left corner of the window relative to the upper-left corner of the parent window's client area. If x is set to CW_USEDEFAULT, the system selects the default position for the window's upper-left corner and ignores the y parameter. CW_USEDEFAULT is valid only for overlapped windows; if it is specified for a pop-up or child window, the x and y parameters are set to zero.</param>
            <param name="y">[in] Specifies the initial vertical position of the window. For an overlapped or pop-up window, the y parameter is the initial y-coordinate of the window's upper-left corner, in screen coordinates. For a child window, y is the initial y-coordinate of the upper-left corner of the child window relative to the upper-left corner of the parent window's client area. For a list box y is the initial y-coordinate of the upper-left corner of the list box's client area relative to the upper-left corner of the parent window's client area. 
            If an overlapped window is created with the WS_VISIBLE style bit set and the x parameter is set to CW_USEDEFAULT, then the y parameter determines how the window is shown. If the y parameter is CW_USEDEFAULT, then the window manager calls ShowWindow with the SW_SHOW flag after the window has been created. If the y parameter is some other value, then the window manager calls ShowWindow with that value as the nCmdShow parameter. </param>
            <param name="nWidth">[in] Specifies the width, in device units, of the window. For overlapped windows, nWidth is the window's width, in screen coordinates, or CW_USEDEFAULT. If nWidth is CW_USEDEFAULT, the system selects a default width and height for the window; the default width extends from the initial x-coordinates to the right edge of the screen; the default height extends from the initial y-coordinate to the top of the icon area. CW_USEDEFAULT is valid only for overlapped windows; if CW_USEDEFAULT is specified for a pop-up or child window, the nWidth and nHeight parameter are set to zero.</param>
            <param name="nHeight">[in] Specifies the height, in device units, of the window. For overlapped windows, nHeight is the window's height, in screen coordinates. If the nWidth parameter is set to CW_USEDEFAULT, the system ignores nHeight.</param>
            <param name="hWndParent">[in] Handle to the parent or owner window of the window being created. To create a child window or an owned window, supply a valid window handle. This parameter is optional for pop-up windows.</param>
            <param name="hMenu">[in] Handle to a menu, or specifies a child-window identifier, depending on the window style. For an overlapped or pop-up window, hMenu identifies the menu to be used with the window; it can be NULL if the class menu is to be used. For a child window, hMenu specifies the child-window identifier, an integer value used by a dialog box control to notify its parent about events. The application determines the child-window identifier; it must be unique for all child windows with the same parent window.</param>
            <param name="hInstance">[in] Handle to the instance of the module to be associated with the window.</param>
            <param name="lpParam">[in]  Pointer to a value to be passed to the window through the CREATESTRUCT structure (lpCreateParams member) pointed to by the lParam param of the WM_CREATE message. This message is sent to the created window by this function before it returns.
            If an application calls CreateWindow to create a MDI client window, lpParam should point to a CLIENTCREATESTRUCT structure. If an MDI client window calls CreateWindow to create an MDI child window, lpParam should point to a MDICREATESTRUCT structure. lpParam may be NULL if no additional data is needed.</param>
            <returns>If the function succeeds, the return value is a handle to the new window.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.ScreenToClient(System.IntPtr,KGySoft.WinForms.WinApi.POINT@)">
            <summary>
            The ScreenToClient function converts the screen coordinates of a specified point on the screen to client-area coordinates. 
            </summary>
            <param name="hWnd">[in] Handle to the window whose client area will be used for the conversion.</param>
            <param name="lpPoint">[in] Pointer to a POINT structure that specifies the screen coordinates to be converted.</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.SetParent(System.IntPtr,System.IntPtr)">
            <summary>
            The SetParent function changes the parent window of the specified child window.
            </summary>
            <param name="hWndChild">[in] Handle to the child window.</param>
            <param name="hWndNewParent">[in] Handle to the new parent window. If this parameter is NULL, the desktop window becomes the new parent window. Windows 2000/XP: If this parameter is HWND_MESSAGE, the child window becomes a message-only window.</param>
            <returns>If the function succeeds, the return value is a handle to the previous parent window.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)">
            <summary>
            Retrieves the window object whose class name and window name match the specified strings.
            </summary>
            <param name="hwndParent">Handle to the parent window whose child windows are to be searched.</param>
            <param name="hwndChildAfter">Handle to a child window. The search begins with the next child window in the Z order. The child window must be a direct child window of hwndParent, not just a descendant window.</param>
            <param name="lpszClass">Pointer to a null-terminated string that specifies the class name or a class atom created by a previous call to the RegisterClass or RegisterClassEx.</param>
            <param name="lpszWindow">Pointer to a null-terminated string that specifies the window name (the window's title). If this parameter is NULL, all window names match.</param>
            <returns>If the function succeeds, the return value is a pointer to the window object having the specified class and window names. If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.LoadString(System.IntPtr,System.Int32,System.IntPtr@,System.Int32)">
            <summary>
            Loads a string resource from the executable file associated with a specified module, copies the string into a buffer, and appends a terminating null character.
            </summary>
            <param name="hInstance">A handle to an instance of the module whose executable file contains the string resource. To get the handle to the application itself, call the <see cref="M:KGySoft.WinForms.WinApi.Kernel32.GetModuleHandle(System.String)"/> function with NULL.</param>
            <param name="uID">The identifier of the string to be loaded.</param>
            <param name="lpBuffer">The buffer is to receive the string.</param>
            <param name="nBufferMax">The size of the buffer, in characters. The string is truncated and null-terminated if it is longer than the number of characters specified. If this parameter is 0, then lpBuffer receives a read-only pointer to the resource itself.</param>
            <returns>If the function succeeds, the return value is the number of characters copied into the buffer, not including the terminating null character, or zero if the string resource does not exist.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.GetDialogBaseUnits">
            <summary>
            Retrieves the system's dialog base units, which are the average width and height of characters in the system font. For dialog boxes that use the system font,
            you can use these values to convert between dialog template units, as specified in dialog box templates, and pixels. For dialog boxes that do not use the system font,
            the conversion from dialog template units to pixels depends on the font used by the dialog box.
            </summary>
            <returns>The function returns the dialog base units. The low-order word of the return value contains the horizontal dialog box base unit,
            and the high-order word contains the vertical dialog box base unit.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.LoadCursor(System.IntPtr,System.Int32)">
            <summary>
            Loads the specified cursor resource from the executable (.EXE) file associated with an application instance.
            </summary>
            <param name="hInstance">A handle to an instance of the module whose executable file contains the cursor to be loaded.</param>
            <param name="lpCursorName">The name of the cursor resource to be loaded. Alternatively, this parameter can consist of the resource identifier in the low-order word and zero in the high-order word.</param>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.User32.DrawFrameControl(System.Runtime.InteropServices.HandleRef,KGySoft.WinForms.WinApi.RECT@,System.Int32,System.Int32)">
            <summary>
            This function draws a frame control of the specified type and style.
            </summary>
            <param name="hDC">Handle to the device context of the window in which to draw the control.</param>
            <param name="rect">Long pointer to a RECT structure that contains the logical coordinates of the bounding rectangle for frame control.</param>
            <param name="type">Specifies the type of frame control to draw.</param>
            <param name="state">Specifies the initial state of the frame control.</param>
            <returns>Nonzero indicates success. Zero indicates failure.</returns>
        </member>
        <member name="T:KGySoft.WinForms.WinApi.UxTheme">
            <summary>
            Native methods for UxTheme.dll
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.UxTheme.BufferedPaintInit">
            <summary>
            Initialize buffered painting for the current thread.
            </summary>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <remarks>BufferedPaintInit is called before BeginBufferedPaint or BeginBufferedAnimation for each thread that uses these functions.
            Each call to BufferedPaintInit should be matched with a call to BufferedPaintUnInit when calls to buffered paint APIs are no longer needed. An application may call this API multiple times, as long as each call to BufferedPaintInit is balanced with a call to BufferedPaintUnInit.
            This function only needs to be called once in the lifetime of a thread. Typically, this function is called before creating the main application window, or during WM_CREATE. Call BufferedPaintUnInit after destroying the window, or during WM_NCDESTROY.</remarks>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.UxTheme.BufferedPaintUnInit">
            <summary>
            Closes down buffered painting for the current thread. Called once for each call to BufferedPaintInit after calls to BeginBufferedPaint are no longer needed.
            </summary>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.UxTheme.BeginBufferedAnimation(System.IntPtr,System.IntPtr,KGySoft.WinForms.WinApi.RECT@,KGySoft.WinForms.WinApi.BP_BUFFERFORMAT,System.IntPtr,KGySoft.WinForms.WinApi.BP_ANIMATIONPARAMS@,System.IntPtr@,System.IntPtr@)">
            <summary>
            Begins a buffered animation operation. The animation consists of a cross-fade between the contents of two buffers over a specified period of time. 
            </summary>
            <param name="hwnd">A handle to the window in which the animations play.</param>
            <param name="hdcTarget">A handle of the target DC on which the buffer is animated.</param>
            <param name="rcTarget">A pointer to a structure that specifies the area of the target DC in which to draw.</param>
            <param name="dwFormat">The format of the buffer.</param>
            <param name="pPaintParams">A pointer to a structure that defines the paint operation parameters. This value can be NULL.</param>
            <param name="pAnimationParams">A pointer to a structure that defines the animation operation parameters.</param>
            <param name="phdcFrom">When this function returns, this value points to the handle of the DC where the application should paint the initial state of the animation, if not NULL.</param>
            <param name="phdcTo">When this function returns, this value points to the handle of the DC where the application should paint the final state of the animation, if not NULL.</param>
            <returns>A handle to the buffered paint animation.</returns>
            <remarks>BeginBufferedAnimation will take care of drawing the intermediate frames between those two states by generating multiple WM_PAINT messages.
            BeginBufferedAnimation starts a timer that generates WM_PAINT messages on which BufferedPaintRenderAnimation should be called. During these messages, BufferedPaintRenderAnimation will return TRUE when it paints an intermediate frame, to signify that the application has no further painting to do.
            If the animation duration is zero, then only phdcTo is returned and phdcFrom is set to NULL. In this case, the application should paint the final state using phdcTo to get the behavior similar to BeginBufferedPaint.</remarks>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.UxTheme.EndBufferedAnimation(System.IntPtr,System.Boolean)">
            <summary>
            Renders the first frame of a buffered animation operation and starts the animation timer.
            </summary>
            <param name="hbpAnimation">The handle to the buffered animation context that was returned by BeginBufferedAnimation.</param>
            <param name="fUpdateTarget">If TRUE, updates the target DC with the animation. If FALSE, the animation is not started, the target DC is not updated, and the hbpAnimation parameter is freed.</param>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.UxTheme.BufferedPaintRenderAnimation(System.IntPtr,System.IntPtr)">
            <summary>
            Paints the next frame of a buffered paint animation.
            </summary>
            <param name="hwnd">Handle to the window in which the animations play.</param>
            <param name="hdcTarget">Handle of the target DC on which the buffer is animated.</param>
            <returns>Returns TRUE if the frame has been painted, or FALSE otherwise.</returns>
            <remarks>
            If this function returns TRUE, the application should do no further painting. If this function returns FALSE, the application should paint normally.
            An application calls this function within its WM_PAINT handler. After BufferedPaintRenderAnimation paints an animation frame, an application will typically continue without performing its usual painting operations. If appropriate, an application may choose to render additional user interface (UI) over the top of the animation. The following code example, to be included as part of a larger body of code, shows how to use the animation painting functions.
            </remarks>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.UxTheme.BufferedPaintStopAllAnimations(System.IntPtr)">
            <summary>
            Stops all buffered animations for the given window.
            </summary>
            <param name="hwnd">The handle of the window in which to stop all animations.</param>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.UxTheme.OpenThemeData(System.IntPtr,System.String)">
            <summary>
            Opens the theme data for a window and its associated class.
            </summary>
            <param name="hwnd">Handle of the window for which theme data is required.</param>
            <param name="pszClassList">Pointer to a string that contains a semicolon-separated list of classes.</param>
            <returns>OpenThemeData tries to match each class, one at a time, to a class data section in the active theme. If a match is found, an associated HTHEME handle is returned. If no match is found NULL is returned.</returns>
        </member>
        <member name="M:KGySoft.WinForms.WinApi.UxTheme.GetThemeTransitionDuration(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the duration for the specified transition.
            </summary>
            <param name="hTheme">Handle of the theme data.</param>
            <param name="iPartId">ID of the part.</param>
            <param name="iStateIdFrom">State ID of the part before the transition.</param>
            <param name="iStateIdTo">State ID of the part after the transition.</param>
            <param name="iPropId">Property ID.</param>
            <param name="pdwDuration">Address of a variable that receives the transition duration, in milliseconds.</param>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="P:KGySoft.WinForms.WinApi.WindowsUtils.IsComCtlV6Available">
            <summary>
            Gets whether comctl32.dll V6 is available, without loading it explicitly.
            After all tells, whether <see cref="M:System.Windows.Forms.Application.EnableVisualStyles"/> was already called in this current application.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.Screenshot">
            <summary>
            Provides a class for capturing screenshots.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.Screenshot.CaptureScreenshot(System.Drawing.Rectangle)">
            <summary>
            Takes a screenshot of the given bounds.
            </summary>
            <returns>The <see cref="T:System.Drawing.Image"/> of the screenshot</returns>
        </member>
        <member name="M:KGySoft.WinForms.Screenshot.CaptureScreenshot">
            <summary>
            Takes a screenshot of all of the screens.
            </summary>
            <returns>The <see cref="T:System.Drawing.Image"/> of the screenshot</returns>
        </member>
        <member name="T:KGySoft.WinForms.HyperlinkResolveMode">
            <summary>
            Represents hyperlink resolve modes
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.HyperlinkResolveMode.None">
            <summary>
            Hyperlinks are not resolved.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.HyperlinkResolveMode.ResolveHrefsOnly">
            <summary>
            Only explicit hyperlinks are resolved, such as <c><example>&gt;a href="http://kgysoft.try.hu"&lt;link&gt;/a&lt;</example></c>
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.HyperlinkResolveMode.ResolveAll">
            <summary>
            Every URLs are resolved in text.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.ProgressBarState">
            <summary>
            Represents possible progress bar states.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.ProgressBarState.Normal">
            <summary>
            Indicates the normal progress bar state.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.ProgressBarState.Error">
            <summary>
            Indicates the error progress bar state.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.ProgressBarState.Paused">
            <summary>
            Indicates the paused progress bar state.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.SelectionPlusItems">
            <summary>
            Defines flags for extra combo items.
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.SelectionPlusItems.None">
            <summary>
            Represents no extra items
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.SelectionPlusItems.ItemNotSelected">
            <summary>
            Represents the "Not Selected" item
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.SelectionPlusItems.ItemAll">
            <summary>
            Represents the "All" item
            </summary>
        </member>
        <member name="F:KGySoft.WinForms.SelectionPlusItems.ItemNone">
            <summary>
            Represents the "None" item
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.HyperlinkClickedEventArgs">
            <summary>
            Contains arguments of <see cref="E:KGySoft.WinForms.Components.TaskDialog.HyperlinkClicked"/> and <see cref="E:KGySoft.WinForms.Controls.AdvancedLabel.HyperlinkClicked"/> events.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.HyperlinkClickedEventArgs.Hyperlink">
            <summary>
            Gets the hyperlink that was clicked. If resolving was not handled,
            the <see cref="P:System.ComponentModel.HandledEventArgs.Handled"/> property can be set to <see langword="false"/>
            to make the system resolve the hyperlink.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.ContentAlignmentExtensions">
            <summary>
            Extension methods for <see cref="T:System.Drawing.ContentAlignment"/> enumeration.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ContentAlignmentExtensions.RtlTranslateContent(System.Drawing.ContentAlignment,System.Windows.Forms.Control)">
            <summary>
            Calls the protected <see cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)"/> method as it was a public method.
            </summary>
            <param name="alignment">The alignment to translate if needed.</param>
            <param name="instance">The <see cref="T:System.Windows.Forms.Control"/> instance.</param>
            <returns></returns>
        </member>
        <member name="M:KGySoft.WinForms.ContentAlignmentExtensions.AnyLeft(System.Drawing.ContentAlignment)">
            <summary>
            Gets if any left alignment is set in <paramref name="contentAlignment"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ContentAlignmentExtensions.AnyTop(System.Drawing.ContentAlignment)">
            <summary>
            Gets if any top alignment is set in <paramref name="contentAlignment"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ContentAlignmentExtensions.AnyBottom(System.Drawing.ContentAlignment)">
            <summary>
            Gets if any bottom alignment is set in <paramref name="contentAlignment"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ContentAlignmentExtensions.AnyMiddle(System.Drawing.ContentAlignment)">
            <summary>
            Gets if any middle alignment is set in <paramref name="contentAlignment"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ContentAlignmentExtensions.AnyRight(System.Drawing.ContentAlignment)">
            <summary>
            Gets if any right alignment is set in <paramref name="contentAlignment"/>.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ContentAlignmentExtensions.AnyCenter(System.Drawing.ContentAlignment)">
            <summary>
            Gets if any center alignment is set in <paramref name="contentAlignment"/>.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.ControlExtensions">
            <summary>
            Extension methods for <see cref="T:System.Windows.Forms.Control"/> class.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ControlExtensions.StoreValues(System.Windows.Forms.Control)">
            <summary>
            Stores values of all controls derived from <see cref="T:KGySoft.WinForms.Controls.ucBase"/> to mark modified controls.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ControlExtensions.ClearStoredValues(System.Windows.Forms.Control)">
            <summary>
            Clears stored values of all controls derived from <see cref="T:KGySoft.WinForms.Controls.ucBase"/> to unmark modified controls.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ControlExtensions.SetControlEnabled(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Sets enabled state of the passed <paramref name="control"/> by
            setting its <see cref="P:System.Windows.Forms.Control.Enabled"/> property along with its non-container children recursively.
            By this way pages of a <see cref="T:System.Windows.Forms.TabControl"/> will remain selectable, a <see cref="T:System.Windows.Forms.SplitContainer"/> remains resizable, etc.
            </summary>
            <param name="control">The root control.</param>
            <param name="enabled">The enabled state to set.</param>
        </member>
        <member name="M:KGySoft.WinForms.ControlExtensions.SetControlReadonly(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Recursively sets read-only state for the children of the passed <paramref name="control"/>.
            Affects <see cref="T:System.Windows.Forms.TextBoxBase"/>, <see cref="T:KGySoft.WinForms.Controls.AdvancedComboBox"/> and <see cref="T:KGySoft.WinForms.Controls.ucBase"/> instances.
            </summary>
            <param name="control">The root control.</param>
            <param name="readOnly">The read-only state to set.</param>
        </member>
        <member name="M:KGySoft.WinForms.ControlExtensions.GetFormatFlags(System.Windows.Forms.Control)">
            <summary>
            Gets formatting flags for a custom drawn control.
            </summary>
            <param name="c">The control to be drawn.</param>
            <returns>Format flags for drawing the text of the control.</returns>
        </member>
        <member name="M:KGySoft.WinForms.ControlExtensions.SetDoubleBuffered(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Sets the double buffering state of a control
            </summary>
            <param name="control">The control to set.</param>
            <param name="useDoubleBuffering"><see langword="true"/>, if <paramref name="control"/> should use double buffering; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="M:KGySoft.WinForms.ControlExtensions.SetStyle(System.Windows.Forms.Control,System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>
            Sets a specified <see cref="T:System.Windows.Forms.ControlStyles"/> flag to either true or false.
            </summary>
            <param name="control">The control to set.</param>
            <param name="flags">The <see cref="T:System.Windows.Forms.ControlStyles"/> bits to set.</param>
            <param name="value">true to apply the specified style to the control; otherwise, false.</param>
        </member>
        <member name="T:KGySoft.WinForms.ListControlExtensions">
            <summary>
            Extension methods for <see cref="T:System.Windows.Forms.ListControl"/> class.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.IsEmpty(System.Windows.Forms.ListControl)">
            <summary>
            Gets whether the there is no selected item in the list control (<see cref="P:System.Windows.Forms.ListControl.SelectedValue"/> or is <see langword="null"/>, <see cref="T:System.DBNull"/> or equals with <see cref="F:KGySoft.WinForms.ControlExtensions.NotSelectedValue"/>)
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.SetAllowDBNull(System.Data.DataTable,System.Data.DataColumn,System.Data.DataColumn)">
            <summary>
            Allows DBNull for non display/value columns.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom(System.Windows.Forms.ListControl,System.Data.DataTable,System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="dataTable">The data source table. If <paramref name="translateNames"/> is <see langword="true"/>&#160;or <paramref name="plusItems"/> is not <see cref="F:KGySoft.WinForms.SelectionPlusItems.None"/>, then the data table will be modified.
            If the source table must be kept intact, then clone the table before calling this method by <see cref="M:System.Data.DataTable.Clone"/>.</param>
            <param name="displayMember">Column name to display in the the list control.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the list control.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. Works only if the displayed column contains string values.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type and the displayed column must have string data type.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom(System.Windows.Forms.ListControl,System.Data.DataTable,System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the list control.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the list control.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom(System.Windows.Forms.ListControl,System.Data.DataTable,System.String,System.String)">
            <summary>
            Binds the list control to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and translated.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the list control.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the list control.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom(System.Windows.Forms.ListControl,System.Type,System.Type,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds list control box to the values of an <see cref="T:System.Enum"/>.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the list control. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="translateNames">Indicates whether the displayed enum field names should be translated.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom(System.Windows.Forms.ListControl,System.Type,System.Type,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the list control. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom(System.Windows.Forms.ListControl,System.Type,System.Type)">
            <summary>
            Binds list control box to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the list control. If <see langword="null"/>, then original enum value will used as value member.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom(System.Windows.Forms.ListControl,System.Type)">
            <summary>
            Binds the list control to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom``1(System.Windows.Forms.ListControl,System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to a <paramref name="collection"/>.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the list control.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the list control.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, <paramref name="displayMember"/> must be writable and should refer to a <see cref="T:System.String"/> property.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom``1(System.Windows.Forms.ListControl,System.Collections.Generic.IEnumerable{``0},System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to a <paramref name="collection"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the list control.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the list control.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.ListControlExtensions.LoadFrom``1(System.Windows.Forms.ListControl,System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Binds list control box to a <paramref name="collection"/>. Items will not be sorted and translated.
            </summary>
            <param name="control">The target <see cref="T:System.Windows.Forms.ListControl"/> instance.</param>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the list control.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the list control.</param>
        </member>
        <member name="T:KGySoft.WinForms.TreeNodeExtensions">
            <summary>
            Extension methods on <see cref="T:System.Windows.Forms.TreeNode"/> class.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.TreeNodeExtensions.NextNodeDepth(System.Windows.Forms.TreeNode)">
            <summary>
            Obtaining next node by depth search
            </summary>
            <param name="tn">Start node</param>
            <returns>Next node or null of next node not found.</returns>
        </member>
        <member name="M:KGySoft.WinForms.TreeNodeExtensions.NextNodeDepthFromRoot(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
            <summary>
            Obtaining next node by depth search but only under <paramref name="searchRoot"/>.
            </summary>
            <param name="tn">Start node</param>
            <param name="searchRoot">Root node above which searching is not performed</param>
            <returns>Next node or null of next node not found.</returns>
        </member>
        <member name="M:KGySoft.WinForms.TreeNodeExtensions.NextNodeDepth(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
            <summary>
            Obtaining next node by depth search
            </summary>
            <param name="tn">Current node</param>
            <param name="searchRoot">Search root node</param>
        </member>
        <member name="T:KGySoft.WinForms.IListControl">
            <summary>
            Represents a list control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.IsEmpty">
            <summary>
            Gets whether the there is no selected item in the list control (<see cref="P:KGySoft.WinForms.IListControl.SelectedValue"/> is <see langword="null"/>, <see cref="T:System.DBNull"/> or equals with <see cref="F:KGySoft.WinForms.ControlExtensions.NotSelectedValue"/>)
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.Text">
            <summary>
            Gets or sets the selected item(s) of the list control.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom(System.Data.DataTable,System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="dataTable">The data source table. If <paramref name="translateNames"/> is <see langword="true"/>&#160;or <paramref name="plusItems"/> is not <see cref="F:KGySoft.WinForms.SelectionPlusItems.None"/>, then the data table will be modified.
            If the source table must be kept intact, then clone the table before calling this method by <see cref="M:System.Data.DataTable.Clone"/>.</param>
            <param name="displayMember">Column name to display in the the list control.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the list control.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, the displayed column must contain string values.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom(System.Data.DataTable,System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the list control.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the list control.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the value column must have a data type that is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom(System.Data.DataTable,System.String,System.String)">
            <summary>
            Binds the list control to a <see cref="T:System.Data.DataTable"/>. Items will not be sorted and translated.
            </summary>
            <param name="dataTable">The data source table.</param>
            <param name="displayMember">Column name to display in the the list control.</param>
            <param name="valueMember">Column name to use as the actual value for the items in the list control.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom(System.Type,System.Type,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to the values of an <see cref="T:System.Enum"/>.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the list control. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="translateNames">Indicates whether the displayed enum field names should be translated.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom(System.Type,System.Type,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the list control. If <see langword="null"/>, then original enum value will used as value member.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemAll"/> or <see cref="F:KGySoft.WinForms.SelectionPlusItems.ItemNone"/> is requested,
            then the <paramref name="valueMemberType"/> must be a signed integer type or an enum with signed underlying type.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom(System.Type,System.Type)">
            <summary>
            Binds the list control to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
            <param name="valueMemberType">Type of the actual value for the items in the list control. If <see langword="null"/>, then original enum value will used as value member.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom(System.Type)">
            <summary>
            Binds the list control to the values of an <see cref="T:System.Enum"/>. Items will not be sorted and translated.
            </summary>
            <param name="enumType">An <see cref="T:System.Enum"/> type with the fields to bind.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Boolean,System.String,System.Boolean,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to a <paramref name="collection"/>.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the list control.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the list control.</param>
            <param name="translateNames">Indicates whether the displayed values should be translated. If so, <paramref name="displayMember"/> must be writable and should refer to a <see cref="T:System.String"/> property.</param>
            <param name="distinctionPostfix">Distinction postfix for translated items. Can be <see langword="null"/>&#160;to omit distinction.</param>
            <param name="sortByDisplayedValues">If <see langword="true"/>, then items will be sorted by displayed values. Requested <paramref name="plusItems"/> will always be the first items.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,KGySoft.WinForms.SelectionPlusItems)">
            <summary>
            Binds the list control to a <paramref name="collection"/>. Items will not be sorted and only the <paramref name="plusItems"/> will be translated.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the list control.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the list control.</param>
            <param name="plusItems">Requested additional items (Not selected/All/None). If plus itmes are requested, then <paramref name="valueMember"/> must refer to a property,
            which is convertible to signed integer type.</param>
        </member>
        <member name="M:KGySoft.WinForms.IListControl.LoadFrom``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Binds the list control to a <paramref name="collection"/>. Items will not be sorted and translated.
            </summary>
            <param name="collection">The source collection.</param>
            <param name="displayMember">Property name to display in the the list control.</param>
            <param name="valueMember">Property name to use as the actual value for the items in the list control.</param>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.SelectedItem">
            <summary>
            Gets or sets currently selected item in the list control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.SelectedValue">
            <summary>
            Gets or sets the value of the member property specified by the <see cref="P:KGySoft.WinForms.IListControl.ValueMember"/> property.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.SelectedText">
            <summary>
            Gets or sets the text that is selected in the editable portion of a list control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.SelectedIndex">
            <summary>
            Gets or sets the index specifying the currently selected item.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.IListControl.SelectedIndexChanged">
            <summary>
            Occurs when the <see cref="P:KGySoft.WinForms.IListControl.SelectedIndex"/> property has changed.
            </summary>
        </member>
        <member name="E:KGySoft.WinForms.IListControl.SelectedValueChanged">
            <summary>
            Occurs when the <see cref="P:KGySoft.WinForms.IListControl.SelectedValue"/> property changes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.DataSource">
            <summary>
            Gets or sets the data source for the list control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.DisplayMember">
            <summary>
            Gets or sets the property to display for the list control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.ValueMember">
            <summary>
            Gets or sets the property to use as the actual value for the items in the list control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.AutoCompleteMode">
            <summary>
            Gets or sets an option that controls how automatic completion works for the inner list control.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.AutoCompleteSource">
            <summary>
             Gets or sets a value specifying the source of complete strings used for automatic completion.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IListControl.AutoCompleteCustomSource">
            <summary>
             Gets or sets a custom <see cref="T:System.Windows.Forms.AutoCompleteStringCollection"/> to <see cref="P:KGySoft.WinForms.IListControl.AutoCompleteSource"/> property is <see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource"/>.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.IReadOnlyCapable">
            <summary>
            Represents a read-only capable control
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.IReadOnlyCapable.ReadOnly">
            <summary>
            Gets or sets read-only status of the control.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.ISupportsFading`1">
            <summary>
            Represents a control that supports fading animations based on a custom state type.
            </summary>
            <typeparam name="TState">A type that represents the state of the object. It should be meningfully equatable.</typeparam>
            <remarks>
            A <see cref="T:KGySoft.WinForms.Controls.FadingPainter`1"/> instance should be created along with the control.
            Double buffering should be disabled, otherwise animations will not work. To avoid
            flickering do not draw anything in overridden <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)"/>.
            Override <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)"/> and call <see cref="M:KGySoft.WinForms.Controls.FadingPainter`1.Paint(System.Windows.Forms.PaintEventArgs)"/>
            from there, which uses double buffering internally. That will invoke <see cref="M:KGySoft.WinForms.ISupportsFading`1.PaintState(`0,System.Windows.Forms.PaintEventArgs)"/>
            where the control should be painted with specified state.
            </remarks>
        </member>
        <member name="P:KGySoft.WinForms.ISupportsFading`1.FadingAnimationsEnabled">
            <summary>
            Gets or sets whether fading animations are enabled for the control.
            Animations work in Windows Vista and above, with non-classic themes.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.ISupportsFading`1.State">
            <summary>
            Gets the current state of the object. When changes the control should be invalidated.
            When the control is needed to be repainted but there is no state difference, no animation will be performed.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.ISupportsFading`1.FadingAnimationDefaultSpeed">
            <summary>
            Gets or sets default fading animation speed in milliseconds. 0 means immediate change.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ISupportsFading`1.GetFadingAnimationSpeed(`0,`0)">
            <summary>
            Gets speed of the animation between two specified states in milliseconds.
            </summary>
            <param name="stateFrom">Old state.</param>
            <param name="stateTo">New state.</param>
            <returns>Fading animation speed in milliseconds. Zero means immediate change. Less than zero
            means <see cref="P:KGySoft.WinForms.ISupportsFading`1.FadingAnimationDefaultSpeed"/> should be used.</returns>
        </member>
        <member name="M:KGySoft.WinForms.ISupportsFading`1.PaintState(`0,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Implementer should perform any painting operation here with provided state.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.ISupportsFadingInternal.FadingAnimationOptions">
            <summary>
            Gets or sets fading options of the control.
            </summary>
        </member>
        <member name="T:KGySoft.WinForms.ITaskDialog">
            <summary>
            Represents a task dialog implementation.
            </summary>
        </member>
        <member name="P:KGySoft.WinForms.ITaskDialog.ShowState">
            <summary>
            Gets the state of the dialog. When it is <see cref="F:KGySoft.WinForms.Components.TaskDialogStatus.Initializing"/>, property changing is not allowed in host <see cref="T:KGySoft.WinForms.Components.TaskDialog"/>.
            Changing notifications will be forwarded to the implementation in <see cref="F:KGySoft.WinForms.Components.TaskDialogStatus.Showing"/> and <see cref="F:KGySoft.WinForms.Components.TaskDialogStatus.Closing"/> states.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ITaskDialog.Execute(KGySoft.WinForms.Components.TaskDialog,System.IntPtr,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Executes the dialog (blocking call is expected).
            </summary>
            <param name="taskDialog">The host <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> instance.</param>
            <param name="owner">Owner window handle (if any)</param>
            <param name="selectedButtonIndex">Zero based index of the custom button that closed the dialog, or -1 if the dialog was not closed by a custom button.</param>
            <param name="selectedRadioButtonIndex">Zero based index of the selected radio button, or -1 if there was no selected radio button.</param>
            <param name="checkBoxChecked">A value that indicated whether the verification checkbox was checked when the dialog was closed.</param>
            <returns>A <see cref="T:KGySoft.WinForms.Components.TaskDialogResult"/> value that identifies the standard button that caused the closing of the dialog. If <see cref="F:KGySoft.WinForms.Components.TaskDialogResult.Custom"/>, then refer <paramref name="selectedButtonIndex"/>.</returns>
        </member>
        <member name="M:KGySoft.WinForms.ITaskDialog.Close(KGySoft.WinForms.Components.TaskDialogResult)">
            <summary>
            Closes the dialog with the preferred result.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ITaskDialog.PropertyChanged(System.String)">
            <summary>
            Indicates that a <see cref="T:KGySoft.WinForms.Components.TaskDialog"/> property has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ITaskDialog.ControlPropertyChanged(KGySoft.WinForms.Components.TaskDialogControl,System.String)">
            <summary>
            Indicates that a <see cref="T:KGySoft.WinForms.Components.TaskDialogControl"/> property has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ITaskDialog.CustomButtonsChanged(KGySoft.WinForms.Components.TaskDialogControlCollectionChangeTypes,System.Int32)">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Components.TaskDialog.Buttons"/> collection has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ITaskDialog.RadioButtonsChanged(KGySoft.WinForms.Components.TaskDialogControlCollectionChangeTypes,System.Int32)">
            <summary>
            Indicates that <see cref="P:KGySoft.WinForms.Components.TaskDialog.RadioButtons"/> collection has been changed.
            </summary>
        </member>
        <member name="M:KGySoft.WinForms.ITaskDialog.TimerChanged(System.Boolean)">
            <summary>
            Indicates that the timer should be started or stopped.
            </summary>
        </member>
        <member name="T:KGySoft.Controls.Design.ucCaptionedContainerSerializer">
            <summary>
            Serializes <see cref="T:KGySoft.WinForms.Controls.ucCaptionedContainer"/> along with its children.
            </summary>
        </member>
        <member name="T:KGySoft.Libraries.Language.ICustomTranslated">
            <summary>
            Makes a control custom translatable. See <see cref="T:KGySoft.Libraries.Language.Language"/>.
            </summary>
        </member>
        <member name="M:KGySoft.Libraries.Language.ICustomTranslated.TranslateControl(System.Boolean@)">
            <summary>
            Tanslates the control.
            </summary>
            <param name="translationFinished">If an implementer returns true, no further translation will be performed on child elements.</param>
            <returns>Should return false is translation is disabled for the control for some internal reason, otherwise, true. </returns>
        </member>
        <member name="T:KGySoft.Libraries.Language.Language">
            <summary>
            A class that makes localization possible in a very simple way, without the need of additional .dll files.
            Resources are stored in .resx files, which can be both read and created on-the-fly.
            Dynamic expansion of dictionaries are supported, including create new dictionaries for new languages.
            </summary>
            <seealso cref="M:KGySoft.Libraries.Language.Language.Translate(System.String)"/>
            <seealso cref="M:KGySoft.Libraries.Language.Language.Translate(System.String,System.Object[])"/>
            <seealso cref="F:KGySoft.Libraries.Language.Language.DistinctionSeparator"/>
            <seealso cref="!:ActiveLanguage"/>
            <seealso cref="T:KGySoft.Libraries.Language.ICustomTranslated"/>
        </member>
        <member name="F:KGySoft.Libraries.Language.Language.DistinctionSeparator">
            <summary>
            Indicates a distinction part of the string that will be removed on translation.
            Using DistinctionSeparator with a custom postfix makes possible store different
            translations for the same words or texts in different occasions.
            </summary>
        </member>
        <member name="M:KGySoft.Libraries.Language.Language.Translate(System.String)">
            <summary>
            Translates the given invariant text to the currently set <see cref="!:ActiveLanguage"/>.
            </summary>
            <param name="text">The text to translate.</param>
        </member>
        <member name="M:KGySoft.Libraries.Language.Language.Translate(System.String,System.Object[])">
            <summary>
            Translates the invariant text containing placeholders using the culture
            of currently set <see cref="!:ActiveLanguage"/>
            </summary>
            <param name="text">Invariant text with placeholders.</param>
            <param name="args">Arguments for placeholders.</param>
            <returns></returns>
        </member>
        <member name="M:KGySoft.Libraries.Language.Language.MarkLocalizable(System.Boolean,System.Object[])">
            <summary>
            Makes translation enabled or disabled for given objects.
            </summary>
            <param name="objects">The objects that are subjects of translation marking.</param>
            <param name="translationEnabled">True if translation is enabled for the object, otherwise, false.</param>
            <remarks>
            <note>
            "Unmarking" objects is not neccessary because this method does not keep any reference of the marked objects.
            In other words, using this method does not disturb garbage collection and causes no memory leak.
            </note>
            </remarks>
        </member>
        <member name="M:KGySoft.Libraries.Language.Language.IsObjectLocalizable(System.Object)">
            <summary>
            Gets whether an object is localizable. By default an object is localizable.
            This can be changed either by making a type not localizable with <see cref="T:System.ComponentModel.LocalizableAttribute"/>
            or by <see cref="M:KGySoft.Libraries.Language.Language.MarkLocalizable(System.Boolean,System.Object[])"/> method wich works also at runtime.
            </summary>
        </member>
        <member name="M:KGySoft.Libraries.Language.Language.IsPropertyLocalizable(System.Object,System.String)">
            <summary>
            Gets whether a property is localizable. By default a property is not localizable unless it is marked
            by <see cref="T:System.ComponentModel.LocalizableAttribute"/>.
            </summary>
            <remarks>
            A property is not considered localizable by default, because here only properties with LocalizableAttribute shuold be checked.
            <note>Checking whether a property is localizable in a .NET framework class could be needed only in case of virtual properties.</note>
            </remarks>
        </member>
        <member name="M:KGySoft.Libraries.Language.Language.RemoveDistinctionSeparator(System.String)">
            <summary>
            Removes distinction separator from the end of invariant text.
            </summary>
        </member>
    </members>
</doc>
